[
  {
    "vulnerabilities": [],
    "ok": true,
    "dependencyCount": 247,
    "org": "refoo0",
    "policy": "# Snyk (https://snyk.io) policy file, patches or ignores known vulnerabilities.\nversion: v1.25.1\nignore: {}\npatch: {}\n",
    "isPrivate": true,
    "licensesPolicy": {
      "severities": {},
      "orgLicenseRules": {
        "AGPL-1.0": {
          "licenseType": "AGPL-1.0",
          "severity": "high",
          "instructions": ""
        },
        "AGPL-3.0": {
          "licenseType": "AGPL-3.0",
          "severity": "high",
          "instructions": ""
        },
        "Artistic-1.0": {
          "licenseType": "Artistic-1.0",
          "severity": "medium",
          "instructions": ""
        },
        "Artistic-2.0": {
          "licenseType": "Artistic-2.0",
          "severity": "medium",
          "instructions": ""
        },
        "CDDL-1.0": {
          "licenseType": "CDDL-1.0",
          "severity": "medium",
          "instructions": ""
        },
        "CPOL-1.02": {
          "licenseType": "CPOL-1.02",
          "severity": "high",
          "instructions": ""
        },
        "EPL-1.0": {
          "licenseType": "EPL-1.0",
          "severity": "medium",
          "instructions": ""
        },
        "GPL-2.0": {
          "licenseType": "GPL-2.0",
          "severity": "high",
          "instructions": ""
        },
        "GPL-3.0": {
          "licenseType": "GPL-3.0",
          "severity": "high",
          "instructions": ""
        },
        "LGPL-2.0": {
          "licenseType": "LGPL-2.0",
          "severity": "medium",
          "instructions": ""
        },
        "LGPL-2.1": {
          "licenseType": "LGPL-2.1",
          "severity": "medium",
          "instructions": ""
        },
        "LGPL-3.0": {
          "licenseType": "LGPL-3.0",
          "severity": "medium",
          "instructions": ""
        },
        "MPL-1.1": {
          "licenseType": "MPL-1.1",
          "severity": "medium",
          "instructions": ""
        },
        "MPL-2.0": {
          "licenseType": "MPL-2.0",
          "severity": "medium",
          "instructions": ""
        },
        "MS-RL": {
          "licenseType": "MS-RL",
          "severity": "medium",
          "instructions": ""
        },
        "SimPL-2.0": {
          "licenseType": "SimPL-2.0",
          "severity": "high",
          "instructions": ""
        }
      }
    },
    "packageManager": "gomodules",
    "ignoreSettings": {
      "adminOnly": false,
      "reasonRequired": false,
      "disregardFilesystemIgnores": false,
      "autoApproveIgnores": false
    },
    "summary": "No known vulnerabilities",
    "filesystemPolicy": false,
    "uniqueCount": 0,
    "targetFile": "go.mod",
    "projectName": "github.com/syncthing/syncthing",
    "foundProjectCount": 1,
    "displayTargetFile": "go.mod",
    "hasUnknownVersions": false,
    "path": "app/syncthing/syncthing/syncthing"
  },
  {
    "vulnerabilities": [
      {
        "id": "SNYK-JS-ADMZIP-1065796",
        "title": "Directory Traversal",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
        "credit": [
          "cthackers"
        ],
        "semver": {
          "vulnerable": [
            "<0.5.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "0.5.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.4,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "adm-zip",
        "references": [
          {
            "url": "https://github.com/cthackers/adm-zip/commit/119dcad6599adccc77982feb14a0c7440fa63013",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.4,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:04:23.541864Z"
          }
        ],
        "description": "## Overview\n[adm-zip](https://www.npmjs.com/package/adm-zip) is a JavaScript implementation for zip data compression for NodeJS.\n\nAffected versions of this package are vulnerable to Directory Traversal. It could extract files outside the target folder.\n\n## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```\n\n## Remediation\nUpgrade `adm-zip` to version 0.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/cthackers/adm-zip/commit/119dcad6599adccc77982feb14a0c7440fa63013)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-22"
          ]
        },
        "packageName": "adm-zip",
        "proprietary": false,
        "creationTime": "2021-01-28T07:59:50.454879Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-01-28T07:59:22Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-02-15T17:04:18.109270Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T14:04:23.541864Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "decompress@0.2.5",
          "adm-zip@0.4.14"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "adm-zip",
        "version": "0.4.14"
      },
      {
        "id": "SNYK-JS-ANGULARCORE-1070902",
        "title": "Cross-site Scripting (XSS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:U/C:L/I:L/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<11.0.5",
            ">=11.1.0-next.0 <11.1.0-next.3"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "11.0.5",
          "11.1.0-next.3"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.9,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "@angular/core",
        "references": [
          {
            "url": "https://github.com/angular/angular/commit/0fc8466f1be392917e0c7e3448b2144d52286b56",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09",
            "title": "GitHub Commit 2"
          },
          {
            "url": "https://github.com/angular/angular/pull/40525",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
            "cvssV3BaseScore": 5.4,
            "modificationTime": "2024-03-11T09:49:20.588225Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 3.9,
            "modificationTime": "2024-03-11T09:53:56.245230Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:U/C:L/I:L/A:L",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.9,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:03:39.762449Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.4,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:20.588225Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:U/C:L/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.9,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:56.245230Z"
          }
        ],
        "description": "## Overview\n[@angular/core](https://www.npmjs.com/package/@angular/core) is a package that lets you write client-side web applications as if you had a smarter browser. It also lets you use HTML as your template language and lets you extend HTML’s syntax to express your application’s components clearly and succinctly.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) in development, with SSR enabled.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `@angular/core` to version 11.0.5, 11.1.0-next.3 or higher.\n## References\n- [GitHub Commit](https://github.com/angular/angular/commit/0fc8466f1be392917e0c7e3448b2144d52286b56)\n- [GitHub Commit 2](https://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09)\n- [GitHub PR](https://github.com/angular/angular/pull/40525)\n",
        "epssDetails": {
          "percentile": "0.34720",
          "probability": "0.00077",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-4231"
          ],
          "CWE": [
            "CWE-79"
          ]
        },
        "packageName": "@angular/core",
        "proprietary": false,
        "creationTime": "2021-02-09T16:38:25.910081Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-01-22T11:36:15Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-02-10T14:30:33Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:56.245230Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "@angular/core@9.1.0"
        ],
        "upgradePath": [
          false,
          "@angular/core@11.0.5"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "@angular/core",
        "version": "9.1.0"
      },
      {
        "id": "SNYK-JS-CHARTJS-1018716",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:U/RC:C",
        "credit": [
          "Alessio Della Libera (d3lla)"
        ],
        "semver": {
          "vulnerable": [
            "<2.9.4"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.9.4"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "chart.js",
        "references": [
          {
            "url": "https://github.com/chartjs/Chart.js/pull/7920",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:51:08.527122Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:U/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:59:23.191377Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:08.527122Z"
          }
        ],
        "description": "## Overview\n[chart.js](https://www.npmjs.com/package/chart.js) is a Simple HTML5 charts using the canvas element.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The options parameter is not properly sanitized when it is processed.\r\nWhen the options are processed, the existing options (or the defaults options) are deeply merged with provided options. However, during this operation, the keys of the object being set are not checked, leading to a prototype pollution.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `chart.js` to version 2.9.4 or higher.\n## References\n- [GitHub PR](https://github.com/chartjs/Chart.js/pull/7920)\n",
        "epssDetails": {
          "percentile": "0.88608",
          "probability": "0.01802",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2020-7746"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "GHSA": [
            "GHSA-h68q-55jf-x68w"
          ]
        },
        "packageName": "chart.js",
        "proprietary": true,
        "creationTime": "2020-10-15T12:39:12.542692Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-10-15T12:27:06Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-10-19T11:58:37Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:08.527122Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "chart.js@2.9.3"
        ],
        "upgradePath": [
          false,
          "chart.js@2.9.4"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "chart.js",
        "version": "2.9.3"
      },
      {
        "id": "SNYK-JS-COMPONENTFLATTEN-548907",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
        "credit": [
          "JHU System Security Lab"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "component-flatten",
        "references": [
          {
            "url": "https://github.com/componentjs/flatten.js/blob/1.0.0/index.js",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 6.3,
            "modificationTime": "2024-03-11T09:47:27.472998Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:56:53.551152Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 6.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:47:27.472998Z"
          }
        ],
        "description": "## Overview\n[component-flatten](https://www.npmjs.com/package/component-flatten) is a module that flattens a resolved component tree.\r\n\r\n**Note:** This package is deprecated.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The `a` function could be tricked into adding or modifying properties of `Object.prototype` using a `__proto__` payload.\r\n\r\n### PoC by JHU System Security Lab\r\n```js\r\nvar a = require(\"component-flatten\");\r\nvar tree = {ref:\"toString\",name:\"__proto__\"};\r\na(tree);\r\nconsole.log({}.toString);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nThere is no fixed version for `component-flatten`.\n\n## References\n- [Vulnerable Code](https://github.com/componentjs/flatten.js/blob/1.0.0/index.js)\n",
        "epssDetails": {
          "percentile": "0.33271",
          "probability": "0.00072",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2019-10794"
          ],
          "CWE": [
            "CWE-1321"
          ]
        },
        "packageName": "component-flatten",
        "proprietary": true,
        "creationTime": "2020-02-17T15:39:51.556510Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-02-17T15:34:45Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-02-17T16:18:16.002442Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:47:27.472998Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-flatten@1.0.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "component-flatten",
        "version": "1.0.1"
      },
      {
        "id": "SNYK-JS-COMPONENTFLATTEN-548907",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
        "credit": [
          "JHU System Security Lab"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "component-flatten",
        "references": [
          {
            "url": "https://github.com/componentjs/flatten.js/blob/1.0.0/index.js",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 6.3,
            "modificationTime": "2024-03-11T09:47:27.472998Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:56:53.551152Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 6.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:47:27.472998Z"
          }
        ],
        "description": "## Overview\n[component-flatten](https://www.npmjs.com/package/component-flatten) is a module that flattens a resolved component tree.\r\n\r\n**Note:** This package is deprecated.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The `a` function could be tricked into adding or modifying properties of `Object.prototype` using a `__proto__` payload.\r\n\r\n### PoC by JHU System Security Lab\r\n```js\r\nvar a = require(\"component-flatten\");\r\nvar tree = {ref:\"toString\",name:\"__proto__\"};\r\na(tree);\r\nconsole.log({}.toString);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nThere is no fixed version for `component-flatten`.\n\n## References\n- [Vulnerable Code](https://github.com/componentjs/flatten.js/blob/1.0.0/index.js)\n",
        "epssDetails": {
          "percentile": "0.33271",
          "probability": "0.00072",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2019-10794"
          ],
          "CWE": [
            "CWE-1321"
          ]
        },
        "packageName": "component-flatten",
        "proprietary": true,
        "creationTime": "2020-02-17T15:39:51.556510Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-02-17T15:34:45Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-02-17T16:18:16.002442Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:47:27.472998Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-flatten@1.0.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "component-flatten",
        "version": "1.0.1"
      },
      {
        "id": "SNYK-JS-COMPONENTFLATTEN-548907",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
        "credit": [
          "JHU System Security Lab"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "component-flatten",
        "references": [
          {
            "url": "https://github.com/componentjs/flatten.js/blob/1.0.0/index.js",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 6.3,
            "modificationTime": "2024-03-11T09:47:27.472998Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:56:53.551152Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 6.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:47:27.472998Z"
          }
        ],
        "description": "## Overview\n[component-flatten](https://www.npmjs.com/package/component-flatten) is a module that flattens a resolved component tree.\r\n\r\n**Note:** This package is deprecated.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The `a` function could be tricked into adding or modifying properties of `Object.prototype` using a `__proto__` payload.\r\n\r\n### PoC by JHU System Security Lab\r\n```js\r\nvar a = require(\"component-flatten\");\r\nvar tree = {ref:\"toString\",name:\"__proto__\"};\r\na(tree);\r\nconsole.log({}.toString);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nThere is no fixed version for `component-flatten`.\n\n## References\n- [Vulnerable Code](https://github.com/componentjs/flatten.js/blob/1.0.0/index.js)\n",
        "epssDetails": {
          "percentile": "0.33271",
          "probability": "0.00072",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2019-10794"
          ],
          "CWE": [
            "CWE-1321"
          ]
        },
        "packageName": "component-flatten",
        "proprietary": true,
        "creationTime": "2020-02-17T15:39:51.556510Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-02-17T15:34:45Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-02-17T16:18:16.002442Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:47:27.472998Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-flatten@1.0.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "component-flatten",
        "version": "1.0.1"
      },
      {
        "id": "SNYK-JS-COMPONENTFLATTEN-548907",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
        "credit": [
          "JHU System Security Lab"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "component-flatten",
        "references": [
          {
            "url": "https://github.com/componentjs/flatten.js/blob/1.0.0/index.js",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 6.3,
            "modificationTime": "2024-03-11T09:47:27.472998Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:56:53.551152Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 6.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:47:27.472998Z"
          }
        ],
        "description": "## Overview\n[component-flatten](https://www.npmjs.com/package/component-flatten) is a module that flattens a resolved component tree.\r\n\r\n**Note:** This package is deprecated.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The `a` function could be tricked into adding or modifying properties of `Object.prototype` using a `__proto__` payload.\r\n\r\n### PoC by JHU System Security Lab\r\n```js\r\nvar a = require(\"component-flatten\");\r\nvar tree = {ref:\"toString\",name:\"__proto__\"};\r\na(tree);\r\nconsole.log({}.toString);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nThere is no fixed version for `component-flatten`.\n\n## References\n- [Vulnerable Code](https://github.com/componentjs/flatten.js/blob/1.0.0/index.js)\n",
        "epssDetails": {
          "percentile": "0.33271",
          "probability": "0.00072",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2019-10794"
          ],
          "CWE": [
            "CWE-1321"
          ]
        },
        "packageName": "component-flatten",
        "proprietary": true,
        "creationTime": "2020-02-17T15:39:51.556510Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-02-17T15:34:45Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-02-17T16:18:16.002442Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:47:27.472998Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-flatten@1.0.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "component-flatten",
        "version": "1.0.1"
      },
      {
        "id": "SNYK-JS-COMPONENTFLATTEN-548907",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
        "credit": [
          "JHU System Security Lab"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "component-flatten",
        "references": [
          {
            "url": "https://github.com/componentjs/flatten.js/blob/1.0.0/index.js",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 6.3,
            "modificationTime": "2024-03-11T09:47:27.472998Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:56:53.551152Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 6.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:47:27.472998Z"
          }
        ],
        "description": "## Overview\n[component-flatten](https://www.npmjs.com/package/component-flatten) is a module that flattens a resolved component tree.\r\n\r\n**Note:** This package is deprecated.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The `a` function could be tricked into adding or modifying properties of `Object.prototype` using a `__proto__` payload.\r\n\r\n### PoC by JHU System Security Lab\r\n```js\r\nvar a = require(\"component-flatten\");\r\nvar tree = {ref:\"toString\",name:\"__proto__\"};\r\na(tree);\r\nconsole.log({}.toString);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nThere is no fixed version for `component-flatten`.\n\n## References\n- [Vulnerable Code](https://github.com/componentjs/flatten.js/blob/1.0.0/index.js)\n",
        "epssDetails": {
          "percentile": "0.33271",
          "probability": "0.00072",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2019-10794"
          ],
          "CWE": [
            "CWE-1321"
          ]
        },
        "packageName": "component-flatten",
        "proprietary": true,
        "creationTime": "2020-02-17T15:39:51.556510Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-02-17T15:34:45Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-02-17T16:18:16.002442Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:47:27.472998Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-flatten@1.0.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "component-flatten",
        "version": "1.0.1"
      },
      {
        "id": "SNYK-JS-COMPONENTFLATTEN-548907",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
        "credit": [
          "JHU System Security Lab"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "component-flatten",
        "references": [
          {
            "url": "https://github.com/componentjs/flatten.js/blob/1.0.0/index.js",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 6.3,
            "modificationTime": "2024-03-11T09:47:27.472998Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:56:53.551152Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 6.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:47:27.472998Z"
          }
        ],
        "description": "## Overview\n[component-flatten](https://www.npmjs.com/package/component-flatten) is a module that flattens a resolved component tree.\r\n\r\n**Note:** This package is deprecated.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The `a` function could be tricked into adding or modifying properties of `Object.prototype` using a `__proto__` payload.\r\n\r\n### PoC by JHU System Security Lab\r\n```js\r\nvar a = require(\"component-flatten\");\r\nvar tree = {ref:\"toString\",name:\"__proto__\"};\r\na(tree);\r\nconsole.log({}.toString);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nThere is no fixed version for `component-flatten`.\n\n## References\n- [Vulnerable Code](https://github.com/componentjs/flatten.js/blob/1.0.0/index.js)\n",
        "epssDetails": {
          "percentile": "0.33271",
          "probability": "0.00072",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2019-10794"
          ],
          "CWE": [
            "CWE-1321"
          ]
        },
        "packageName": "component-flatten",
        "proprietary": true,
        "creationTime": "2020-02-17T15:39:51.556510Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-02-17T15:34:45Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-02-17T16:18:16.002442Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:47:27.472998Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-build@1.2.2",
          "component-builder@1.2.1",
          "component-flatten@1.0.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "component-flatten",
        "version": "1.0.1"
      },
      {
        "id": "SNYK-JS-COOKIEJAR-3149984",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Carter Snook"
        ],
        "semver": {
          "vulnerable": [
            "<2.1.4"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.1.4"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "cookiejar",
        "references": [
          {
            "url": "https://github.com/bmeck/node-cookiejar/pull/39/commits/eaa00021caf6ae09449dde826108153b578348e5",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/bmeck/node-cookiejar/pull/39",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/bmeck/node-cookiejar/blob/master/cookiejar.js%23L73",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:49:38.324230Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:53.970713Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:07:13.570557Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:38.324230Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:53.970713Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `Cookie.parse` function, which uses an insecure regular expression.\r\n\r\n## PoC\r\n\r\n```js\r\nconst { CookieJar } = require(\"cookiejar\");\r\n\r\nconst jar = new CookieJar();\r\n\r\nconst start = performance.now();\r\nconst attack = \"a\" + \"t\".repeat(50_000);\r\njar.setCookie(attack);\r\nconsole.log(`CookieJar.setCookie(): ${performance.now() - start}`);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `cookiejar` to version 2.1.4 or higher.\n## References\n- [GitHub Commit](https://github.com/bmeck/node-cookiejar/pull/39/commits/eaa00021caf6ae09449dde826108153b578348e5)\n- [GitHub PR](https://github.com/bmeck/node-cookiejar/pull/39)\n- [Vulnerable Code](https://github.com/bmeck/node-cookiejar/blob/master/cookiejar.js#L73)\n",
        "epssDetails": {
          "percentile": "0.75710",
          "probability": "0.00444",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-25901"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "cookiejar",
        "proprietary": true,
        "creationTime": "2022-11-28T14:42:15.584171Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-11-28T14:39:11Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-12-27T12:34:16.450437Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:53.970713Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "superagent@0.17.0",
          "cookiejar@1.3.0"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "cookiejar",
        "version": "1.3.0"
      },
      {
        "id": "SNYK-JS-DECOMPRESS-557358",
        "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
        "credit": [
          "Oscar Arnflo"
        ],
        "semver": {
          "vulnerable": [
            "<4.2.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "4.2.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "decompress",
        "references": [
          {
            "url": "https://github.com/kevva/decompress/pull/73",
            "title": "GitHub Fix PR"
          },
          {
            "url": "https://github.com/kevva/decompress/issues/71",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/kevva/decompress-tar/pull/12",
            "title": "GitHub PR decompress-tar"
          },
          {
            "url": "https://www.npmjs.com/advisories/1217",
            "title": "NPM Advisory"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:50:22.598107Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:00:51.927791Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:50:22.598107Z"
          }
        ],
        "description": "## Overview\n[decompress](https://www.npmjs.com/package/decompress) is a package that can be used for extracting archives.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nUpgrade `decompress` to version 4.2.1 or higher.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
        "epssDetails": {
          "percentile": "0.79405",
          "probability": "0.00619",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2020-12265"
          ],
          "CWE": [
            "CWE-29"
          ],
          "NSP": [
            "1217"
          ],
          "GHSA": [
            "GHSA-qgfr-5hqp-vrw9"
          ]
        },
        "packageName": "decompress",
        "proprietary": false,
        "creationTime": "2020-02-27T10:34:55.291825Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2019-10-15T20:29:24Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-02-27T13:28:41Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:50:22.598107Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "decompress@0.2.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "decompress",
        "version": "0.2.5"
      },
      {
        "id": "SNYK-JS-FSTREAM-174725",
        "title": "Arbitrary File Overwrite",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        "credit": [
          "Max Justicz"
        ],
        "semver": {
          "vulnerable": [
            "<1.0.12"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "1.0.12"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [
          {
            "version": [
              ">0.0.0 <1.0.12"
            ],
            "functionId": {
              "filePath": "lib/writer.js",
              "className": null,
              "functionName": "Writer.prototype._stat.statCb"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "fstream",
        "references": [
          {
            "url": "https://github.com/npm/fstream/commit/6a77d2fa6e1462693cf8e46f930da96ec1b0bb22",
            "title": "GitHub Commit"
          },
          {
            "url": "https://www.npmjs.com/advisories/886",
            "title": "NPM Security Advisory"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:47:38.894809Z"
          },
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:49:57.537749Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:53:56.945545Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:01:21.906448Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:47:38.894809Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "SUSE",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:49:57.537749Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:56.945545Z"
          }
        ],
        "description": "## Overview\n[fstream](https://www.npmjs.com/package/fstream) is a package that supports advanced FS Streaming for Node.\n\nAffected versions of this package are vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hardlink to a file that already exists in the system and a file that matches the hardlink will overwrite the system's file with the contents of the extracted file.\n## Remediation\nUpgrade `fstream` to version 1.0.12 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/fstream/commit/6a77d2fa6e1462693cf8e46f930da96ec1b0bb22)\n- [NPM Security Advisory](https://www.npmjs.com/advisories/886)\n",
        "epssDetails": {
          "percentile": "0.62734",
          "probability": "0.00239",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2019-13173"
          ],
          "CWE": [
            "CWE-59"
          ],
          "NSP": [
            "886"
          ],
          "GHSA": [
            "GHSA-xf7w-r453-m56c"
          ]
        },
        "packageName": "fstream",
        "proprietary": false,
        "creationTime": "2019-05-15T17:00:15.452305Z",
        "functions_new": [
          {
            "version": [
              ">0.0.0 <1.0.12"
            ],
            "functionId": {
              "filePath": "lib/writer.js",
              "functionName": "Writer.prototype._stat.statCb"
            }
          }
        ],
        "alternativeIds": [],
        "disclosureTime": "2019-05-15T14:22:26Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2019-05-15T17:00:42Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:56.945545Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "decompress@0.2.5",
          "tar@0.1.20",
          "fstream@0.1.31"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "fstream",
        "version": "0.1.31"
      },
      {
        "id": "SNYK-JS-GOT-2932019",
        "title": "Open Redirect",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<11.8.5",
            ">=12.0.0 <12.1.0"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "11.8.5",
          "12.1.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.4,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "got",
        "references": [
          {
            "url": "https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0",
            "title": "GitHub Diff"
          },
          {
            "url": "https://github.com/sindresorhus/got/pull/2047",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:49:40.538405Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:59.174248Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.4,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:26.874968Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:40.538405Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:59.174248Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Open Redirect due to missing verification of requested URLs. It allowed a victim to be redirected to a UNIX socket.\n## Remediation\nUpgrade `got` to version 11.8.5, 12.1.0 or higher.\n## References\n- [GitHub Diff](https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0)\n- [GitHub PR](https://github.com/sindresorhus/got/pull/2047)\n",
        "epssDetails": {
          "percentile": "0.32713",
          "probability": "0.00071",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-33987"
          ],
          "CWE": [
            "CWE-601"
          ]
        },
        "packageName": "got",
        "proprietary": false,
        "creationTime": "2022-06-19T09:23:24.210132Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-06-19T08:33:16Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-06-19T15:33:44.269688Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:59.174248Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "decompress@0.2.5",
          "ext-name@1.0.1",
          "ext-list@0.2.0",
          "got@0.2.0"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "got",
        "version": "0.2.0"
      },
      {
        "id": "SNYK-JS-HTTPSPROXYAGENT-469131",
        "title": "Man-in-the-Middle (MitM)",
        "CVSSv3": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
        "credit": [
          "Kris Adler"
        ],
        "semver": {
          "vulnerable": [
            "<2.2.3"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.2.3"
        ],
        "patches": [
          {
            "id": "patch:SNYK-JS-HTTPSPROXYAGENT-469131:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/https-proxy-agent/20190929/https-proxy-agent_0_0_20190929.patch"
            ],
            "version": "=2.2.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.721480Z"
          },
          {
            "id": "patch:SNYK-JS-HTTPSPROXYAGENT-469131:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/https-proxy-agent/20190929/https-proxy-agent_0_1_20190929.patch"
            ],
            "version": "=2.2.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.723464Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.1,
        "functions": [
          {
            "version": [
              ">1.0.0 <2.2.3"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "HttpsProxyAgent.prototype.callback"
            }
          },
          {
            "version": [
              ">0.2.0 <=1.0.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "className": null,
              "functionName": "connect"
            }
          },
          {
            "version": [
              "<=0.2.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "className": null,
              "functionName": "HttpsProxyAgent.prototype.createConnection"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "https-proxy-agent",
        "references": [
          {
            "url": "https://github.com/TooTallNate/node-https-proxy-agent/commit/36d8cf509f877fa44f4404fce57ebaf9410fe51b",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/TooTallNate/node-https-proxy-agent/pull/77",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/541502",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:59:22.290989Z"
          }
        ],
        "description": "## Overview\n[https-proxy-agent](https://github.com/TooTallNate/node-https-proxy-agent#readme) is a module that provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in https module.\n\nAffected versions of this package are vulnerable to Man-in-the-Middle (MitM). When targeting a HTTP proxy, `https-proxy-agent` opens a socket to the proxy, and sends the proxy server a `CONNECT` request. If the proxy server responds with something other than a HTTP response `200`, `https-proxy-agent` incorrectly returns the socket without any TLS upgrade. This request data may contain basic auth credentials or other secrets, is sent over an unencrypted connection. A suitably positioned attacker could steal these secrets and impersonate the client.\r\n\r\n### PoC by Kris Adler\r\n\r\n```\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxyOpts = url.parse('http://127.0.0.1:80');\r\nvar opts = url.parse('https://www.google.com');\r\nvar agent = new HttpsProxyAgent(proxyOpts);\r\nopts.agent = agent;\r\nopts.auth = 'username:password';\r\nhttps.get(opts);\r\n```\n## Remediation\nUpgrade `https-proxy-agent` to version 2.2.3 or higher.\n## References\n- [GitHub Commit](https://github.com/TooTallNate/node-https-proxy-agent/commit/36d8cf509f877fa44f4404fce57ebaf9410fe51b)\n- [GitHub PR](https://github.com/TooTallNate/node-https-proxy-agent/pull/77)\n- [HackerOne Report](https://hackerone.com/reports/541502)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-300"
          ],
          "NSP": [
            "1184"
          ]
        },
        "packageName": "https-proxy-agent",
        "proprietary": false,
        "creationTime": "2019-09-26T10:01:07.677036Z",
        "functions_new": [
          {
            "version": [
              ">1.0.0 <2.2.3"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "HttpsProxyAgent.prototype.callback"
            }
          },
          {
            "version": [
              ">0.2.0 <=1.0.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "functionName": "connect"
            }
          },
          {
            "version": [
              "<=0.2.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "functionName": "HttpsProxyAgent.prototype.createConnection"
            }
          }
        ],
        "alternativeIds": [],
        "disclosureTime": "2019-09-25T08:21:57Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2019-10-02T08:08:11Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T13:59:22.290989Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "https-proxy-agent@0.3.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "https-proxy-agent",
        "version": "0.3.6"
      },
      {
        "id": "npm:https-proxy-agent:20180402",
        "title": "Uninitialized Memory Exposure",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H/E:F/RL:O/RC:C",
        "credit": [
          "ChALkeR"
        ],
        "semver": {
          "vulnerable": [
            "<2.2.0"
          ]
        },
        "exploit": "Functional",
        "fixedIn": [
          "2.2.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "https-proxy-agent",
        "references": [
          {
            "url": "https://hackerone.com/reports/319532",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
            "cvssV3BaseScore": 9.1,
            "modificationTime": "2024-03-11T09:48:31.334077Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H",
            "cvssV3BaseScore": 8.2,
            "modificationTime": "2024-03-11T09:51:22.137646Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H/E:F/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:24.959535Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:48:31.334077Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:51:22.137646Z"
          }
        ],
        "description": "## Overview\r\n[`https-proxy-agent`](https://www.npmjs.com/package/https-proxy-agent) provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in https module.\r\n\r\nAffected versions of this package are vulnerable to Uninitialized Memory Exposure and Denial of Service (DoS) attacks due to passing unsanitized options to Buffer(arg).\r\n\r\n**Note:**\r\nCVE-2018-3739 is a duplicate of CVE-2018-3736.\r\n\r\n\r\n## Uninitialized memory Exposre PoC by ChALKer\r\n```js\r\n// listen with: nc -l -p 8080\r\n\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxy = {\r\n  protocol: 'http:',\r\n  host: \"127.0.0.1\",\r\n  port: 8080\r\n};\r\n\r\nproxy.auth = 500; // a number as 'auth'\r\nvar opts = url.parse('https://example.com/');\r\nvar agent = new HttpsProxyAgent(proxy);\r\nopts.agent = agent;\r\nhttps.get(opts);\r\n```\r\n\r\n## Details\r\nThe Buffer class on Node.js is a mutable array of binary data, and can be initialized with a string, array or number.\r\n```js\r\nconst buf1 = new Buffer([1,2,3]);\r\n// creates a buffer containing [01, 02, 03]\r\nconst buf2 = new Buffer('test');\r\n// creates a buffer containing ASCII bytes [74, 65, 73, 74]\r\nconst buf3 = new Buffer(10);\r\n// creates a buffer of length 10\r\n```\r\n\r\nThe first two variants simply create a binary representation of the value it received. The last one, however, pre-allocates a buffer of the specified size, making it a useful buffer, especially when reading data from a stream.\r\nWhen using the number constructor of Buffer, it will allocate the memory, but will not fill it with zeros. Instead, the allocated buffer will hold whatever was in memory at the time. If the buffer is not `zeroed` by using `buf.fill(0)`, it may leak sensitive information like keys, source code, and system info.\r\n\r\n\r\n## Remediation\r\nUpgrade `https-proxy-agent` to version 2.2.0 or higher.\r\n**Note** This is vulnerable only for Node <=4\r\n\r\n## References\r\n- [HackerOne Report](https://hackerone.com/reports/319532)",
        "epssDetails": {
          "percentile": "0.80201",
          "probability": "0.00659",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-3739"
          ],
          "CWE": [
            "CWE-399"
          ],
          "NSP": [
            "593"
          ],
          "GHSA": [
            "GHSA-8g7p-74h8-hg48",
            "GHSA-qrg3-f6h6-vq8q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-HTTPSPROXYAGENT-12113",
            "SNYK-JS-HTTPSPROXYAGENT-12113",
            "npm:https-proxy-agent:20180402"
          ]
        },
        "packageName": "https-proxy-agent",
        "proprietary": false,
        "creationTime": "2018-02-25T06:36:33.413000Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-HTTPSPROXYAGENT-12113"
        ],
        "disclosureTime": "2018-04-02T06:36:33Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Functional",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-04-08T12:56:16Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:22.137646Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "https-proxy-agent@0.3.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "https-proxy-agent",
        "version": "0.3.6"
      },
      {
        "id": "SNYK-JS-HTTPSPROXYAGENT-469131",
        "title": "Man-in-the-Middle (MitM)",
        "CVSSv3": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
        "credit": [
          "Kris Adler"
        ],
        "semver": {
          "vulnerable": [
            "<2.2.3"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.2.3"
        ],
        "patches": [
          {
            "id": "patch:SNYK-JS-HTTPSPROXYAGENT-469131:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/https-proxy-agent/20190929/https-proxy-agent_0_0_20190929.patch"
            ],
            "version": "=2.2.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.721480Z"
          },
          {
            "id": "patch:SNYK-JS-HTTPSPROXYAGENT-469131:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/https-proxy-agent/20190929/https-proxy-agent_0_1_20190929.patch"
            ],
            "version": "=2.2.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.723464Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.1,
        "functions": [
          {
            "version": [
              ">1.0.0 <2.2.3"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "HttpsProxyAgent.prototype.callback"
            }
          },
          {
            "version": [
              ">0.2.0 <=1.0.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "className": null,
              "functionName": "connect"
            }
          },
          {
            "version": [
              "<=0.2.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "className": null,
              "functionName": "HttpsProxyAgent.prototype.createConnection"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "https-proxy-agent",
        "references": [
          {
            "url": "https://github.com/TooTallNate/node-https-proxy-agent/commit/36d8cf509f877fa44f4404fce57ebaf9410fe51b",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/TooTallNate/node-https-proxy-agent/pull/77",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/541502",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:59:22.290989Z"
          }
        ],
        "description": "## Overview\n[https-proxy-agent](https://github.com/TooTallNate/node-https-proxy-agent#readme) is a module that provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in https module.\n\nAffected versions of this package are vulnerable to Man-in-the-Middle (MitM). When targeting a HTTP proxy, `https-proxy-agent` opens a socket to the proxy, and sends the proxy server a `CONNECT` request. If the proxy server responds with something other than a HTTP response `200`, `https-proxy-agent` incorrectly returns the socket without any TLS upgrade. This request data may contain basic auth credentials or other secrets, is sent over an unencrypted connection. A suitably positioned attacker could steal these secrets and impersonate the client.\r\n\r\n### PoC by Kris Adler\r\n\r\n```\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxyOpts = url.parse('http://127.0.0.1:80');\r\nvar opts = url.parse('https://www.google.com');\r\nvar agent = new HttpsProxyAgent(proxyOpts);\r\nopts.agent = agent;\r\nopts.auth = 'username:password';\r\nhttps.get(opts);\r\n```\n## Remediation\nUpgrade `https-proxy-agent` to version 2.2.3 or higher.\n## References\n- [GitHub Commit](https://github.com/TooTallNate/node-https-proxy-agent/commit/36d8cf509f877fa44f4404fce57ebaf9410fe51b)\n- [GitHub PR](https://github.com/TooTallNate/node-https-proxy-agent/pull/77)\n- [HackerOne Report](https://hackerone.com/reports/541502)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-300"
          ],
          "NSP": [
            "1184"
          ]
        },
        "packageName": "https-proxy-agent",
        "proprietary": false,
        "creationTime": "2019-09-26T10:01:07.677036Z",
        "functions_new": [
          {
            "version": [
              ">1.0.0 <2.2.3"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "HttpsProxyAgent.prototype.callback"
            }
          },
          {
            "version": [
              ">0.2.0 <=1.0.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "functionName": "connect"
            }
          },
          {
            "version": [
              "<=0.2.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "functionName": "HttpsProxyAgent.prototype.createConnection"
            }
          }
        ],
        "alternativeIds": [],
        "disclosureTime": "2019-09-25T08:21:57Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2019-10-02T08:08:11Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T13:59:22.290989Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-search2@1.1.1",
          "cogent@0.4.3",
          "proxy-agent@1.1.1",
          "https-proxy-agent@0.3.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "https-proxy-agent",
        "version": "0.3.6"
      },
      {
        "id": "npm:https-proxy-agent:20180402",
        "title": "Uninitialized Memory Exposure",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H/E:F/RL:O/RC:C",
        "credit": [
          "ChALkeR"
        ],
        "semver": {
          "vulnerable": [
            "<2.2.0"
          ]
        },
        "exploit": "Functional",
        "fixedIn": [
          "2.2.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "https-proxy-agent",
        "references": [
          {
            "url": "https://hackerone.com/reports/319532",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
            "cvssV3BaseScore": 9.1,
            "modificationTime": "2024-03-11T09:48:31.334077Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H",
            "cvssV3BaseScore": 8.2,
            "modificationTime": "2024-03-11T09:51:22.137646Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H/E:F/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:24.959535Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:48:31.334077Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:51:22.137646Z"
          }
        ],
        "description": "## Overview\r\n[`https-proxy-agent`](https://www.npmjs.com/package/https-proxy-agent) provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in https module.\r\n\r\nAffected versions of this package are vulnerable to Uninitialized Memory Exposure and Denial of Service (DoS) attacks due to passing unsanitized options to Buffer(arg).\r\n\r\n**Note:**\r\nCVE-2018-3739 is a duplicate of CVE-2018-3736.\r\n\r\n\r\n## Uninitialized memory Exposre PoC by ChALKer\r\n```js\r\n// listen with: nc -l -p 8080\r\n\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxy = {\r\n  protocol: 'http:',\r\n  host: \"127.0.0.1\",\r\n  port: 8080\r\n};\r\n\r\nproxy.auth = 500; // a number as 'auth'\r\nvar opts = url.parse('https://example.com/');\r\nvar agent = new HttpsProxyAgent(proxy);\r\nopts.agent = agent;\r\nhttps.get(opts);\r\n```\r\n\r\n## Details\r\nThe Buffer class on Node.js is a mutable array of binary data, and can be initialized with a string, array or number.\r\n```js\r\nconst buf1 = new Buffer([1,2,3]);\r\n// creates a buffer containing [01, 02, 03]\r\nconst buf2 = new Buffer('test');\r\n// creates a buffer containing ASCII bytes [74, 65, 73, 74]\r\nconst buf3 = new Buffer(10);\r\n// creates a buffer of length 10\r\n```\r\n\r\nThe first two variants simply create a binary representation of the value it received. The last one, however, pre-allocates a buffer of the specified size, making it a useful buffer, especially when reading data from a stream.\r\nWhen using the number constructor of Buffer, it will allocate the memory, but will not fill it with zeros. Instead, the allocated buffer will hold whatever was in memory at the time. If the buffer is not `zeroed` by using `buf.fill(0)`, it may leak sensitive information like keys, source code, and system info.\r\n\r\n\r\n## Remediation\r\nUpgrade `https-proxy-agent` to version 2.2.0 or higher.\r\n**Note** This is vulnerable only for Node <=4\r\n\r\n## References\r\n- [HackerOne Report](https://hackerone.com/reports/319532)",
        "epssDetails": {
          "percentile": "0.80201",
          "probability": "0.00659",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-3739"
          ],
          "CWE": [
            "CWE-399"
          ],
          "NSP": [
            "593"
          ],
          "GHSA": [
            "GHSA-8g7p-74h8-hg48",
            "GHSA-qrg3-f6h6-vq8q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-HTTPSPROXYAGENT-12113",
            "SNYK-JS-HTTPSPROXYAGENT-12113",
            "npm:https-proxy-agent:20180402"
          ]
        },
        "packageName": "https-proxy-agent",
        "proprietary": false,
        "creationTime": "2018-02-25T06:36:33.413000Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-HTTPSPROXYAGENT-12113"
        ],
        "disclosureTime": "2018-04-02T06:36:33Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Functional",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-04-08T12:56:16Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:22.137646Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-search2@1.1.1",
          "cogent@0.4.3",
          "proxy-agent@1.1.1",
          "https-proxy-agent@0.3.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "https-proxy-agent",
        "version": "0.3.6"
      },
      {
        "id": "SNYK-JS-HTTPSPROXYAGENT-469131",
        "title": "Man-in-the-Middle (MitM)",
        "CVSSv3": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
        "credit": [
          "Kris Adler"
        ],
        "semver": {
          "vulnerable": [
            "<2.2.3"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.2.3"
        ],
        "patches": [
          {
            "id": "patch:SNYK-JS-HTTPSPROXYAGENT-469131:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/https-proxy-agent/20190929/https-proxy-agent_0_0_20190929.patch"
            ],
            "version": "=2.2.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.721480Z"
          },
          {
            "id": "patch:SNYK-JS-HTTPSPROXYAGENT-469131:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/https-proxy-agent/20190929/https-proxy-agent_0_1_20190929.patch"
            ],
            "version": "=2.2.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.723464Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.1,
        "functions": [
          {
            "version": [
              ">1.0.0 <2.2.3"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "HttpsProxyAgent.prototype.callback"
            }
          },
          {
            "version": [
              ">0.2.0 <=1.0.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "className": null,
              "functionName": "connect"
            }
          },
          {
            "version": [
              "<=0.2.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "className": null,
              "functionName": "HttpsProxyAgent.prototype.createConnection"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "https-proxy-agent",
        "references": [
          {
            "url": "https://github.com/TooTallNate/node-https-proxy-agent/commit/36d8cf509f877fa44f4404fce57ebaf9410fe51b",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/TooTallNate/node-https-proxy-agent/pull/77",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/541502",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:59:22.290989Z"
          }
        ],
        "description": "## Overview\n[https-proxy-agent](https://github.com/TooTallNate/node-https-proxy-agent#readme) is a module that provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in https module.\n\nAffected versions of this package are vulnerable to Man-in-the-Middle (MitM). When targeting a HTTP proxy, `https-proxy-agent` opens a socket to the proxy, and sends the proxy server a `CONNECT` request. If the proxy server responds with something other than a HTTP response `200`, `https-proxy-agent` incorrectly returns the socket without any TLS upgrade. This request data may contain basic auth credentials or other secrets, is sent over an unencrypted connection. A suitably positioned attacker could steal these secrets and impersonate the client.\r\n\r\n### PoC by Kris Adler\r\n\r\n```\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxyOpts = url.parse('http://127.0.0.1:80');\r\nvar opts = url.parse('https://www.google.com');\r\nvar agent = new HttpsProxyAgent(proxyOpts);\r\nopts.agent = agent;\r\nopts.auth = 'username:password';\r\nhttps.get(opts);\r\n```\n## Remediation\nUpgrade `https-proxy-agent` to version 2.2.3 or higher.\n## References\n- [GitHub Commit](https://github.com/TooTallNate/node-https-proxy-agent/commit/36d8cf509f877fa44f4404fce57ebaf9410fe51b)\n- [GitHub PR](https://github.com/TooTallNate/node-https-proxy-agent/pull/77)\n- [HackerOne Report](https://hackerone.com/reports/541502)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-300"
          ],
          "NSP": [
            "1184"
          ]
        },
        "packageName": "https-proxy-agent",
        "proprietary": false,
        "creationTime": "2019-09-26T10:01:07.677036Z",
        "functions_new": [
          {
            "version": [
              ">1.0.0 <2.2.3"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "HttpsProxyAgent.prototype.callback"
            }
          },
          {
            "version": [
              ">0.2.0 <=1.0.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "functionName": "connect"
            }
          },
          {
            "version": [
              "<=0.2.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "functionName": "HttpsProxyAgent.prototype.createConnection"
            }
          }
        ],
        "alternativeIds": [],
        "disclosureTime": "2019-09-25T08:21:57Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2019-10-02T08:08:11Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T13:59:22.290989Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "https-proxy-agent@0.3.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "https-proxy-agent",
        "version": "0.3.6"
      },
      {
        "id": "npm:https-proxy-agent:20180402",
        "title": "Uninitialized Memory Exposure",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H/E:F/RL:O/RC:C",
        "credit": [
          "ChALkeR"
        ],
        "semver": {
          "vulnerable": [
            "<2.2.0"
          ]
        },
        "exploit": "Functional",
        "fixedIn": [
          "2.2.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "https-proxy-agent",
        "references": [
          {
            "url": "https://hackerone.com/reports/319532",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
            "cvssV3BaseScore": 9.1,
            "modificationTime": "2024-03-11T09:48:31.334077Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H",
            "cvssV3BaseScore": 8.2,
            "modificationTime": "2024-03-11T09:51:22.137646Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H/E:F/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:24.959535Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:48:31.334077Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:51:22.137646Z"
          }
        ],
        "description": "## Overview\r\n[`https-proxy-agent`](https://www.npmjs.com/package/https-proxy-agent) provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in https module.\r\n\r\nAffected versions of this package are vulnerable to Uninitialized Memory Exposure and Denial of Service (DoS) attacks due to passing unsanitized options to Buffer(arg).\r\n\r\n**Note:**\r\nCVE-2018-3739 is a duplicate of CVE-2018-3736.\r\n\r\n\r\n## Uninitialized memory Exposre PoC by ChALKer\r\n```js\r\n// listen with: nc -l -p 8080\r\n\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxy = {\r\n  protocol: 'http:',\r\n  host: \"127.0.0.1\",\r\n  port: 8080\r\n};\r\n\r\nproxy.auth = 500; // a number as 'auth'\r\nvar opts = url.parse('https://example.com/');\r\nvar agent = new HttpsProxyAgent(proxy);\r\nopts.agent = agent;\r\nhttps.get(opts);\r\n```\r\n\r\n## Details\r\nThe Buffer class on Node.js is a mutable array of binary data, and can be initialized with a string, array or number.\r\n```js\r\nconst buf1 = new Buffer([1,2,3]);\r\n// creates a buffer containing [01, 02, 03]\r\nconst buf2 = new Buffer('test');\r\n// creates a buffer containing ASCII bytes [74, 65, 73, 74]\r\nconst buf3 = new Buffer(10);\r\n// creates a buffer of length 10\r\n```\r\n\r\nThe first two variants simply create a binary representation of the value it received. The last one, however, pre-allocates a buffer of the specified size, making it a useful buffer, especially when reading data from a stream.\r\nWhen using the number constructor of Buffer, it will allocate the memory, but will not fill it with zeros. Instead, the allocated buffer will hold whatever was in memory at the time. If the buffer is not `zeroed` by using `buf.fill(0)`, it may leak sensitive information like keys, source code, and system info.\r\n\r\n\r\n## Remediation\r\nUpgrade `https-proxy-agent` to version 2.2.0 or higher.\r\n**Note** This is vulnerable only for Node <=4\r\n\r\n## References\r\n- [HackerOne Report](https://hackerone.com/reports/319532)",
        "epssDetails": {
          "percentile": "0.80201",
          "probability": "0.00659",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-3739"
          ],
          "CWE": [
            "CWE-399"
          ],
          "NSP": [
            "593"
          ],
          "GHSA": [
            "GHSA-8g7p-74h8-hg48",
            "GHSA-qrg3-f6h6-vq8q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-HTTPSPROXYAGENT-12113",
            "SNYK-JS-HTTPSPROXYAGENT-12113",
            "npm:https-proxy-agent:20180402"
          ]
        },
        "packageName": "https-proxy-agent",
        "proprietary": false,
        "creationTime": "2018-02-25T06:36:33.413000Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-HTTPSPROXYAGENT-12113"
        ],
        "disclosureTime": "2018-04-02T06:36:33Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Functional",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-04-08T12:56:16Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:22.137646Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "https-proxy-agent@0.3.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "https-proxy-agent",
        "version": "0.3.6"
      },
      {
        "id": "SNYK-JS-HTTPSPROXYAGENT-469131",
        "title": "Man-in-the-Middle (MitM)",
        "CVSSv3": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
        "credit": [
          "Kris Adler"
        ],
        "semver": {
          "vulnerable": [
            "<2.2.3"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.2.3"
        ],
        "patches": [
          {
            "id": "patch:SNYK-JS-HTTPSPROXYAGENT-469131:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/https-proxy-agent/20190929/https-proxy-agent_0_0_20190929.patch"
            ],
            "version": "=2.2.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.721480Z"
          },
          {
            "id": "patch:SNYK-JS-HTTPSPROXYAGENT-469131:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/https-proxy-agent/20190929/https-proxy-agent_0_1_20190929.patch"
            ],
            "version": "=2.2.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.723464Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.1,
        "functions": [
          {
            "version": [
              ">1.0.0 <2.2.3"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "HttpsProxyAgent.prototype.callback"
            }
          },
          {
            "version": [
              ">0.2.0 <=1.0.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "className": null,
              "functionName": "connect"
            }
          },
          {
            "version": [
              "<=0.2.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "className": null,
              "functionName": "HttpsProxyAgent.prototype.createConnection"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "https-proxy-agent",
        "references": [
          {
            "url": "https://github.com/TooTallNate/node-https-proxy-agent/commit/36d8cf509f877fa44f4404fce57ebaf9410fe51b",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/TooTallNate/node-https-proxy-agent/pull/77",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/541502",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:59:22.290989Z"
          }
        ],
        "description": "## Overview\n[https-proxy-agent](https://github.com/TooTallNate/node-https-proxy-agent#readme) is a module that provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in https module.\n\nAffected versions of this package are vulnerable to Man-in-the-Middle (MitM). When targeting a HTTP proxy, `https-proxy-agent` opens a socket to the proxy, and sends the proxy server a `CONNECT` request. If the proxy server responds with something other than a HTTP response `200`, `https-proxy-agent` incorrectly returns the socket without any TLS upgrade. This request data may contain basic auth credentials or other secrets, is sent over an unencrypted connection. A suitably positioned attacker could steal these secrets and impersonate the client.\r\n\r\n### PoC by Kris Adler\r\n\r\n```\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxyOpts = url.parse('http://127.0.0.1:80');\r\nvar opts = url.parse('https://www.google.com');\r\nvar agent = new HttpsProxyAgent(proxyOpts);\r\nopts.agent = agent;\r\nopts.auth = 'username:password';\r\nhttps.get(opts);\r\n```\n## Remediation\nUpgrade `https-proxy-agent` to version 2.2.3 or higher.\n## References\n- [GitHub Commit](https://github.com/TooTallNate/node-https-proxy-agent/commit/36d8cf509f877fa44f4404fce57ebaf9410fe51b)\n- [GitHub PR](https://github.com/TooTallNate/node-https-proxy-agent/pull/77)\n- [HackerOne Report](https://hackerone.com/reports/541502)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-300"
          ],
          "NSP": [
            "1184"
          ]
        },
        "packageName": "https-proxy-agent",
        "proprietary": false,
        "creationTime": "2019-09-26T10:01:07.677036Z",
        "functions_new": [
          {
            "version": [
              ">1.0.0 <2.2.3"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "HttpsProxyAgent.prototype.callback"
            }
          },
          {
            "version": [
              ">0.2.0 <=1.0.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "functionName": "connect"
            }
          },
          {
            "version": [
              "<=0.2.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "functionName": "HttpsProxyAgent.prototype.createConnection"
            }
          }
        ],
        "alternativeIds": [],
        "disclosureTime": "2019-09-25T08:21:57Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2019-10-02T08:08:11Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T13:59:22.290989Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "https-proxy-agent@0.3.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "https-proxy-agent",
        "version": "0.3.6"
      },
      {
        "id": "npm:https-proxy-agent:20180402",
        "title": "Uninitialized Memory Exposure",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H/E:F/RL:O/RC:C",
        "credit": [
          "ChALkeR"
        ],
        "semver": {
          "vulnerable": [
            "<2.2.0"
          ]
        },
        "exploit": "Functional",
        "fixedIn": [
          "2.2.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "https-proxy-agent",
        "references": [
          {
            "url": "https://hackerone.com/reports/319532",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
            "cvssV3BaseScore": 9.1,
            "modificationTime": "2024-03-11T09:48:31.334077Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H",
            "cvssV3BaseScore": 8.2,
            "modificationTime": "2024-03-11T09:51:22.137646Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H/E:F/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:24.959535Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:48:31.334077Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:51:22.137646Z"
          }
        ],
        "description": "## Overview\r\n[`https-proxy-agent`](https://www.npmjs.com/package/https-proxy-agent) provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in https module.\r\n\r\nAffected versions of this package are vulnerable to Uninitialized Memory Exposure and Denial of Service (DoS) attacks due to passing unsanitized options to Buffer(arg).\r\n\r\n**Note:**\r\nCVE-2018-3739 is a duplicate of CVE-2018-3736.\r\n\r\n\r\n## Uninitialized memory Exposre PoC by ChALKer\r\n```js\r\n// listen with: nc -l -p 8080\r\n\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxy = {\r\n  protocol: 'http:',\r\n  host: \"127.0.0.1\",\r\n  port: 8080\r\n};\r\n\r\nproxy.auth = 500; // a number as 'auth'\r\nvar opts = url.parse('https://example.com/');\r\nvar agent = new HttpsProxyAgent(proxy);\r\nopts.agent = agent;\r\nhttps.get(opts);\r\n```\r\n\r\n## Details\r\nThe Buffer class on Node.js is a mutable array of binary data, and can be initialized with a string, array or number.\r\n```js\r\nconst buf1 = new Buffer([1,2,3]);\r\n// creates a buffer containing [01, 02, 03]\r\nconst buf2 = new Buffer('test');\r\n// creates a buffer containing ASCII bytes [74, 65, 73, 74]\r\nconst buf3 = new Buffer(10);\r\n// creates a buffer of length 10\r\n```\r\n\r\nThe first two variants simply create a binary representation of the value it received. The last one, however, pre-allocates a buffer of the specified size, making it a useful buffer, especially when reading data from a stream.\r\nWhen using the number constructor of Buffer, it will allocate the memory, but will not fill it with zeros. Instead, the allocated buffer will hold whatever was in memory at the time. If the buffer is not `zeroed` by using `buf.fill(0)`, it may leak sensitive information like keys, source code, and system info.\r\n\r\n\r\n## Remediation\r\nUpgrade `https-proxy-agent` to version 2.2.0 or higher.\r\n**Note** This is vulnerable only for Node <=4\r\n\r\n## References\r\n- [HackerOne Report](https://hackerone.com/reports/319532)",
        "epssDetails": {
          "percentile": "0.80201",
          "probability": "0.00659",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-3739"
          ],
          "CWE": [
            "CWE-399"
          ],
          "NSP": [
            "593"
          ],
          "GHSA": [
            "GHSA-8g7p-74h8-hg48",
            "GHSA-qrg3-f6h6-vq8q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-HTTPSPROXYAGENT-12113",
            "SNYK-JS-HTTPSPROXYAGENT-12113",
            "npm:https-proxy-agent:20180402"
          ]
        },
        "packageName": "https-proxy-agent",
        "proprietary": false,
        "creationTime": "2018-02-25T06:36:33.413000Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-HTTPSPROXYAGENT-12113"
        ],
        "disclosureTime": "2018-04-02T06:36:33Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Functional",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-04-08T12:56:16Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:22.137646Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "https-proxy-agent@0.3.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "https-proxy-agent",
        "version": "0.3.6"
      },
      {
        "id": "SNYK-JS-HTTPSPROXYAGENT-469131",
        "title": "Man-in-the-Middle (MitM)",
        "CVSSv3": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
        "credit": [
          "Kris Adler"
        ],
        "semver": {
          "vulnerable": [
            "<2.2.3"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.2.3"
        ],
        "patches": [
          {
            "id": "patch:SNYK-JS-HTTPSPROXYAGENT-469131:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/https-proxy-agent/20190929/https-proxy-agent_0_0_20190929.patch"
            ],
            "version": "=2.2.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.721480Z"
          },
          {
            "id": "patch:SNYK-JS-HTTPSPROXYAGENT-469131:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/https-proxy-agent/20190929/https-proxy-agent_0_1_20190929.patch"
            ],
            "version": "=2.2.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.723464Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.1,
        "functions": [
          {
            "version": [
              ">1.0.0 <2.2.3"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "HttpsProxyAgent.prototype.callback"
            }
          },
          {
            "version": [
              ">0.2.0 <=1.0.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "className": null,
              "functionName": "connect"
            }
          },
          {
            "version": [
              "<=0.2.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "className": null,
              "functionName": "HttpsProxyAgent.prototype.createConnection"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "https-proxy-agent",
        "references": [
          {
            "url": "https://github.com/TooTallNate/node-https-proxy-agent/commit/36d8cf509f877fa44f4404fce57ebaf9410fe51b",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/TooTallNate/node-https-proxy-agent/pull/77",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/541502",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:59:22.290989Z"
          }
        ],
        "description": "## Overview\n[https-proxy-agent](https://github.com/TooTallNate/node-https-proxy-agent#readme) is a module that provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in https module.\n\nAffected versions of this package are vulnerable to Man-in-the-Middle (MitM). When targeting a HTTP proxy, `https-proxy-agent` opens a socket to the proxy, and sends the proxy server a `CONNECT` request. If the proxy server responds with something other than a HTTP response `200`, `https-proxy-agent` incorrectly returns the socket without any TLS upgrade. This request data may contain basic auth credentials or other secrets, is sent over an unencrypted connection. A suitably positioned attacker could steal these secrets and impersonate the client.\r\n\r\n### PoC by Kris Adler\r\n\r\n```\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxyOpts = url.parse('http://127.0.0.1:80');\r\nvar opts = url.parse('https://www.google.com');\r\nvar agent = new HttpsProxyAgent(proxyOpts);\r\nopts.agent = agent;\r\nopts.auth = 'username:password';\r\nhttps.get(opts);\r\n```\n## Remediation\nUpgrade `https-proxy-agent` to version 2.2.3 or higher.\n## References\n- [GitHub Commit](https://github.com/TooTallNate/node-https-proxy-agent/commit/36d8cf509f877fa44f4404fce57ebaf9410fe51b)\n- [GitHub PR](https://github.com/TooTallNate/node-https-proxy-agent/pull/77)\n- [HackerOne Report](https://hackerone.com/reports/541502)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-300"
          ],
          "NSP": [
            "1184"
          ]
        },
        "packageName": "https-proxy-agent",
        "proprietary": false,
        "creationTime": "2019-09-26T10:01:07.677036Z",
        "functions_new": [
          {
            "version": [
              ">1.0.0 <2.2.3"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "HttpsProxyAgent.prototype.callback"
            }
          },
          {
            "version": [
              ">0.2.0 <=1.0.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "functionName": "connect"
            }
          },
          {
            "version": [
              "<=0.2.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "functionName": "HttpsProxyAgent.prototype.createConnection"
            }
          }
        ],
        "alternativeIds": [],
        "disclosureTime": "2019-09-25T08:21:57Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2019-10-02T08:08:11Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T13:59:22.290989Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "https-proxy-agent@0.3.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "https-proxy-agent",
        "version": "0.3.6"
      },
      {
        "id": "npm:https-proxy-agent:20180402",
        "title": "Uninitialized Memory Exposure",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H/E:F/RL:O/RC:C",
        "credit": [
          "ChALkeR"
        ],
        "semver": {
          "vulnerable": [
            "<2.2.0"
          ]
        },
        "exploit": "Functional",
        "fixedIn": [
          "2.2.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "https-proxy-agent",
        "references": [
          {
            "url": "https://hackerone.com/reports/319532",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
            "cvssV3BaseScore": 9.1,
            "modificationTime": "2024-03-11T09:48:31.334077Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H",
            "cvssV3BaseScore": 8.2,
            "modificationTime": "2024-03-11T09:51:22.137646Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H/E:F/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:24.959535Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:48:31.334077Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:51:22.137646Z"
          }
        ],
        "description": "## Overview\r\n[`https-proxy-agent`](https://www.npmjs.com/package/https-proxy-agent) provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in https module.\r\n\r\nAffected versions of this package are vulnerable to Uninitialized Memory Exposure and Denial of Service (DoS) attacks due to passing unsanitized options to Buffer(arg).\r\n\r\n**Note:**\r\nCVE-2018-3739 is a duplicate of CVE-2018-3736.\r\n\r\n\r\n## Uninitialized memory Exposre PoC by ChALKer\r\n```js\r\n// listen with: nc -l -p 8080\r\n\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxy = {\r\n  protocol: 'http:',\r\n  host: \"127.0.0.1\",\r\n  port: 8080\r\n};\r\n\r\nproxy.auth = 500; // a number as 'auth'\r\nvar opts = url.parse('https://example.com/');\r\nvar agent = new HttpsProxyAgent(proxy);\r\nopts.agent = agent;\r\nhttps.get(opts);\r\n```\r\n\r\n## Details\r\nThe Buffer class on Node.js is a mutable array of binary data, and can be initialized with a string, array or number.\r\n```js\r\nconst buf1 = new Buffer([1,2,3]);\r\n// creates a buffer containing [01, 02, 03]\r\nconst buf2 = new Buffer('test');\r\n// creates a buffer containing ASCII bytes [74, 65, 73, 74]\r\nconst buf3 = new Buffer(10);\r\n// creates a buffer of length 10\r\n```\r\n\r\nThe first two variants simply create a binary representation of the value it received. The last one, however, pre-allocates a buffer of the specified size, making it a useful buffer, especially when reading data from a stream.\r\nWhen using the number constructor of Buffer, it will allocate the memory, but will not fill it with zeros. Instead, the allocated buffer will hold whatever was in memory at the time. If the buffer is not `zeroed` by using `buf.fill(0)`, it may leak sensitive information like keys, source code, and system info.\r\n\r\n\r\n## Remediation\r\nUpgrade `https-proxy-agent` to version 2.2.0 or higher.\r\n**Note** This is vulnerable only for Node <=4\r\n\r\n## References\r\n- [HackerOne Report](https://hackerone.com/reports/319532)",
        "epssDetails": {
          "percentile": "0.80201",
          "probability": "0.00659",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-3739"
          ],
          "CWE": [
            "CWE-399"
          ],
          "NSP": [
            "593"
          ],
          "GHSA": [
            "GHSA-8g7p-74h8-hg48",
            "GHSA-qrg3-f6h6-vq8q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-HTTPSPROXYAGENT-12113",
            "SNYK-JS-HTTPSPROXYAGENT-12113",
            "npm:https-proxy-agent:20180402"
          ]
        },
        "packageName": "https-proxy-agent",
        "proprietary": false,
        "creationTime": "2018-02-25T06:36:33.413000Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-HTTPSPROXYAGENT-12113"
        ],
        "disclosureTime": "2018-04-02T06:36:33Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Functional",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-04-08T12:56:16Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:22.137646Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "https-proxy-agent@0.3.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "https-proxy-agent",
        "version": "0.3.6"
      },
      {
        "id": "SNYK-JS-HTTPSPROXYAGENT-469131",
        "title": "Man-in-the-Middle (MitM)",
        "CVSSv3": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
        "credit": [
          "Kris Adler"
        ],
        "semver": {
          "vulnerable": [
            "<2.2.3"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.2.3"
        ],
        "patches": [
          {
            "id": "patch:SNYK-JS-HTTPSPROXYAGENT-469131:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/https-proxy-agent/20190929/https-proxy-agent_0_0_20190929.patch"
            ],
            "version": "=2.2.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.721480Z"
          },
          {
            "id": "patch:SNYK-JS-HTTPSPROXYAGENT-469131:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/https-proxy-agent/20190929/https-proxy-agent_0_1_20190929.patch"
            ],
            "version": "=2.2.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.723464Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.1,
        "functions": [
          {
            "version": [
              ">1.0.0 <2.2.3"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "HttpsProxyAgent.prototype.callback"
            }
          },
          {
            "version": [
              ">0.2.0 <=1.0.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "className": null,
              "functionName": "connect"
            }
          },
          {
            "version": [
              "<=0.2.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "className": null,
              "functionName": "HttpsProxyAgent.prototype.createConnection"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "https-proxy-agent",
        "references": [
          {
            "url": "https://github.com/TooTallNate/node-https-proxy-agent/commit/36d8cf509f877fa44f4404fce57ebaf9410fe51b",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/TooTallNate/node-https-proxy-agent/pull/77",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/541502",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:59:22.290989Z"
          }
        ],
        "description": "## Overview\n[https-proxy-agent](https://github.com/TooTallNate/node-https-proxy-agent#readme) is a module that provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in https module.\n\nAffected versions of this package are vulnerable to Man-in-the-Middle (MitM). When targeting a HTTP proxy, `https-proxy-agent` opens a socket to the proxy, and sends the proxy server a `CONNECT` request. If the proxy server responds with something other than a HTTP response `200`, `https-proxy-agent` incorrectly returns the socket without any TLS upgrade. This request data may contain basic auth credentials or other secrets, is sent over an unencrypted connection. A suitably positioned attacker could steal these secrets and impersonate the client.\r\n\r\n### PoC by Kris Adler\r\n\r\n```\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxyOpts = url.parse('http://127.0.0.1:80');\r\nvar opts = url.parse('https://www.google.com');\r\nvar agent = new HttpsProxyAgent(proxyOpts);\r\nopts.agent = agent;\r\nopts.auth = 'username:password';\r\nhttps.get(opts);\r\n```\n## Remediation\nUpgrade `https-proxy-agent` to version 2.2.3 or higher.\n## References\n- [GitHub Commit](https://github.com/TooTallNate/node-https-proxy-agent/commit/36d8cf509f877fa44f4404fce57ebaf9410fe51b)\n- [GitHub PR](https://github.com/TooTallNate/node-https-proxy-agent/pull/77)\n- [HackerOne Report](https://hackerone.com/reports/541502)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-300"
          ],
          "NSP": [
            "1184"
          ]
        },
        "packageName": "https-proxy-agent",
        "proprietary": false,
        "creationTime": "2019-09-26T10:01:07.677036Z",
        "functions_new": [
          {
            "version": [
              ">1.0.0 <2.2.3"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "HttpsProxyAgent.prototype.callback"
            }
          },
          {
            "version": [
              ">0.2.0 <=1.0.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "functionName": "connect"
            }
          },
          {
            "version": [
              "<=0.2.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "functionName": "HttpsProxyAgent.prototype.createConnection"
            }
          }
        ],
        "alternativeIds": [],
        "disclosureTime": "2019-09-25T08:21:57Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2019-10-02T08:08:11Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T13:59:22.290989Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "https-proxy-agent@0.3.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "https-proxy-agent",
        "version": "0.3.6"
      },
      {
        "id": "npm:https-proxy-agent:20180402",
        "title": "Uninitialized Memory Exposure",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H/E:F/RL:O/RC:C",
        "credit": [
          "ChALkeR"
        ],
        "semver": {
          "vulnerable": [
            "<2.2.0"
          ]
        },
        "exploit": "Functional",
        "fixedIn": [
          "2.2.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "https-proxy-agent",
        "references": [
          {
            "url": "https://hackerone.com/reports/319532",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
            "cvssV3BaseScore": 9.1,
            "modificationTime": "2024-03-11T09:48:31.334077Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H",
            "cvssV3BaseScore": 8.2,
            "modificationTime": "2024-03-11T09:51:22.137646Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H/E:F/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:24.959535Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:48:31.334077Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:51:22.137646Z"
          }
        ],
        "description": "## Overview\r\n[`https-proxy-agent`](https://www.npmjs.com/package/https-proxy-agent) provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in https module.\r\n\r\nAffected versions of this package are vulnerable to Uninitialized Memory Exposure and Denial of Service (DoS) attacks due to passing unsanitized options to Buffer(arg).\r\n\r\n**Note:**\r\nCVE-2018-3739 is a duplicate of CVE-2018-3736.\r\n\r\n\r\n## Uninitialized memory Exposre PoC by ChALKer\r\n```js\r\n// listen with: nc -l -p 8080\r\n\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxy = {\r\n  protocol: 'http:',\r\n  host: \"127.0.0.1\",\r\n  port: 8080\r\n};\r\n\r\nproxy.auth = 500; // a number as 'auth'\r\nvar opts = url.parse('https://example.com/');\r\nvar agent = new HttpsProxyAgent(proxy);\r\nopts.agent = agent;\r\nhttps.get(opts);\r\n```\r\n\r\n## Details\r\nThe Buffer class on Node.js is a mutable array of binary data, and can be initialized with a string, array or number.\r\n```js\r\nconst buf1 = new Buffer([1,2,3]);\r\n// creates a buffer containing [01, 02, 03]\r\nconst buf2 = new Buffer('test');\r\n// creates a buffer containing ASCII bytes [74, 65, 73, 74]\r\nconst buf3 = new Buffer(10);\r\n// creates a buffer of length 10\r\n```\r\n\r\nThe first two variants simply create a binary representation of the value it received. The last one, however, pre-allocates a buffer of the specified size, making it a useful buffer, especially when reading data from a stream.\r\nWhen using the number constructor of Buffer, it will allocate the memory, but will not fill it with zeros. Instead, the allocated buffer will hold whatever was in memory at the time. If the buffer is not `zeroed` by using `buf.fill(0)`, it may leak sensitive information like keys, source code, and system info.\r\n\r\n\r\n## Remediation\r\nUpgrade `https-proxy-agent` to version 2.2.0 or higher.\r\n**Note** This is vulnerable only for Node <=4\r\n\r\n## References\r\n- [HackerOne Report](https://hackerone.com/reports/319532)",
        "epssDetails": {
          "percentile": "0.80201",
          "probability": "0.00659",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-3739"
          ],
          "CWE": [
            "CWE-399"
          ],
          "NSP": [
            "593"
          ],
          "GHSA": [
            "GHSA-8g7p-74h8-hg48",
            "GHSA-qrg3-f6h6-vq8q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-HTTPSPROXYAGENT-12113",
            "SNYK-JS-HTTPSPROXYAGENT-12113",
            "npm:https-proxy-agent:20180402"
          ]
        },
        "packageName": "https-proxy-agent",
        "proprietary": false,
        "creationTime": "2018-02-25T06:36:33.413000Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-HTTPSPROXYAGENT-12113"
        ],
        "disclosureTime": "2018-04-02T06:36:33Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Functional",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-04-08T12:56:16Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:22.137646Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "https-proxy-agent@0.3.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "https-proxy-agent",
        "version": "0.3.6"
      },
      {
        "id": "SNYK-JS-HTTPSPROXYAGENT-469131",
        "title": "Man-in-the-Middle (MitM)",
        "CVSSv3": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
        "credit": [
          "Kris Adler"
        ],
        "semver": {
          "vulnerable": [
            "<2.2.3"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.2.3"
        ],
        "patches": [
          {
            "id": "patch:SNYK-JS-HTTPSPROXYAGENT-469131:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/https-proxy-agent/20190929/https-proxy-agent_0_0_20190929.patch"
            ],
            "version": "=2.2.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.721480Z"
          },
          {
            "id": "patch:SNYK-JS-HTTPSPROXYAGENT-469131:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/https-proxy-agent/20190929/https-proxy-agent_0_1_20190929.patch"
            ],
            "version": "=2.2.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.723464Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.1,
        "functions": [
          {
            "version": [
              ">1.0.0 <2.2.3"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "HttpsProxyAgent.prototype.callback"
            }
          },
          {
            "version": [
              ">0.2.0 <=1.0.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "className": null,
              "functionName": "connect"
            }
          },
          {
            "version": [
              "<=0.2.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "className": null,
              "functionName": "HttpsProxyAgent.prototype.createConnection"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "https-proxy-agent",
        "references": [
          {
            "url": "https://github.com/TooTallNate/node-https-proxy-agent/commit/36d8cf509f877fa44f4404fce57ebaf9410fe51b",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/TooTallNate/node-https-proxy-agent/pull/77",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/541502",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:59:22.290989Z"
          }
        ],
        "description": "## Overview\n[https-proxy-agent](https://github.com/TooTallNate/node-https-proxy-agent#readme) is a module that provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in https module.\n\nAffected versions of this package are vulnerable to Man-in-the-Middle (MitM). When targeting a HTTP proxy, `https-proxy-agent` opens a socket to the proxy, and sends the proxy server a `CONNECT` request. If the proxy server responds with something other than a HTTP response `200`, `https-proxy-agent` incorrectly returns the socket without any TLS upgrade. This request data may contain basic auth credentials or other secrets, is sent over an unencrypted connection. A suitably positioned attacker could steal these secrets and impersonate the client.\r\n\r\n### PoC by Kris Adler\r\n\r\n```\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxyOpts = url.parse('http://127.0.0.1:80');\r\nvar opts = url.parse('https://www.google.com');\r\nvar agent = new HttpsProxyAgent(proxyOpts);\r\nopts.agent = agent;\r\nopts.auth = 'username:password';\r\nhttps.get(opts);\r\n```\n## Remediation\nUpgrade `https-proxy-agent` to version 2.2.3 or higher.\n## References\n- [GitHub Commit](https://github.com/TooTallNate/node-https-proxy-agent/commit/36d8cf509f877fa44f4404fce57ebaf9410fe51b)\n- [GitHub PR](https://github.com/TooTallNate/node-https-proxy-agent/pull/77)\n- [HackerOne Report](https://hackerone.com/reports/541502)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-300"
          ],
          "NSP": [
            "1184"
          ]
        },
        "packageName": "https-proxy-agent",
        "proprietary": false,
        "creationTime": "2019-09-26T10:01:07.677036Z",
        "functions_new": [
          {
            "version": [
              ">1.0.0 <2.2.3"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "HttpsProxyAgent.prototype.callback"
            }
          },
          {
            "version": [
              ">0.2.0 <=1.0.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "functionName": "connect"
            }
          },
          {
            "version": [
              "<=0.2.0"
            ],
            "functionId": {
              "filePath": "https-proxy-agent.js",
              "functionName": "HttpsProxyAgent.prototype.createConnection"
            }
          }
        ],
        "alternativeIds": [],
        "disclosureTime": "2019-09-25T08:21:57Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2019-10-02T08:08:11Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T13:59:22.290989Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "https-proxy-agent@0.3.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "https-proxy-agent",
        "version": "0.3.6"
      },
      {
        "id": "npm:https-proxy-agent:20180402",
        "title": "Uninitialized Memory Exposure",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H/E:F/RL:O/RC:C",
        "credit": [
          "ChALkeR"
        ],
        "semver": {
          "vulnerable": [
            "<2.2.0"
          ]
        },
        "exploit": "Functional",
        "fixedIn": [
          "2.2.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "https-proxy-agent",
        "references": [
          {
            "url": "https://hackerone.com/reports/319532",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
            "cvssV3BaseScore": 9.1,
            "modificationTime": "2024-03-11T09:48:31.334077Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H",
            "cvssV3BaseScore": 8.2,
            "modificationTime": "2024-03-11T09:51:22.137646Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H/E:F/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:24.959535Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:48:31.334077Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:51:22.137646Z"
          }
        ],
        "description": "## Overview\r\n[`https-proxy-agent`](https://www.npmjs.com/package/https-proxy-agent) provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in https module.\r\n\r\nAffected versions of this package are vulnerable to Uninitialized Memory Exposure and Denial of Service (DoS) attacks due to passing unsanitized options to Buffer(arg).\r\n\r\n**Note:**\r\nCVE-2018-3739 is a duplicate of CVE-2018-3736.\r\n\r\n\r\n## Uninitialized memory Exposre PoC by ChALKer\r\n```js\r\n// listen with: nc -l -p 8080\r\n\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxy = {\r\n  protocol: 'http:',\r\n  host: \"127.0.0.1\",\r\n  port: 8080\r\n};\r\n\r\nproxy.auth = 500; // a number as 'auth'\r\nvar opts = url.parse('https://example.com/');\r\nvar agent = new HttpsProxyAgent(proxy);\r\nopts.agent = agent;\r\nhttps.get(opts);\r\n```\r\n\r\n## Details\r\nThe Buffer class on Node.js is a mutable array of binary data, and can be initialized with a string, array or number.\r\n```js\r\nconst buf1 = new Buffer([1,2,3]);\r\n// creates a buffer containing [01, 02, 03]\r\nconst buf2 = new Buffer('test');\r\n// creates a buffer containing ASCII bytes [74, 65, 73, 74]\r\nconst buf3 = new Buffer(10);\r\n// creates a buffer of length 10\r\n```\r\n\r\nThe first two variants simply create a binary representation of the value it received. The last one, however, pre-allocates a buffer of the specified size, making it a useful buffer, especially when reading data from a stream.\r\nWhen using the number constructor of Buffer, it will allocate the memory, but will not fill it with zeros. Instead, the allocated buffer will hold whatever was in memory at the time. If the buffer is not `zeroed` by using `buf.fill(0)`, it may leak sensitive information like keys, source code, and system info.\r\n\r\n\r\n## Remediation\r\nUpgrade `https-proxy-agent` to version 2.2.0 or higher.\r\n**Note** This is vulnerable only for Node <=4\r\n\r\n## References\r\n- [HackerOne Report](https://hackerone.com/reports/319532)",
        "epssDetails": {
          "percentile": "0.80201",
          "probability": "0.00659",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-3739"
          ],
          "CWE": [
            "CWE-399"
          ],
          "NSP": [
            "593"
          ],
          "GHSA": [
            "GHSA-8g7p-74h8-hg48",
            "GHSA-qrg3-f6h6-vq8q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-HTTPSPROXYAGENT-12113",
            "SNYK-JS-HTTPSPROXYAGENT-12113",
            "npm:https-proxy-agent:20180402"
          ]
        },
        "packageName": "https-proxy-agent",
        "proprietary": false,
        "creationTime": "2018-02-25T06:36:33.413000Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-HTTPSPROXYAGENT-12113"
        ],
        "disclosureTime": "2018-04-02T06:36:33Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Functional",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-04-08T12:56:16Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:22.137646Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "https-proxy-agent@0.3.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "https-proxy-agent",
        "version": "0.3.6"
      },
      {
        "id": "SNYK-JS-INFLIGHT-6095116",
        "title": "Missing Release of Resource after Effective Lifetime",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "jkomyno"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "inflight",
        "references": [
          {
            "url": "https://github.com/isaacs/inflight/issues/5",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/logdna/logdna-agent/pull/157",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-13T12:24:01.140165Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Missing Release of Resource after Effective Lifetime via the `makeres` function due to improperly deleting keys from the `reqs` object after execution of callbacks. This behavior causes the keys to remain in the `reqs` object, which leads to resource exhaustion.\r\n\r\nExploiting this vulnerability results in crashing the `node` process or in the application crash.\r\n\r\n**Note:**\r\nThis library is not maintained, and currently, there is no fix for this issue. To overcome this vulnerability, several dependent packages have eliminated the use of this library.\r\n\r\nTo trigger the memory leak, an attacker would need to have the ability to execute or influence the asynchronous operations that use the inflight module within the application. This typically requires access to the internal workings of the server or application, which is not commonly exposed to remote users. Therefore, “Attack vector” is marked as “Local”.\n## PoC\n```js\r\nconst inflight = require('inflight');\r\n\r\nfunction testInflight() {\r\n  let i = 0;\r\n  function scheduleNext() {\r\n    let key = `key-${i++}`;\r\n    const callback = () => {\r\n    };\r\n    for (let j = 0; j < 1000000; j++) {\r\n      inflight(key, callback);\r\n    }\r\n\r\n    setImmediate(scheduleNext);\r\n  }\r\n\r\n\r\n  if (i % 100 === 0) {\r\n    console.log(process.memoryUsage());\r\n  }\r\n\r\n  scheduleNext();\r\n}\r\n\r\ntestInflight();\r\n```\n## Remediation\nThere is no fixed version for `inflight`.\n\n## References\n- [GitHub Issue](https://github.com/isaacs/inflight/issues/5)\n- [GitHub PR](https://github.com/logdna/logdna-agent/pull/157)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-772"
          ]
        },
        "packageName": "inflight",
        "proprietary": false,
        "creationTime": "2023-11-30T12:51:43.483198Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-11-28T12:47:27Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-11-30T12:52:55.469185Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-13T12:24:01.140165Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "rimraf@2.7.1",
          "glob@7.1.6",
          "inflight@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "inflight",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-INFLIGHT-6095116",
        "title": "Missing Release of Resource after Effective Lifetime",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "jkomyno"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "inflight",
        "references": [
          {
            "url": "https://github.com/isaacs/inflight/issues/5",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/logdna/logdna-agent/pull/157",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-13T12:24:01.140165Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Missing Release of Resource after Effective Lifetime via the `makeres` function due to improperly deleting keys from the `reqs` object after execution of callbacks. This behavior causes the keys to remain in the `reqs` object, which leads to resource exhaustion.\r\n\r\nExploiting this vulnerability results in crashing the `node` process or in the application crash.\r\n\r\n**Note:**\r\nThis library is not maintained, and currently, there is no fix for this issue. To overcome this vulnerability, several dependent packages have eliminated the use of this library.\r\n\r\nTo trigger the memory leak, an attacker would need to have the ability to execute or influence the asynchronous operations that use the inflight module within the application. This typically requires access to the internal workings of the server or application, which is not commonly exposed to remote users. Therefore, “Attack vector” is marked as “Local”.\n## PoC\n```js\r\nconst inflight = require('inflight');\r\n\r\nfunction testInflight() {\r\n  let i = 0;\r\n  function scheduleNext() {\r\n    let key = `key-${i++}`;\r\n    const callback = () => {\r\n    };\r\n    for (let j = 0; j < 1000000; j++) {\r\n      inflight(key, callback);\r\n    }\r\n\r\n    setImmediate(scheduleNext);\r\n  }\r\n\r\n\r\n  if (i % 100 === 0) {\r\n    console.log(process.memoryUsage());\r\n  }\r\n\r\n  scheduleNext();\r\n}\r\n\r\ntestInflight();\r\n```\n## Remediation\nThere is no fixed version for `inflight`.\n\n## References\n- [GitHub Issue](https://github.com/isaacs/inflight/issues/5)\n- [GitHub PR](https://github.com/logdna/logdna-agent/pull/157)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-772"
          ]
        },
        "packageName": "inflight",
        "proprietary": false,
        "creationTime": "2023-11-30T12:51:43.483198Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-11-28T12:47:27Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-11-30T12:52:55.469185Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-13T12:24:01.140165Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "rimraf@2.7.1",
          "glob@7.1.6",
          "inflight@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "inflight",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-INFLIGHT-6095116",
        "title": "Missing Release of Resource after Effective Lifetime",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "jkomyno"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "inflight",
        "references": [
          {
            "url": "https://github.com/isaacs/inflight/issues/5",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/logdna/logdna-agent/pull/157",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-13T12:24:01.140165Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Missing Release of Resource after Effective Lifetime via the `makeres` function due to improperly deleting keys from the `reqs` object after execution of callbacks. This behavior causes the keys to remain in the `reqs` object, which leads to resource exhaustion.\r\n\r\nExploiting this vulnerability results in crashing the `node` process or in the application crash.\r\n\r\n**Note:**\r\nThis library is not maintained, and currently, there is no fix for this issue. To overcome this vulnerability, several dependent packages have eliminated the use of this library.\r\n\r\nTo trigger the memory leak, an attacker would need to have the ability to execute or influence the asynchronous operations that use the inflight module within the application. This typically requires access to the internal workings of the server or application, which is not commonly exposed to remote users. Therefore, “Attack vector” is marked as “Local”.\n## PoC\n```js\r\nconst inflight = require('inflight');\r\n\r\nfunction testInflight() {\r\n  let i = 0;\r\n  function scheduleNext() {\r\n    let key = `key-${i++}`;\r\n    const callback = () => {\r\n    };\r\n    for (let j = 0; j < 1000000; j++) {\r\n      inflight(key, callback);\r\n    }\r\n\r\n    setImmediate(scheduleNext);\r\n  }\r\n\r\n\r\n  if (i % 100 === 0) {\r\n    console.log(process.memoryUsage());\r\n  }\r\n\r\n  scheduleNext();\r\n}\r\n\r\ntestInflight();\r\n```\n## Remediation\nThere is no fixed version for `inflight`.\n\n## References\n- [GitHub Issue](https://github.com/isaacs/inflight/issues/5)\n- [GitHub PR](https://github.com/logdna/logdna-agent/pull/157)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-772"
          ]
        },
        "packageName": "inflight",
        "proprietary": false,
        "creationTime": "2023-11-30T12:51:43.483198Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-11-28T12:47:27Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-11-30T12:52:55.469185Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-13T12:24:01.140165Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "decompress@0.2.5",
          "rimraf@2.7.1",
          "glob@7.1.6",
          "inflight@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "inflight",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-INFLIGHT-6095116",
        "title": "Missing Release of Resource after Effective Lifetime",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "jkomyno"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "inflight",
        "references": [
          {
            "url": "https://github.com/isaacs/inflight/issues/5",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/logdna/logdna-agent/pull/157",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-13T12:24:01.140165Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Missing Release of Resource after Effective Lifetime via the `makeres` function due to improperly deleting keys from the `reqs` object after execution of callbacks. This behavior causes the keys to remain in the `reqs` object, which leads to resource exhaustion.\r\n\r\nExploiting this vulnerability results in crashing the `node` process or in the application crash.\r\n\r\n**Note:**\r\nThis library is not maintained, and currently, there is no fix for this issue. To overcome this vulnerability, several dependent packages have eliminated the use of this library.\r\n\r\nTo trigger the memory leak, an attacker would need to have the ability to execute or influence the asynchronous operations that use the inflight module within the application. This typically requires access to the internal workings of the server or application, which is not commonly exposed to remote users. Therefore, “Attack vector” is marked as “Local”.\n## PoC\n```js\r\nconst inflight = require('inflight');\r\n\r\nfunction testInflight() {\r\n  let i = 0;\r\n  function scheduleNext() {\r\n    let key = `key-${i++}`;\r\n    const callback = () => {\r\n    };\r\n    for (let j = 0; j < 1000000; j++) {\r\n      inflight(key, callback);\r\n    }\r\n\r\n    setImmediate(scheduleNext);\r\n  }\r\n\r\n\r\n  if (i % 100 === 0) {\r\n    console.log(process.memoryUsage());\r\n  }\r\n\r\n  scheduleNext();\r\n}\r\n\r\ntestInflight();\r\n```\n## Remediation\nThere is no fixed version for `inflight`.\n\n## References\n- [GitHub Issue](https://github.com/isaacs/inflight/issues/5)\n- [GitHub PR](https://github.com/logdna/logdna-agent/pull/157)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-772"
          ]
        },
        "packageName": "inflight",
        "proprietary": false,
        "creationTime": "2023-11-30T12:51:43.483198Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-11-28T12:47:27Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-11-30T12:52:55.469185Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-13T12:24:01.140165Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "decompress@0.2.5",
          "tar@0.1.20",
          "fstream@0.1.31",
          "rimraf@2.7.1",
          "glob@7.1.6",
          "inflight@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "inflight",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-INFLIGHT-6095116",
        "title": "Missing Release of Resource after Effective Lifetime",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "jkomyno"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "inflight",
        "references": [
          {
            "url": "https://github.com/isaacs/inflight/issues/5",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/logdna/logdna-agent/pull/157",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-13T12:24:01.140165Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Missing Release of Resource after Effective Lifetime via the `makeres` function due to improperly deleting keys from the `reqs` object after execution of callbacks. This behavior causes the keys to remain in the `reqs` object, which leads to resource exhaustion.\r\n\r\nExploiting this vulnerability results in crashing the `node` process or in the application crash.\r\n\r\n**Note:**\r\nThis library is not maintained, and currently, there is no fix for this issue. To overcome this vulnerability, several dependent packages have eliminated the use of this library.\r\n\r\nTo trigger the memory leak, an attacker would need to have the ability to execute or influence the asynchronous operations that use the inflight module within the application. This typically requires access to the internal workings of the server or application, which is not commonly exposed to remote users. Therefore, “Attack vector” is marked as “Local”.\n## PoC\n```js\r\nconst inflight = require('inflight');\r\n\r\nfunction testInflight() {\r\n  let i = 0;\r\n  function scheduleNext() {\r\n    let key = `key-${i++}`;\r\n    const callback = () => {\r\n    };\r\n    for (let j = 0; j < 1000000; j++) {\r\n      inflight(key, callback);\r\n    }\r\n\r\n    setImmediate(scheduleNext);\r\n  }\r\n\r\n\r\n  if (i % 100 === 0) {\r\n    console.log(process.memoryUsage());\r\n  }\r\n\r\n  scheduleNext();\r\n}\r\n\r\ntestInflight();\r\n```\n## Remediation\nThere is no fixed version for `inflight`.\n\n## References\n- [GitHub Issue](https://github.com/isaacs/inflight/issues/5)\n- [GitHub PR](https://github.com/logdna/logdna-agent/pull/157)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-772"
          ]
        },
        "packageName": "inflight",
        "proprietary": false,
        "creationTime": "2023-11-30T12:51:43.483198Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-11-28T12:47:27Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-11-30T12:52:55.469185Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-13T12:24:01.140165Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "commoner@0.10.8",
          "glob@5.0.15",
          "inflight@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "inflight",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-INFLIGHT-6095116",
        "title": "Missing Release of Resource after Effective Lifetime",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "jkomyno"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "inflight",
        "references": [
          {
            "url": "https://github.com/isaacs/inflight/issues/5",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/logdna/logdna-agent/pull/157",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-13T12:24:01.140165Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Missing Release of Resource after Effective Lifetime via the `makeres` function due to improperly deleting keys from the `reqs` object after execution of callbacks. This behavior causes the keys to remain in the `reqs` object, which leads to resource exhaustion.\r\n\r\nExploiting this vulnerability results in crashing the `node` process or in the application crash.\r\n\r\n**Note:**\r\nThis library is not maintained, and currently, there is no fix for this issue. To overcome this vulnerability, several dependent packages have eliminated the use of this library.\r\n\r\nTo trigger the memory leak, an attacker would need to have the ability to execute or influence the asynchronous operations that use the inflight module within the application. This typically requires access to the internal workings of the server or application, which is not commonly exposed to remote users. Therefore, “Attack vector” is marked as “Local”.\n## PoC\n```js\r\nconst inflight = require('inflight');\r\n\r\nfunction testInflight() {\r\n  let i = 0;\r\n  function scheduleNext() {\r\n    let key = `key-${i++}`;\r\n    const callback = () => {\r\n    };\r\n    for (let j = 0; j < 1000000; j++) {\r\n      inflight(key, callback);\r\n    }\r\n\r\n    setImmediate(scheduleNext);\r\n  }\r\n\r\n\r\n  if (i % 100 === 0) {\r\n    console.log(process.memoryUsage());\r\n  }\r\n\r\n  scheduleNext();\r\n}\r\n\r\ntestInflight();\r\n```\n## Remediation\nThere is no fixed version for `inflight`.\n\n## References\n- [GitHub Issue](https://github.com/isaacs/inflight/issues/5)\n- [GitHub PR](https://github.com/logdna/logdna-agent/pull/157)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-772"
          ]
        },
        "packageName": "inflight",
        "proprietary": false,
        "creationTime": "2023-11-30T12:51:43.483198Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-11-28T12:47:27Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-11-30T12:52:55.469185Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-13T12:24:01.140165Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-search2@1.1.1",
          "cogent@0.4.3",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "commoner@0.10.8",
          "glob@5.0.15",
          "inflight@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "inflight",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-INFLIGHT-6095116",
        "title": "Missing Release of Resource after Effective Lifetime",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "jkomyno"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "inflight",
        "references": [
          {
            "url": "https://github.com/isaacs/inflight/issues/5",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/logdna/logdna-agent/pull/157",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-13T12:24:01.140165Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Missing Release of Resource after Effective Lifetime via the `makeres` function due to improperly deleting keys from the `reqs` object after execution of callbacks. This behavior causes the keys to remain in the `reqs` object, which leads to resource exhaustion.\r\n\r\nExploiting this vulnerability results in crashing the `node` process or in the application crash.\r\n\r\n**Note:**\r\nThis library is not maintained, and currently, there is no fix for this issue. To overcome this vulnerability, several dependent packages have eliminated the use of this library.\r\n\r\nTo trigger the memory leak, an attacker would need to have the ability to execute or influence the asynchronous operations that use the inflight module within the application. This typically requires access to the internal workings of the server or application, which is not commonly exposed to remote users. Therefore, “Attack vector” is marked as “Local”.\n## PoC\n```js\r\nconst inflight = require('inflight');\r\n\r\nfunction testInflight() {\r\n  let i = 0;\r\n  function scheduleNext() {\r\n    let key = `key-${i++}`;\r\n    const callback = () => {\r\n    };\r\n    for (let j = 0; j < 1000000; j++) {\r\n      inflight(key, callback);\r\n    }\r\n\r\n    setImmediate(scheduleNext);\r\n  }\r\n\r\n\r\n  if (i % 100 === 0) {\r\n    console.log(process.memoryUsage());\r\n  }\r\n\r\n  scheduleNext();\r\n}\r\n\r\ntestInflight();\r\n```\n## Remediation\nThere is no fixed version for `inflight`.\n\n## References\n- [GitHub Issue](https://github.com/isaacs/inflight/issues/5)\n- [GitHub PR](https://github.com/logdna/logdna-agent/pull/157)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-772"
          ]
        },
        "packageName": "inflight",
        "proprietary": false,
        "creationTime": "2023-11-30T12:51:43.483198Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-11-28T12:47:27Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-11-30T12:52:55.469185Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-13T12:24:01.140165Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "commoner@0.10.8",
          "glob@5.0.15",
          "inflight@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "inflight",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-INFLIGHT-6095116",
        "title": "Missing Release of Resource after Effective Lifetime",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "jkomyno"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "inflight",
        "references": [
          {
            "url": "https://github.com/isaacs/inflight/issues/5",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/logdna/logdna-agent/pull/157",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-13T12:24:01.140165Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Missing Release of Resource after Effective Lifetime via the `makeres` function due to improperly deleting keys from the `reqs` object after execution of callbacks. This behavior causes the keys to remain in the `reqs` object, which leads to resource exhaustion.\r\n\r\nExploiting this vulnerability results in crashing the `node` process or in the application crash.\r\n\r\n**Note:**\r\nThis library is not maintained, and currently, there is no fix for this issue. To overcome this vulnerability, several dependent packages have eliminated the use of this library.\r\n\r\nTo trigger the memory leak, an attacker would need to have the ability to execute or influence the asynchronous operations that use the inflight module within the application. This typically requires access to the internal workings of the server or application, which is not commonly exposed to remote users. Therefore, “Attack vector” is marked as “Local”.\n## PoC\n```js\r\nconst inflight = require('inflight');\r\n\r\nfunction testInflight() {\r\n  let i = 0;\r\n  function scheduleNext() {\r\n    let key = `key-${i++}`;\r\n    const callback = () => {\r\n    };\r\n    for (let j = 0; j < 1000000; j++) {\r\n      inflight(key, callback);\r\n    }\r\n\r\n    setImmediate(scheduleNext);\r\n  }\r\n\r\n\r\n  if (i % 100 === 0) {\r\n    console.log(process.memoryUsage());\r\n  }\r\n\r\n  scheduleNext();\r\n}\r\n\r\ntestInflight();\r\n```\n## Remediation\nThere is no fixed version for `inflight`.\n\n## References\n- [GitHub Issue](https://github.com/isaacs/inflight/issues/5)\n- [GitHub PR](https://github.com/logdna/logdna-agent/pull/157)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-772"
          ]
        },
        "packageName": "inflight",
        "proprietary": false,
        "creationTime": "2023-11-30T12:51:43.483198Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-11-28T12:47:27Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-11-30T12:52:55.469185Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-13T12:24:01.140165Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "commoner@0.10.8",
          "glob@5.0.15",
          "inflight@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "inflight",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-INFLIGHT-6095116",
        "title": "Missing Release of Resource after Effective Lifetime",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "jkomyno"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "inflight",
        "references": [
          {
            "url": "https://github.com/isaacs/inflight/issues/5",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/logdna/logdna-agent/pull/157",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-13T12:24:01.140165Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Missing Release of Resource after Effective Lifetime via the `makeres` function due to improperly deleting keys from the `reqs` object after execution of callbacks. This behavior causes the keys to remain in the `reqs` object, which leads to resource exhaustion.\r\n\r\nExploiting this vulnerability results in crashing the `node` process or in the application crash.\r\n\r\n**Note:**\r\nThis library is not maintained, and currently, there is no fix for this issue. To overcome this vulnerability, several dependent packages have eliminated the use of this library.\r\n\r\nTo trigger the memory leak, an attacker would need to have the ability to execute or influence the asynchronous operations that use the inflight module within the application. This typically requires access to the internal workings of the server or application, which is not commonly exposed to remote users. Therefore, “Attack vector” is marked as “Local”.\n## PoC\n```js\r\nconst inflight = require('inflight');\r\n\r\nfunction testInflight() {\r\n  let i = 0;\r\n  function scheduleNext() {\r\n    let key = `key-${i++}`;\r\n    const callback = () => {\r\n    };\r\n    for (let j = 0; j < 1000000; j++) {\r\n      inflight(key, callback);\r\n    }\r\n\r\n    setImmediate(scheduleNext);\r\n  }\r\n\r\n\r\n  if (i % 100 === 0) {\r\n    console.log(process.memoryUsage());\r\n  }\r\n\r\n  scheduleNext();\r\n}\r\n\r\ntestInflight();\r\n```\n## Remediation\nThere is no fixed version for `inflight`.\n\n## References\n- [GitHub Issue](https://github.com/isaacs/inflight/issues/5)\n- [GitHub PR](https://github.com/logdna/logdna-agent/pull/157)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-772"
          ]
        },
        "packageName": "inflight",
        "proprietary": false,
        "creationTime": "2023-11-30T12:51:43.483198Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-11-28T12:47:27Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-11-30T12:52:55.469185Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-13T12:24:01.140165Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "commoner@0.10.8",
          "glob@5.0.15",
          "inflight@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "inflight",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-INFLIGHT-6095116",
        "title": "Missing Release of Resource after Effective Lifetime",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "jkomyno"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "inflight",
        "references": [
          {
            "url": "https://github.com/isaacs/inflight/issues/5",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/logdna/logdna-agent/pull/157",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-13T12:24:01.140165Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Missing Release of Resource after Effective Lifetime via the `makeres` function due to improperly deleting keys from the `reqs` object after execution of callbacks. This behavior causes the keys to remain in the `reqs` object, which leads to resource exhaustion.\r\n\r\nExploiting this vulnerability results in crashing the `node` process or in the application crash.\r\n\r\n**Note:**\r\nThis library is not maintained, and currently, there is no fix for this issue. To overcome this vulnerability, several dependent packages have eliminated the use of this library.\r\n\r\nTo trigger the memory leak, an attacker would need to have the ability to execute or influence the asynchronous operations that use the inflight module within the application. This typically requires access to the internal workings of the server or application, which is not commonly exposed to remote users. Therefore, “Attack vector” is marked as “Local”.\n## PoC\n```js\r\nconst inflight = require('inflight');\r\n\r\nfunction testInflight() {\r\n  let i = 0;\r\n  function scheduleNext() {\r\n    let key = `key-${i++}`;\r\n    const callback = () => {\r\n    };\r\n    for (let j = 0; j < 1000000; j++) {\r\n      inflight(key, callback);\r\n    }\r\n\r\n    setImmediate(scheduleNext);\r\n  }\r\n\r\n\r\n  if (i % 100 === 0) {\r\n    console.log(process.memoryUsage());\r\n  }\r\n\r\n  scheduleNext();\r\n}\r\n\r\ntestInflight();\r\n```\n## Remediation\nThere is no fixed version for `inflight`.\n\n## References\n- [GitHub Issue](https://github.com/isaacs/inflight/issues/5)\n- [GitHub PR](https://github.com/logdna/logdna-agent/pull/157)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-772"
          ]
        },
        "packageName": "inflight",
        "proprietary": false,
        "creationTime": "2023-11-30T12:51:43.483198Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-11-28T12:47:27Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-11-30T12:52:55.469185Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-13T12:24:01.140165Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "commoner@0.10.8",
          "glob@5.0.15",
          "inflight@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "inflight",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-INFLIGHT-6095116",
        "title": "Missing Release of Resource after Effective Lifetime",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "jkomyno"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "inflight",
        "references": [
          {
            "url": "https://github.com/isaacs/inflight/issues/5",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/logdna/logdna-agent/pull/157",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-13T12:24:01.140165Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Missing Release of Resource after Effective Lifetime via the `makeres` function due to improperly deleting keys from the `reqs` object after execution of callbacks. This behavior causes the keys to remain in the `reqs` object, which leads to resource exhaustion.\r\n\r\nExploiting this vulnerability results in crashing the `node` process or in the application crash.\r\n\r\n**Note:**\r\nThis library is not maintained, and currently, there is no fix for this issue. To overcome this vulnerability, several dependent packages have eliminated the use of this library.\r\n\r\nTo trigger the memory leak, an attacker would need to have the ability to execute or influence the asynchronous operations that use the inflight module within the application. This typically requires access to the internal workings of the server or application, which is not commonly exposed to remote users. Therefore, “Attack vector” is marked as “Local”.\n## PoC\n```js\r\nconst inflight = require('inflight');\r\n\r\nfunction testInflight() {\r\n  let i = 0;\r\n  function scheduleNext() {\r\n    let key = `key-${i++}`;\r\n    const callback = () => {\r\n    };\r\n    for (let j = 0; j < 1000000; j++) {\r\n      inflight(key, callback);\r\n    }\r\n\r\n    setImmediate(scheduleNext);\r\n  }\r\n\r\n\r\n  if (i % 100 === 0) {\r\n    console.log(process.memoryUsage());\r\n  }\r\n\r\n  scheduleNext();\r\n}\r\n\r\ntestInflight();\r\n```\n## Remediation\nThere is no fixed version for `inflight`.\n\n## References\n- [GitHub Issue](https://github.com/isaacs/inflight/issues/5)\n- [GitHub PR](https://github.com/logdna/logdna-agent/pull/157)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-772"
          ]
        },
        "packageName": "inflight",
        "proprietary": false,
        "creationTime": "2023-11-30T12:51:43.483198Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-11-28T12:47:27Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-11-30T12:52:55.469185Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-13T12:24:01.140165Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "commoner@0.10.8",
          "glob@5.0.15",
          "inflight@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "inflight",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-IP-6240864",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L/E:P",
        "credit": [
          "Emre Durmaz"
        ],
        "semver": {
          "vulnerable": [
            "<1.1.9",
            ">=2.0.0 <2.0.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "1.1.9",
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.6,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "ip",
        "references": [
          {
            "url": "https://github.com/indutny/node-ip/commit/32f468f1245574785ec080705737a579be1223aa",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/commit/6a3ada9b471b09d5f0f5be264911ab564bf67894",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/issues/128",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/138",
            "title": "GitHub PR"
          },
          {
            "url": "https://cosmosofcyberspace.github.io/npm_ip_cve/npm_ip_cve.html",
            "title": "Vulnerability Report"
          },
          {
            "url": "https://github.com/indutny/node-ip/blob/v1.1.8/lib/ip.js%23L327",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:52:08.996534Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:52:45.251658Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.6,
            "cvssVersion": "3.1",
            "modificationTime": "2024-07-12T15:25:03.508760Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:08.996534Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:45.251658Z"
          }
        ],
        "description": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF) via the `isPublic` function, by failing to identify hex-encoded `0x7f.1` as equivalent to the private addess `127.0.0.1`. An attacker can expose sensitive information, interact with internal services, or exploit other vulnerabilities within the network by exploiting this vulnerability.\n## PoC\n```js\r\nvar ip = require('ip');\r\n\r\nconsole.log(ip.isPublic(\"0x7f.1\"));\r\n//This returns true. It should be false because 0x7f.1 == 127.0.0.1 == 0177.1\r\n```\n## Remediation\nUpgrade `ip` to version 1.1.9, 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/indutny/node-ip/commit/32f468f1245574785ec080705737a579be1223aa)\n- [GitHub Commit](https://github.com/indutny/node-ip/commit/6a3ada9b471b09d5f0f5be264911ab564bf67894)\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/128)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/138)\n- [Vulnerability Report](https://cosmosofcyberspace.github.io/npm_ip_cve/npm_ip_cve.html)\n- [Vulnerable Code](https://github.com/indutny/node-ip/blob/v1.1.8/lib/ip.js#L327)\n",
        "epssDetails": {
          "percentile": "0.37400",
          "probability": "0.00084",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-42282"
          ],
          "CWE": [
            "CWE-918"
          ]
        },
        "packageName": "ip",
        "proprietary": false,
        "creationTime": "2024-02-09T14:56:36.815086Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-02-08T17:45:02Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-02-11T07:37:52.680399Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-07-12T15:25:03.508760Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "socks-proxy-agent@1.0.2",
          "socks@1.1.10",
          "ip@1.1.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "ip",
        "version": "1.1.5"
      },
      {
        "id": "SNYK-JS-IP-7148531",
        "title": "Server-Side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
        "credit": [
          "ouuan"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "ip",
        "references": [
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/934fadee0080b9d201df95a3f7eead6c46e94017",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/94f82bd4f2bace0c228bbbfe70073a71536fcbdf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/aeea96e445164c72607a9043e37bcc7bc8786ec9",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/issues/150",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/143",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-06-03T15:17:37.353649Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-06-06T12:41:40.856637Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-06-03T15:17:37.353649Z"
          }
        ],
        "description": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-Side Request Forgery (SSRF) via the `isPublic` function, which identifies some private IP addresses as public addresses due to improper parsing of the input.\r\nAn attacker can manipulate a system that uses `isLoopback()`, `isPrivate()` and `isPublic` functions to guard outgoing network requests to treat certain IP addresses as globally routable by supplying specially crafted IP addresses.\r\n\r\n**Note**\r\n\r\nThis vulnerability derived from an incomplete fix for [CVE-2023-42282](https://security.snyk.io/vuln/SNYK-JS-IP-6240864)\n## Remediation\nThere is no fixed version for `ip`.\n\n## References\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/934fadee0080b9d201df95a3f7eead6c46e94017)\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/94f82bd4f2bace0c228bbbfe70073a71536fcbdf)\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/aeea96e445164c72607a9043e37bcc7bc8786ec9)\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/150)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/143)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/144)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [
            "CVE-2024-29415"
          ],
          "CWE": [
            "CWE-918"
          ]
        },
        "packageName": "ip",
        "proprietary": false,
        "creationTime": "2024-05-28T07:31:24.271080Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-05-27T20:40:21Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-05-28T08:06:24.160153Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-06-06T12:41:40.856637Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "socks-proxy-agent@1.0.2",
          "socks@1.1.10",
          "ip@1.1.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "ip",
        "version": "1.1.5"
      },
      {
        "id": "SNYK-JS-IP-6240864",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L/E:P",
        "credit": [
          "Emre Durmaz"
        ],
        "semver": {
          "vulnerable": [
            "<1.1.9",
            ">=2.0.0 <2.0.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "1.1.9",
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.6,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "ip",
        "references": [
          {
            "url": "https://github.com/indutny/node-ip/commit/32f468f1245574785ec080705737a579be1223aa",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/commit/6a3ada9b471b09d5f0f5be264911ab564bf67894",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/issues/128",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/138",
            "title": "GitHub PR"
          },
          {
            "url": "https://cosmosofcyberspace.github.io/npm_ip_cve/npm_ip_cve.html",
            "title": "Vulnerability Report"
          },
          {
            "url": "https://github.com/indutny/node-ip/blob/v1.1.8/lib/ip.js%23L327",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:52:08.996534Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:52:45.251658Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.6,
            "cvssVersion": "3.1",
            "modificationTime": "2024-07-12T15:25:03.508760Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:08.996534Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:45.251658Z"
          }
        ],
        "description": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF) via the `isPublic` function, by failing to identify hex-encoded `0x7f.1` as equivalent to the private addess `127.0.0.1`. An attacker can expose sensitive information, interact with internal services, or exploit other vulnerabilities within the network by exploiting this vulnerability.\n## PoC\n```js\r\nvar ip = require('ip');\r\n\r\nconsole.log(ip.isPublic(\"0x7f.1\"));\r\n//This returns true. It should be false because 0x7f.1 == 127.0.0.1 == 0177.1\r\n```\n## Remediation\nUpgrade `ip` to version 1.1.9, 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/indutny/node-ip/commit/32f468f1245574785ec080705737a579be1223aa)\n- [GitHub Commit](https://github.com/indutny/node-ip/commit/6a3ada9b471b09d5f0f5be264911ab564bf67894)\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/128)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/138)\n- [Vulnerability Report](https://cosmosofcyberspace.github.io/npm_ip_cve/npm_ip_cve.html)\n- [Vulnerable Code](https://github.com/indutny/node-ip/blob/v1.1.8/lib/ip.js#L327)\n",
        "epssDetails": {
          "percentile": "0.37400",
          "probability": "0.00084",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-42282"
          ],
          "CWE": [
            "CWE-918"
          ]
        },
        "packageName": "ip",
        "proprietary": false,
        "creationTime": "2024-02-09T14:56:36.815086Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-02-08T17:45:02Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-02-11T07:37:52.680399Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-07-12T15:25:03.508760Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-search2@1.1.1",
          "cogent@0.4.3",
          "proxy-agent@1.1.1",
          "socks-proxy-agent@1.0.2",
          "socks@1.1.10",
          "ip@1.1.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "ip",
        "version": "1.1.5"
      },
      {
        "id": "SNYK-JS-IP-7148531",
        "title": "Server-Side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
        "credit": [
          "ouuan"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "ip",
        "references": [
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/934fadee0080b9d201df95a3f7eead6c46e94017",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/94f82bd4f2bace0c228bbbfe70073a71536fcbdf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/aeea96e445164c72607a9043e37bcc7bc8786ec9",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/issues/150",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/143",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-06-03T15:17:37.353649Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-06-06T12:41:40.856637Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-06-03T15:17:37.353649Z"
          }
        ],
        "description": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-Side Request Forgery (SSRF) via the `isPublic` function, which identifies some private IP addresses as public addresses due to improper parsing of the input.\r\nAn attacker can manipulate a system that uses `isLoopback()`, `isPrivate()` and `isPublic` functions to guard outgoing network requests to treat certain IP addresses as globally routable by supplying specially crafted IP addresses.\r\n\r\n**Note**\r\n\r\nThis vulnerability derived from an incomplete fix for [CVE-2023-42282](https://security.snyk.io/vuln/SNYK-JS-IP-6240864)\n## Remediation\nThere is no fixed version for `ip`.\n\n## References\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/934fadee0080b9d201df95a3f7eead6c46e94017)\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/94f82bd4f2bace0c228bbbfe70073a71536fcbdf)\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/aeea96e445164c72607a9043e37bcc7bc8786ec9)\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/150)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/143)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/144)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [
            "CVE-2024-29415"
          ],
          "CWE": [
            "CWE-918"
          ]
        },
        "packageName": "ip",
        "proprietary": false,
        "creationTime": "2024-05-28T07:31:24.271080Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-05-27T20:40:21Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-05-28T08:06:24.160153Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-06-06T12:41:40.856637Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-search2@1.1.1",
          "cogent@0.4.3",
          "proxy-agent@1.1.1",
          "socks-proxy-agent@1.0.2",
          "socks@1.1.10",
          "ip@1.1.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "ip",
        "version": "1.1.5"
      },
      {
        "id": "SNYK-JS-IP-6240864",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L/E:P",
        "credit": [
          "Emre Durmaz"
        ],
        "semver": {
          "vulnerable": [
            "<1.1.9",
            ">=2.0.0 <2.0.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "1.1.9",
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.6,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "ip",
        "references": [
          {
            "url": "https://github.com/indutny/node-ip/commit/32f468f1245574785ec080705737a579be1223aa",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/commit/6a3ada9b471b09d5f0f5be264911ab564bf67894",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/issues/128",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/138",
            "title": "GitHub PR"
          },
          {
            "url": "https://cosmosofcyberspace.github.io/npm_ip_cve/npm_ip_cve.html",
            "title": "Vulnerability Report"
          },
          {
            "url": "https://github.com/indutny/node-ip/blob/v1.1.8/lib/ip.js%23L327",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:52:08.996534Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:52:45.251658Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.6,
            "cvssVersion": "3.1",
            "modificationTime": "2024-07-12T15:25:03.508760Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:08.996534Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:45.251658Z"
          }
        ],
        "description": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF) via the `isPublic` function, by failing to identify hex-encoded `0x7f.1` as equivalent to the private addess `127.0.0.1`. An attacker can expose sensitive information, interact with internal services, or exploit other vulnerabilities within the network by exploiting this vulnerability.\n## PoC\n```js\r\nvar ip = require('ip');\r\n\r\nconsole.log(ip.isPublic(\"0x7f.1\"));\r\n//This returns true. It should be false because 0x7f.1 == 127.0.0.1 == 0177.1\r\n```\n## Remediation\nUpgrade `ip` to version 1.1.9, 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/indutny/node-ip/commit/32f468f1245574785ec080705737a579be1223aa)\n- [GitHub Commit](https://github.com/indutny/node-ip/commit/6a3ada9b471b09d5f0f5be264911ab564bf67894)\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/128)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/138)\n- [Vulnerability Report](https://cosmosofcyberspace.github.io/npm_ip_cve/npm_ip_cve.html)\n- [Vulnerable Code](https://github.com/indutny/node-ip/blob/v1.1.8/lib/ip.js#L327)\n",
        "epssDetails": {
          "percentile": "0.37400",
          "probability": "0.00084",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-42282"
          ],
          "CWE": [
            "CWE-918"
          ]
        },
        "packageName": "ip",
        "proprietary": false,
        "creationTime": "2024-02-09T14:56:36.815086Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-02-08T17:45:02Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-02-11T07:37:52.680399Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-07-12T15:25:03.508760Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "socks-proxy-agent@1.0.2",
          "socks@1.1.10",
          "ip@1.1.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "ip",
        "version": "1.1.5"
      },
      {
        "id": "SNYK-JS-IP-7148531",
        "title": "Server-Side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
        "credit": [
          "ouuan"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "ip",
        "references": [
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/934fadee0080b9d201df95a3f7eead6c46e94017",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/94f82bd4f2bace0c228bbbfe70073a71536fcbdf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/aeea96e445164c72607a9043e37bcc7bc8786ec9",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/issues/150",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/143",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-06-03T15:17:37.353649Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-06-06T12:41:40.856637Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-06-03T15:17:37.353649Z"
          }
        ],
        "description": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-Side Request Forgery (SSRF) via the `isPublic` function, which identifies some private IP addresses as public addresses due to improper parsing of the input.\r\nAn attacker can manipulate a system that uses `isLoopback()`, `isPrivate()` and `isPublic` functions to guard outgoing network requests to treat certain IP addresses as globally routable by supplying specially crafted IP addresses.\r\n\r\n**Note**\r\n\r\nThis vulnerability derived from an incomplete fix for [CVE-2023-42282](https://security.snyk.io/vuln/SNYK-JS-IP-6240864)\n## Remediation\nThere is no fixed version for `ip`.\n\n## References\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/934fadee0080b9d201df95a3f7eead6c46e94017)\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/94f82bd4f2bace0c228bbbfe70073a71536fcbdf)\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/aeea96e445164c72607a9043e37bcc7bc8786ec9)\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/150)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/143)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/144)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [
            "CVE-2024-29415"
          ],
          "CWE": [
            "CWE-918"
          ]
        },
        "packageName": "ip",
        "proprietary": false,
        "creationTime": "2024-05-28T07:31:24.271080Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-05-27T20:40:21Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-05-28T08:06:24.160153Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-06-06T12:41:40.856637Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "socks-proxy-agent@1.0.2",
          "socks@1.1.10",
          "ip@1.1.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "ip",
        "version": "1.1.5"
      },
      {
        "id": "SNYK-JS-IP-6240864",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L/E:P",
        "credit": [
          "Emre Durmaz"
        ],
        "semver": {
          "vulnerable": [
            "<1.1.9",
            ">=2.0.0 <2.0.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "1.1.9",
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.6,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "ip",
        "references": [
          {
            "url": "https://github.com/indutny/node-ip/commit/32f468f1245574785ec080705737a579be1223aa",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/commit/6a3ada9b471b09d5f0f5be264911ab564bf67894",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/issues/128",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/138",
            "title": "GitHub PR"
          },
          {
            "url": "https://cosmosofcyberspace.github.io/npm_ip_cve/npm_ip_cve.html",
            "title": "Vulnerability Report"
          },
          {
            "url": "https://github.com/indutny/node-ip/blob/v1.1.8/lib/ip.js%23L327",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:52:08.996534Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:52:45.251658Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.6,
            "cvssVersion": "3.1",
            "modificationTime": "2024-07-12T15:25:03.508760Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:08.996534Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:45.251658Z"
          }
        ],
        "description": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF) via the `isPublic` function, by failing to identify hex-encoded `0x7f.1` as equivalent to the private addess `127.0.0.1`. An attacker can expose sensitive information, interact with internal services, or exploit other vulnerabilities within the network by exploiting this vulnerability.\n## PoC\n```js\r\nvar ip = require('ip');\r\n\r\nconsole.log(ip.isPublic(\"0x7f.1\"));\r\n//This returns true. It should be false because 0x7f.1 == 127.0.0.1 == 0177.1\r\n```\n## Remediation\nUpgrade `ip` to version 1.1.9, 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/indutny/node-ip/commit/32f468f1245574785ec080705737a579be1223aa)\n- [GitHub Commit](https://github.com/indutny/node-ip/commit/6a3ada9b471b09d5f0f5be264911ab564bf67894)\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/128)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/138)\n- [Vulnerability Report](https://cosmosofcyberspace.github.io/npm_ip_cve/npm_ip_cve.html)\n- [Vulnerable Code](https://github.com/indutny/node-ip/blob/v1.1.8/lib/ip.js#L327)\n",
        "epssDetails": {
          "percentile": "0.37400",
          "probability": "0.00084",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-42282"
          ],
          "CWE": [
            "CWE-918"
          ]
        },
        "packageName": "ip",
        "proprietary": false,
        "creationTime": "2024-02-09T14:56:36.815086Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-02-08T17:45:02Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-02-11T07:37:52.680399Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-07-12T15:25:03.508760Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "socks-proxy-agent@1.0.2",
          "socks@1.1.10",
          "ip@1.1.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "ip",
        "version": "1.1.5"
      },
      {
        "id": "SNYK-JS-IP-7148531",
        "title": "Server-Side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
        "credit": [
          "ouuan"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "ip",
        "references": [
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/934fadee0080b9d201df95a3f7eead6c46e94017",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/94f82bd4f2bace0c228bbbfe70073a71536fcbdf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/aeea96e445164c72607a9043e37bcc7bc8786ec9",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/issues/150",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/143",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-06-03T15:17:37.353649Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-06-06T12:41:40.856637Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-06-03T15:17:37.353649Z"
          }
        ],
        "description": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-Side Request Forgery (SSRF) via the `isPublic` function, which identifies some private IP addresses as public addresses due to improper parsing of the input.\r\nAn attacker can manipulate a system that uses `isLoopback()`, `isPrivate()` and `isPublic` functions to guard outgoing network requests to treat certain IP addresses as globally routable by supplying specially crafted IP addresses.\r\n\r\n**Note**\r\n\r\nThis vulnerability derived from an incomplete fix for [CVE-2023-42282](https://security.snyk.io/vuln/SNYK-JS-IP-6240864)\n## Remediation\nThere is no fixed version for `ip`.\n\n## References\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/934fadee0080b9d201df95a3f7eead6c46e94017)\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/94f82bd4f2bace0c228bbbfe70073a71536fcbdf)\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/aeea96e445164c72607a9043e37bcc7bc8786ec9)\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/150)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/143)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/144)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [
            "CVE-2024-29415"
          ],
          "CWE": [
            "CWE-918"
          ]
        },
        "packageName": "ip",
        "proprietary": false,
        "creationTime": "2024-05-28T07:31:24.271080Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-05-27T20:40:21Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-05-28T08:06:24.160153Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-06-06T12:41:40.856637Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "socks-proxy-agent@1.0.2",
          "socks@1.1.10",
          "ip@1.1.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "ip",
        "version": "1.1.5"
      },
      {
        "id": "SNYK-JS-IP-6240864",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L/E:P",
        "credit": [
          "Emre Durmaz"
        ],
        "semver": {
          "vulnerable": [
            "<1.1.9",
            ">=2.0.0 <2.0.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "1.1.9",
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.6,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "ip",
        "references": [
          {
            "url": "https://github.com/indutny/node-ip/commit/32f468f1245574785ec080705737a579be1223aa",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/commit/6a3ada9b471b09d5f0f5be264911ab564bf67894",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/issues/128",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/138",
            "title": "GitHub PR"
          },
          {
            "url": "https://cosmosofcyberspace.github.io/npm_ip_cve/npm_ip_cve.html",
            "title": "Vulnerability Report"
          },
          {
            "url": "https://github.com/indutny/node-ip/blob/v1.1.8/lib/ip.js%23L327",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:52:08.996534Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:52:45.251658Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.6,
            "cvssVersion": "3.1",
            "modificationTime": "2024-07-12T15:25:03.508760Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:08.996534Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:45.251658Z"
          }
        ],
        "description": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF) via the `isPublic` function, by failing to identify hex-encoded `0x7f.1` as equivalent to the private addess `127.0.0.1`. An attacker can expose sensitive information, interact with internal services, or exploit other vulnerabilities within the network by exploiting this vulnerability.\n## PoC\n```js\r\nvar ip = require('ip');\r\n\r\nconsole.log(ip.isPublic(\"0x7f.1\"));\r\n//This returns true. It should be false because 0x7f.1 == 127.0.0.1 == 0177.1\r\n```\n## Remediation\nUpgrade `ip` to version 1.1.9, 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/indutny/node-ip/commit/32f468f1245574785ec080705737a579be1223aa)\n- [GitHub Commit](https://github.com/indutny/node-ip/commit/6a3ada9b471b09d5f0f5be264911ab564bf67894)\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/128)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/138)\n- [Vulnerability Report](https://cosmosofcyberspace.github.io/npm_ip_cve/npm_ip_cve.html)\n- [Vulnerable Code](https://github.com/indutny/node-ip/blob/v1.1.8/lib/ip.js#L327)\n",
        "epssDetails": {
          "percentile": "0.37400",
          "probability": "0.00084",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-42282"
          ],
          "CWE": [
            "CWE-918"
          ]
        },
        "packageName": "ip",
        "proprietary": false,
        "creationTime": "2024-02-09T14:56:36.815086Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-02-08T17:45:02Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-02-11T07:37:52.680399Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-07-12T15:25:03.508760Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "socks-proxy-agent@1.0.2",
          "socks@1.1.10",
          "ip@1.1.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "ip",
        "version": "1.1.5"
      },
      {
        "id": "SNYK-JS-IP-7148531",
        "title": "Server-Side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
        "credit": [
          "ouuan"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "ip",
        "references": [
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/934fadee0080b9d201df95a3f7eead6c46e94017",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/94f82bd4f2bace0c228bbbfe70073a71536fcbdf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/aeea96e445164c72607a9043e37bcc7bc8786ec9",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/issues/150",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/143",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-06-03T15:17:37.353649Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-06-06T12:41:40.856637Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-06-03T15:17:37.353649Z"
          }
        ],
        "description": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-Side Request Forgery (SSRF) via the `isPublic` function, which identifies some private IP addresses as public addresses due to improper parsing of the input.\r\nAn attacker can manipulate a system that uses `isLoopback()`, `isPrivate()` and `isPublic` functions to guard outgoing network requests to treat certain IP addresses as globally routable by supplying specially crafted IP addresses.\r\n\r\n**Note**\r\n\r\nThis vulnerability derived from an incomplete fix for [CVE-2023-42282](https://security.snyk.io/vuln/SNYK-JS-IP-6240864)\n## Remediation\nThere is no fixed version for `ip`.\n\n## References\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/934fadee0080b9d201df95a3f7eead6c46e94017)\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/94f82bd4f2bace0c228bbbfe70073a71536fcbdf)\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/aeea96e445164c72607a9043e37bcc7bc8786ec9)\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/150)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/143)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/144)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [
            "CVE-2024-29415"
          ],
          "CWE": [
            "CWE-918"
          ]
        },
        "packageName": "ip",
        "proprietary": false,
        "creationTime": "2024-05-28T07:31:24.271080Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-05-27T20:40:21Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-05-28T08:06:24.160153Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-06-06T12:41:40.856637Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "socks-proxy-agent@1.0.2",
          "socks@1.1.10",
          "ip@1.1.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "ip",
        "version": "1.1.5"
      },
      {
        "id": "SNYK-JS-IP-6240864",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L/E:P",
        "credit": [
          "Emre Durmaz"
        ],
        "semver": {
          "vulnerable": [
            "<1.1.9",
            ">=2.0.0 <2.0.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "1.1.9",
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.6,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "ip",
        "references": [
          {
            "url": "https://github.com/indutny/node-ip/commit/32f468f1245574785ec080705737a579be1223aa",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/commit/6a3ada9b471b09d5f0f5be264911ab564bf67894",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/issues/128",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/138",
            "title": "GitHub PR"
          },
          {
            "url": "https://cosmosofcyberspace.github.io/npm_ip_cve/npm_ip_cve.html",
            "title": "Vulnerability Report"
          },
          {
            "url": "https://github.com/indutny/node-ip/blob/v1.1.8/lib/ip.js%23L327",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:52:08.996534Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:52:45.251658Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.6,
            "cvssVersion": "3.1",
            "modificationTime": "2024-07-12T15:25:03.508760Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:08.996534Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:45.251658Z"
          }
        ],
        "description": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF) via the `isPublic` function, by failing to identify hex-encoded `0x7f.1` as equivalent to the private addess `127.0.0.1`. An attacker can expose sensitive information, interact with internal services, or exploit other vulnerabilities within the network by exploiting this vulnerability.\n## PoC\n```js\r\nvar ip = require('ip');\r\n\r\nconsole.log(ip.isPublic(\"0x7f.1\"));\r\n//This returns true. It should be false because 0x7f.1 == 127.0.0.1 == 0177.1\r\n```\n## Remediation\nUpgrade `ip` to version 1.1.9, 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/indutny/node-ip/commit/32f468f1245574785ec080705737a579be1223aa)\n- [GitHub Commit](https://github.com/indutny/node-ip/commit/6a3ada9b471b09d5f0f5be264911ab564bf67894)\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/128)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/138)\n- [Vulnerability Report](https://cosmosofcyberspace.github.io/npm_ip_cve/npm_ip_cve.html)\n- [Vulnerable Code](https://github.com/indutny/node-ip/blob/v1.1.8/lib/ip.js#L327)\n",
        "epssDetails": {
          "percentile": "0.37400",
          "probability": "0.00084",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-42282"
          ],
          "CWE": [
            "CWE-918"
          ]
        },
        "packageName": "ip",
        "proprietary": false,
        "creationTime": "2024-02-09T14:56:36.815086Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-02-08T17:45:02Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-02-11T07:37:52.680399Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-07-12T15:25:03.508760Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "socks-proxy-agent@1.0.2",
          "socks@1.1.10",
          "ip@1.1.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "ip",
        "version": "1.1.5"
      },
      {
        "id": "SNYK-JS-IP-7148531",
        "title": "Server-Side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
        "credit": [
          "ouuan"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "ip",
        "references": [
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/934fadee0080b9d201df95a3f7eead6c46e94017",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/94f82bd4f2bace0c228bbbfe70073a71536fcbdf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/aeea96e445164c72607a9043e37bcc7bc8786ec9",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/issues/150",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/143",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-06-03T15:17:37.353649Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-06-06T12:41:40.856637Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-06-03T15:17:37.353649Z"
          }
        ],
        "description": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-Side Request Forgery (SSRF) via the `isPublic` function, which identifies some private IP addresses as public addresses due to improper parsing of the input.\r\nAn attacker can manipulate a system that uses `isLoopback()`, `isPrivate()` and `isPublic` functions to guard outgoing network requests to treat certain IP addresses as globally routable by supplying specially crafted IP addresses.\r\n\r\n**Note**\r\n\r\nThis vulnerability derived from an incomplete fix for [CVE-2023-42282](https://security.snyk.io/vuln/SNYK-JS-IP-6240864)\n## Remediation\nThere is no fixed version for `ip`.\n\n## References\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/934fadee0080b9d201df95a3f7eead6c46e94017)\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/94f82bd4f2bace0c228bbbfe70073a71536fcbdf)\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/aeea96e445164c72607a9043e37bcc7bc8786ec9)\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/150)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/143)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/144)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [
            "CVE-2024-29415"
          ],
          "CWE": [
            "CWE-918"
          ]
        },
        "packageName": "ip",
        "proprietary": false,
        "creationTime": "2024-05-28T07:31:24.271080Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-05-27T20:40:21Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-05-28T08:06:24.160153Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-06-06T12:41:40.856637Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "socks-proxy-agent@1.0.2",
          "socks@1.1.10",
          "ip@1.1.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "ip",
        "version": "1.1.5"
      },
      {
        "id": "SNYK-JS-IP-6240864",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L/E:P",
        "credit": [
          "Emre Durmaz"
        ],
        "semver": {
          "vulnerable": [
            "<1.1.9",
            ">=2.0.0 <2.0.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "1.1.9",
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.6,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "ip",
        "references": [
          {
            "url": "https://github.com/indutny/node-ip/commit/32f468f1245574785ec080705737a579be1223aa",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/commit/6a3ada9b471b09d5f0f5be264911ab564bf67894",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/issues/128",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/138",
            "title": "GitHub PR"
          },
          {
            "url": "https://cosmosofcyberspace.github.io/npm_ip_cve/npm_ip_cve.html",
            "title": "Vulnerability Report"
          },
          {
            "url": "https://github.com/indutny/node-ip/blob/v1.1.8/lib/ip.js%23L327",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:52:08.996534Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:52:45.251658Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.6,
            "cvssVersion": "3.1",
            "modificationTime": "2024-07-12T15:25:03.508760Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:08.996534Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:45.251658Z"
          }
        ],
        "description": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF) via the `isPublic` function, by failing to identify hex-encoded `0x7f.1` as equivalent to the private addess `127.0.0.1`. An attacker can expose sensitive information, interact with internal services, or exploit other vulnerabilities within the network by exploiting this vulnerability.\n## PoC\n```js\r\nvar ip = require('ip');\r\n\r\nconsole.log(ip.isPublic(\"0x7f.1\"));\r\n//This returns true. It should be false because 0x7f.1 == 127.0.0.1 == 0177.1\r\n```\n## Remediation\nUpgrade `ip` to version 1.1.9, 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/indutny/node-ip/commit/32f468f1245574785ec080705737a579be1223aa)\n- [GitHub Commit](https://github.com/indutny/node-ip/commit/6a3ada9b471b09d5f0f5be264911ab564bf67894)\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/128)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/138)\n- [Vulnerability Report](https://cosmosofcyberspace.github.io/npm_ip_cve/npm_ip_cve.html)\n- [Vulnerable Code](https://github.com/indutny/node-ip/blob/v1.1.8/lib/ip.js#L327)\n",
        "epssDetails": {
          "percentile": "0.37400",
          "probability": "0.00084",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-42282"
          ],
          "CWE": [
            "CWE-918"
          ]
        },
        "packageName": "ip",
        "proprietary": false,
        "creationTime": "2024-02-09T14:56:36.815086Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-02-08T17:45:02Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-02-11T07:37:52.680399Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-07-12T15:25:03.508760Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "socks-proxy-agent@1.0.2",
          "socks@1.1.10",
          "ip@1.1.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "ip",
        "version": "1.1.5"
      },
      {
        "id": "SNYK-JS-IP-7148531",
        "title": "Server-Side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
        "credit": [
          "ouuan"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "ip",
        "references": [
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/934fadee0080b9d201df95a3f7eead6c46e94017",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/94f82bd4f2bace0c228bbbfe70073a71536fcbdf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/aeea96e445164c72607a9043e37bcc7bc8786ec9",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/issues/150",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/143",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-06-03T15:17:37.353649Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-06-06T12:41:40.856637Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-06-03T15:17:37.353649Z"
          }
        ],
        "description": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-Side Request Forgery (SSRF) via the `isPublic` function, which identifies some private IP addresses as public addresses due to improper parsing of the input.\r\nAn attacker can manipulate a system that uses `isLoopback()`, `isPrivate()` and `isPublic` functions to guard outgoing network requests to treat certain IP addresses as globally routable by supplying specially crafted IP addresses.\r\n\r\n**Note**\r\n\r\nThis vulnerability derived from an incomplete fix for [CVE-2023-42282](https://security.snyk.io/vuln/SNYK-JS-IP-6240864)\n## Remediation\nThere is no fixed version for `ip`.\n\n## References\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/934fadee0080b9d201df95a3f7eead6c46e94017)\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/94f82bd4f2bace0c228bbbfe70073a71536fcbdf)\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/aeea96e445164c72607a9043e37bcc7bc8786ec9)\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/150)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/143)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/144)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [
            "CVE-2024-29415"
          ],
          "CWE": [
            "CWE-918"
          ]
        },
        "packageName": "ip",
        "proprietary": false,
        "creationTime": "2024-05-28T07:31:24.271080Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-05-27T20:40:21Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-05-28T08:06:24.160153Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-06-06T12:41:40.856637Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "socks-proxy-agent@1.0.2",
          "socks@1.1.10",
          "ip@1.1.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "ip",
        "version": "1.1.5"
      },
      {
        "id": "SNYK-JS-MINIMATCH-1019388",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "Nick Starke"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:59:33.493589Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via complicated and illegal regexes.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "118"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2020-10-19T15:28:02.803289Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2016-06-20T16:00:06Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2016-06-20T16:00:06Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T13:59:33.493589Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "unglob@0.1.2",
          "glob@3.2.11",
          "minimatch@0.3.0"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "0.3.0"
      },
      {
        "id": "SNYK-JS-MINIMATCH-3050818",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.5"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:01:37.823356Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
        "epssDetails": {
          "percentile": "0.56315",
          "probability": "0.00179",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-3517"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2022-10-18T06:10:47.980262Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-10-18T06:00:25Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-10-18T06:29:18.078950Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:57.267409Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "unglob@0.1.2",
          "glob@3.2.11",
          "minimatch@0.3.0"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "0.3.0"
      },
      {
        "id": "npm:minimatch:20160620",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "Nick Starke"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.2"
        ],
        "patches": [
          {
            "id": "patch:npm:minimatch:20160620:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/minimatch/20160620/minimatch_20160620_0_0_6944abf9e0694bd22fd9dad293faa40c2bc8a955.patch"
            ],
            "version": "<=3.0.1 >2.0.5",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.833898Z"
          },
          {
            "id": "patch:npm:minimatch:20160620:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/minimatch/20160620/minimatch_20160620_0_1_6944abf9e0694bd22fd9dad293faa40c2bc8a955.patch"
            ],
            "version": "<=2.0.5 >0.0.5",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.835000Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [
          {
            "version": [
              ">0.0.5 <3.0.2"
            ],
            "functionId": {
              "filePath": "minimatch.js",
              "className": null,
              "functionName": "braceExpand"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:35.094798Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:58:44.613579Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:35.094798Z"
          }
        ],
        "description": "## Overview\n\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS).\n\n## Details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\r\n\r\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\r\n\r\nLet’s take the following regular expression as an example:\r\n```js\r\nregex = /A(B|C+)+D/\r\n```\r\n\r\nThis regular expression accomplishes the following:\r\n- `A` The string must start with the letter 'A'\r\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\r\n- `D` Finally, we ensure this section of the string ends with a 'D'\r\n\r\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\r\n\r\nIt most cases, it doesn't take very long for a regex engine to find a match:\r\n\r\n```bash\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\r\n0.04s user 0.01s system 95% cpu 0.052 total\r\n\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\r\n1.79s user 0.02s system 99% cpu 1.812 total\r\n```\r\n\r\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\r\n\r\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\r\n\r\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\r\n1. CCC\r\n2. CC+C\r\n3. C+CC\r\n4. C+C+C.\r\n\r\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\r\n\r\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\r\n\r\n| String | Number of C's | Number of steps |\r\n| -------|-------------:| -----:|\r\n| ACCCX | 3 | 38\r\n| ACCCCX | 4 | 71\r\n| ACCCCCX | 5 | 136\r\n| ACCCCCCCCCCCCCCX | 14 | 65,553\r\n\r\n\r\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\n\nUpgrade `minimatch` to version 3.0.2 or higher.\n\n\n## References\n\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955)\n",
        "epssDetails": {
          "percentile": "0.48308",
          "probability": "0.00123",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2016-10540"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "118"
          ],
          "GHSA": [
            "GHSA-hxm2-r34f-qmc5"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-MINIMATCH-10105",
            "SNYK-JS-MINIMATCH-10105",
            "npm:minimatch:20160620"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2016-06-20T16:00:06.484000Z",
        "functions_new": [
          {
            "version": [
              ">0.0.5 <3.0.2"
            ],
            "functionId": {
              "filePath": "minimatch.js",
              "functionName": "braceExpand"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-MINIMATCH-10105"
        ],
        "disclosureTime": "2016-06-20T15:52:52Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2016-06-20T15:52:52Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:46:35.094798Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "unglob@0.1.2",
          "glob@3.2.11",
          "minimatch@0.3.0"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "minimatch",
        "version": "0.3.0"
      },
      {
        "id": "SNYK-JS-MINIMATCH-1019388",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "Nick Starke"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:59:33.493589Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via complicated and illegal regexes.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "118"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2020-10-19T15:28:02.803289Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2016-06-20T16:00:06Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2016-06-20T16:00:06Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T13:59:33.493589Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "unglob@0.1.2",
          "glob@3.2.11",
          "minimatch@0.3.0"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "0.3.0"
      },
      {
        "id": "SNYK-JS-MINIMATCH-3050818",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.5"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:01:37.823356Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
        "epssDetails": {
          "percentile": "0.56315",
          "probability": "0.00179",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-3517"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2022-10-18T06:10:47.980262Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-10-18T06:00:25Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-10-18T06:29:18.078950Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:57.267409Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "unglob@0.1.2",
          "glob@3.2.11",
          "minimatch@0.3.0"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "0.3.0"
      },
      {
        "id": "npm:minimatch:20160620",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "Nick Starke"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.2"
        ],
        "patches": [
          {
            "id": "patch:npm:minimatch:20160620:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/minimatch/20160620/minimatch_20160620_0_0_6944abf9e0694bd22fd9dad293faa40c2bc8a955.patch"
            ],
            "version": "<=3.0.1 >2.0.5",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.833898Z"
          },
          {
            "id": "patch:npm:minimatch:20160620:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/minimatch/20160620/minimatch_20160620_0_1_6944abf9e0694bd22fd9dad293faa40c2bc8a955.patch"
            ],
            "version": "<=2.0.5 >0.0.5",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.835000Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [
          {
            "version": [
              ">0.0.5 <3.0.2"
            ],
            "functionId": {
              "filePath": "minimatch.js",
              "className": null,
              "functionName": "braceExpand"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:35.094798Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:58:44.613579Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:35.094798Z"
          }
        ],
        "description": "## Overview\n\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS).\n\n## Details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\r\n\r\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\r\n\r\nLet’s take the following regular expression as an example:\r\n```js\r\nregex = /A(B|C+)+D/\r\n```\r\n\r\nThis regular expression accomplishes the following:\r\n- `A` The string must start with the letter 'A'\r\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\r\n- `D` Finally, we ensure this section of the string ends with a 'D'\r\n\r\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\r\n\r\nIt most cases, it doesn't take very long for a regex engine to find a match:\r\n\r\n```bash\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\r\n0.04s user 0.01s system 95% cpu 0.052 total\r\n\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\r\n1.79s user 0.02s system 99% cpu 1.812 total\r\n```\r\n\r\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\r\n\r\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\r\n\r\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\r\n1. CCC\r\n2. CC+C\r\n3. C+CC\r\n4. C+C+C.\r\n\r\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\r\n\r\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\r\n\r\n| String | Number of C's | Number of steps |\r\n| -------|-------------:| -----:|\r\n| ACCCX | 3 | 38\r\n| ACCCCX | 4 | 71\r\n| ACCCCCX | 5 | 136\r\n| ACCCCCCCCCCCCCCX | 14 | 65,553\r\n\r\n\r\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\n\nUpgrade `minimatch` to version 3.0.2 or higher.\n\n\n## References\n\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955)\n",
        "epssDetails": {
          "percentile": "0.48308",
          "probability": "0.00123",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2016-10540"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "118"
          ],
          "GHSA": [
            "GHSA-hxm2-r34f-qmc5"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-MINIMATCH-10105",
            "SNYK-JS-MINIMATCH-10105",
            "npm:minimatch:20160620"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2016-06-20T16:00:06.484000Z",
        "functions_new": [
          {
            "version": [
              ">0.0.5 <3.0.2"
            ],
            "functionId": {
              "filePath": "minimatch.js",
              "functionName": "braceExpand"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-MINIMATCH-10105"
        ],
        "disclosureTime": "2016-06-20T15:52:52Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2016-06-20T15:52:52Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:46:35.094798Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "unglob@0.1.2",
          "glob@3.2.11",
          "minimatch@0.3.0"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "minimatch",
        "version": "0.3.0"
      },
      {
        "id": "SNYK-JS-MINIMATCH-1019388",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "Nick Starke"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:59:33.493589Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via complicated and illegal regexes.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "118"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2020-10-19T15:28:02.803289Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2016-06-20T16:00:06Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2016-06-20T16:00:06Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T13:59:33.493589Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-build@1.2.2",
          "component-builder@1.2.1",
          "component-manifest@1.0.0",
          "unglob@0.1.2",
          "glob@3.2.11",
          "minimatch@0.3.0"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "0.3.0"
      },
      {
        "id": "SNYK-JS-MINIMATCH-3050818",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.5"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:01:37.823356Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
        "epssDetails": {
          "percentile": "0.56315",
          "probability": "0.00179",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-3517"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2022-10-18T06:10:47.980262Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-10-18T06:00:25Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-10-18T06:29:18.078950Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:57.267409Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-build@1.2.2",
          "component-builder@1.2.1",
          "component-manifest@1.0.0",
          "unglob@0.1.2",
          "glob@3.2.11",
          "minimatch@0.3.0"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "0.3.0"
      },
      {
        "id": "npm:minimatch:20160620",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "Nick Starke"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.2"
        ],
        "patches": [
          {
            "id": "patch:npm:minimatch:20160620:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/minimatch/20160620/minimatch_20160620_0_0_6944abf9e0694bd22fd9dad293faa40c2bc8a955.patch"
            ],
            "version": "<=3.0.1 >2.0.5",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.833898Z"
          },
          {
            "id": "patch:npm:minimatch:20160620:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/minimatch/20160620/minimatch_20160620_0_1_6944abf9e0694bd22fd9dad293faa40c2bc8a955.patch"
            ],
            "version": "<=2.0.5 >0.0.5",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.835000Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [
          {
            "version": [
              ">0.0.5 <3.0.2"
            ],
            "functionId": {
              "filePath": "minimatch.js",
              "className": null,
              "functionName": "braceExpand"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:35.094798Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:58:44.613579Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:35.094798Z"
          }
        ],
        "description": "## Overview\n\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS).\n\n## Details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\r\n\r\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\r\n\r\nLet’s take the following regular expression as an example:\r\n```js\r\nregex = /A(B|C+)+D/\r\n```\r\n\r\nThis regular expression accomplishes the following:\r\n- `A` The string must start with the letter 'A'\r\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\r\n- `D` Finally, we ensure this section of the string ends with a 'D'\r\n\r\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\r\n\r\nIt most cases, it doesn't take very long for a regex engine to find a match:\r\n\r\n```bash\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\r\n0.04s user 0.01s system 95% cpu 0.052 total\r\n\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\r\n1.79s user 0.02s system 99% cpu 1.812 total\r\n```\r\n\r\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\r\n\r\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\r\n\r\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\r\n1. CCC\r\n2. CC+C\r\n3. C+CC\r\n4. C+C+C.\r\n\r\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\r\n\r\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\r\n\r\n| String | Number of C's | Number of steps |\r\n| -------|-------------:| -----:|\r\n| ACCCX | 3 | 38\r\n| ACCCCX | 4 | 71\r\n| ACCCCCX | 5 | 136\r\n| ACCCCCCCCCCCCCCX | 14 | 65,553\r\n\r\n\r\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\n\nUpgrade `minimatch` to version 3.0.2 or higher.\n\n\n## References\n\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955)\n",
        "epssDetails": {
          "percentile": "0.48308",
          "probability": "0.00123",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2016-10540"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "118"
          ],
          "GHSA": [
            "GHSA-hxm2-r34f-qmc5"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-MINIMATCH-10105",
            "SNYK-JS-MINIMATCH-10105",
            "npm:minimatch:20160620"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2016-06-20T16:00:06.484000Z",
        "functions_new": [
          {
            "version": [
              ">0.0.5 <3.0.2"
            ],
            "functionId": {
              "filePath": "minimatch.js",
              "functionName": "braceExpand"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-MINIMATCH-10105"
        ],
        "disclosureTime": "2016-06-20T15:52:52Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2016-06-20T15:52:52Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:46:35.094798Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-build@1.2.2",
          "component-builder@1.2.1",
          "component-manifest@1.0.0",
          "unglob@0.1.2",
          "glob@3.2.11",
          "minimatch@0.3.0"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "minimatch",
        "version": "0.3.0"
      },
      {
        "id": "SNYK-JS-MINIMATCH-1019388",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "Nick Starke"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:59:33.493589Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via complicated and illegal regexes.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "118"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2020-10-19T15:28:02.803289Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2016-06-20T16:00:06Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2016-06-20T16:00:06Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T13:59:33.493589Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "unglob@0.1.2",
          "minimatch@0.2.14"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "0.2.14"
      },
      {
        "id": "SNYK-JS-MINIMATCH-3050818",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.5"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:01:37.823356Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
        "epssDetails": {
          "percentile": "0.56315",
          "probability": "0.00179",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-3517"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2022-10-18T06:10:47.980262Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-10-18T06:00:25Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-10-18T06:29:18.078950Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:57.267409Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "unglob@0.1.2",
          "minimatch@0.2.14"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "0.2.14"
      },
      {
        "id": "npm:minimatch:20160620",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "Nick Starke"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.2"
        ],
        "patches": [
          {
            "id": "patch:npm:minimatch:20160620:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/minimatch/20160620/minimatch_20160620_0_0_6944abf9e0694bd22fd9dad293faa40c2bc8a955.patch"
            ],
            "version": "<=3.0.1 >2.0.5",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.833898Z"
          },
          {
            "id": "patch:npm:minimatch:20160620:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/minimatch/20160620/minimatch_20160620_0_1_6944abf9e0694bd22fd9dad293faa40c2bc8a955.patch"
            ],
            "version": "<=2.0.5 >0.0.5",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.835000Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [
          {
            "version": [
              ">0.0.5 <3.0.2"
            ],
            "functionId": {
              "filePath": "minimatch.js",
              "className": null,
              "functionName": "braceExpand"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:35.094798Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:58:44.613579Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:35.094798Z"
          }
        ],
        "description": "## Overview\n\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS).\n\n## Details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\r\n\r\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\r\n\r\nLet’s take the following regular expression as an example:\r\n```js\r\nregex = /A(B|C+)+D/\r\n```\r\n\r\nThis regular expression accomplishes the following:\r\n- `A` The string must start with the letter 'A'\r\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\r\n- `D` Finally, we ensure this section of the string ends with a 'D'\r\n\r\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\r\n\r\nIt most cases, it doesn't take very long for a regex engine to find a match:\r\n\r\n```bash\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\r\n0.04s user 0.01s system 95% cpu 0.052 total\r\n\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\r\n1.79s user 0.02s system 99% cpu 1.812 total\r\n```\r\n\r\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\r\n\r\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\r\n\r\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\r\n1. CCC\r\n2. CC+C\r\n3. C+CC\r\n4. C+C+C.\r\n\r\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\r\n\r\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\r\n\r\n| String | Number of C's | Number of steps |\r\n| -------|-------------:| -----:|\r\n| ACCCX | 3 | 38\r\n| ACCCCX | 4 | 71\r\n| ACCCCCX | 5 | 136\r\n| ACCCCCCCCCCCCCCX | 14 | 65,553\r\n\r\n\r\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\n\nUpgrade `minimatch` to version 3.0.2 or higher.\n\n\n## References\n\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955)\n",
        "epssDetails": {
          "percentile": "0.48308",
          "probability": "0.00123",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2016-10540"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "118"
          ],
          "GHSA": [
            "GHSA-hxm2-r34f-qmc5"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-MINIMATCH-10105",
            "SNYK-JS-MINIMATCH-10105",
            "npm:minimatch:20160620"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2016-06-20T16:00:06.484000Z",
        "functions_new": [
          {
            "version": [
              ">0.0.5 <3.0.2"
            ],
            "functionId": {
              "filePath": "minimatch.js",
              "functionName": "braceExpand"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-MINIMATCH-10105"
        ],
        "disclosureTime": "2016-06-20T15:52:52Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2016-06-20T15:52:52Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:46:35.094798Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "unglob@0.1.2",
          "minimatch@0.2.14"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "minimatch",
        "version": "0.2.14"
      },
      {
        "id": "SNYK-JS-MINIMATCH-1019388",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "Nick Starke"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:59:33.493589Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via complicated and illegal regexes.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "118"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2020-10-19T15:28:02.803289Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2016-06-20T16:00:06Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2016-06-20T16:00:06Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T13:59:33.493589Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-watcher@1.0.3",
          "sane@0.8.1",
          "minimatch@0.2.14"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "0.2.14"
      },
      {
        "id": "SNYK-JS-MINIMATCH-3050818",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.5"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:01:37.823356Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
        "epssDetails": {
          "percentile": "0.56315",
          "probability": "0.00179",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-3517"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2022-10-18T06:10:47.980262Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-10-18T06:00:25Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-10-18T06:29:18.078950Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:57.267409Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-watcher@1.0.3",
          "sane@0.8.1",
          "minimatch@0.2.14"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "0.2.14"
      },
      {
        "id": "npm:minimatch:20160620",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "Nick Starke"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.2"
        ],
        "patches": [
          {
            "id": "patch:npm:minimatch:20160620:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/minimatch/20160620/minimatch_20160620_0_0_6944abf9e0694bd22fd9dad293faa40c2bc8a955.patch"
            ],
            "version": "<=3.0.1 >2.0.5",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.833898Z"
          },
          {
            "id": "patch:npm:minimatch:20160620:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/minimatch/20160620/minimatch_20160620_0_1_6944abf9e0694bd22fd9dad293faa40c2bc8a955.patch"
            ],
            "version": "<=2.0.5 >0.0.5",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.835000Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [
          {
            "version": [
              ">0.0.5 <3.0.2"
            ],
            "functionId": {
              "filePath": "minimatch.js",
              "className": null,
              "functionName": "braceExpand"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:35.094798Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:58:44.613579Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:35.094798Z"
          }
        ],
        "description": "## Overview\n\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS).\n\n## Details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\r\n\r\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\r\n\r\nLet’s take the following regular expression as an example:\r\n```js\r\nregex = /A(B|C+)+D/\r\n```\r\n\r\nThis regular expression accomplishes the following:\r\n- `A` The string must start with the letter 'A'\r\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\r\n- `D` Finally, we ensure this section of the string ends with a 'D'\r\n\r\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\r\n\r\nIt most cases, it doesn't take very long for a regex engine to find a match:\r\n\r\n```bash\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\r\n0.04s user 0.01s system 95% cpu 0.052 total\r\n\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\r\n1.79s user 0.02s system 99% cpu 1.812 total\r\n```\r\n\r\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\r\n\r\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\r\n\r\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\r\n1. CCC\r\n2. CC+C\r\n3. C+CC\r\n4. C+C+C.\r\n\r\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\r\n\r\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\r\n\r\n| String | Number of C's | Number of steps |\r\n| -------|-------------:| -----:|\r\n| ACCCX | 3 | 38\r\n| ACCCCX | 4 | 71\r\n| ACCCCCX | 5 | 136\r\n| ACCCCCCCCCCCCCCX | 14 | 65,553\r\n\r\n\r\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\n\nUpgrade `minimatch` to version 3.0.2 or higher.\n\n\n## References\n\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955)\n",
        "epssDetails": {
          "percentile": "0.48308",
          "probability": "0.00123",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2016-10540"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "118"
          ],
          "GHSA": [
            "GHSA-hxm2-r34f-qmc5"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-MINIMATCH-10105",
            "SNYK-JS-MINIMATCH-10105",
            "npm:minimatch:20160620"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2016-06-20T16:00:06.484000Z",
        "functions_new": [
          {
            "version": [
              ">0.0.5 <3.0.2"
            ],
            "functionId": {
              "filePath": "minimatch.js",
              "functionName": "braceExpand"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-MINIMATCH-10105"
        ],
        "disclosureTime": "2016-06-20T15:52:52Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2016-06-20T15:52:52Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:46:35.094798Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-watcher@1.0.3",
          "sane@0.8.1",
          "minimatch@0.2.14"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "minimatch",
        "version": "0.2.14"
      },
      {
        "id": "SNYK-JS-MINIMATCH-1019388",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "Nick Starke"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:59:33.493589Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via complicated and illegal regexes.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "118"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2020-10-19T15:28:02.803289Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2016-06-20T16:00:06Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2016-06-20T16:00:06Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T13:59:33.493589Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "unglob@0.1.2",
          "minimatch@0.2.14"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "0.2.14"
      },
      {
        "id": "SNYK-JS-MINIMATCH-3050818",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.5"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:01:37.823356Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
        "epssDetails": {
          "percentile": "0.56315",
          "probability": "0.00179",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-3517"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2022-10-18T06:10:47.980262Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-10-18T06:00:25Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-10-18T06:29:18.078950Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:57.267409Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "unglob@0.1.2",
          "minimatch@0.2.14"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "0.2.14"
      },
      {
        "id": "npm:minimatch:20160620",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "Nick Starke"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.2"
        ],
        "patches": [
          {
            "id": "patch:npm:minimatch:20160620:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/minimatch/20160620/minimatch_20160620_0_0_6944abf9e0694bd22fd9dad293faa40c2bc8a955.patch"
            ],
            "version": "<=3.0.1 >2.0.5",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.833898Z"
          },
          {
            "id": "patch:npm:minimatch:20160620:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/minimatch/20160620/minimatch_20160620_0_1_6944abf9e0694bd22fd9dad293faa40c2bc8a955.patch"
            ],
            "version": "<=2.0.5 >0.0.5",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.835000Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [
          {
            "version": [
              ">0.0.5 <3.0.2"
            ],
            "functionId": {
              "filePath": "minimatch.js",
              "className": null,
              "functionName": "braceExpand"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:35.094798Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:58:44.613579Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:35.094798Z"
          }
        ],
        "description": "## Overview\n\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS).\n\n## Details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\r\n\r\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\r\n\r\nLet’s take the following regular expression as an example:\r\n```js\r\nregex = /A(B|C+)+D/\r\n```\r\n\r\nThis regular expression accomplishes the following:\r\n- `A` The string must start with the letter 'A'\r\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\r\n- `D` Finally, we ensure this section of the string ends with a 'D'\r\n\r\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\r\n\r\nIt most cases, it doesn't take very long for a regex engine to find a match:\r\n\r\n```bash\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\r\n0.04s user 0.01s system 95% cpu 0.052 total\r\n\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\r\n1.79s user 0.02s system 99% cpu 1.812 total\r\n```\r\n\r\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\r\n\r\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\r\n\r\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\r\n1. CCC\r\n2. CC+C\r\n3. C+CC\r\n4. C+C+C.\r\n\r\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\r\n\r\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\r\n\r\n| String | Number of C's | Number of steps |\r\n| -------|-------------:| -----:|\r\n| ACCCX | 3 | 38\r\n| ACCCCX | 4 | 71\r\n| ACCCCCX | 5 | 136\r\n| ACCCCCCCCCCCCCCX | 14 | 65,553\r\n\r\n\r\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\n\nUpgrade `minimatch` to version 3.0.2 or higher.\n\n\n## References\n\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955)\n",
        "epssDetails": {
          "percentile": "0.48308",
          "probability": "0.00123",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2016-10540"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "118"
          ],
          "GHSA": [
            "GHSA-hxm2-r34f-qmc5"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-MINIMATCH-10105",
            "SNYK-JS-MINIMATCH-10105",
            "npm:minimatch:20160620"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2016-06-20T16:00:06.484000Z",
        "functions_new": [
          {
            "version": [
              ">0.0.5 <3.0.2"
            ],
            "functionId": {
              "filePath": "minimatch.js",
              "functionName": "braceExpand"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-MINIMATCH-10105"
        ],
        "disclosureTime": "2016-06-20T15:52:52Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2016-06-20T15:52:52Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:46:35.094798Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "unglob@0.1.2",
          "minimatch@0.2.14"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "minimatch",
        "version": "0.2.14"
      },
      {
        "id": "SNYK-JS-MINIMATCH-1019388",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "Nick Starke"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:59:33.493589Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via complicated and illegal regexes.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "118"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2020-10-19T15:28:02.803289Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2016-06-20T16:00:06Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2016-06-20T16:00:06Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T13:59:33.493589Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-build@1.2.2",
          "component-builder@1.2.1",
          "component-manifest@1.0.0",
          "unglob@0.1.2",
          "minimatch@0.2.14"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "0.2.14"
      },
      {
        "id": "SNYK-JS-MINIMATCH-3050818",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.5"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:01:37.823356Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
        "epssDetails": {
          "percentile": "0.56315",
          "probability": "0.00179",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-3517"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2022-10-18T06:10:47.980262Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-10-18T06:00:25Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-10-18T06:29:18.078950Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:57.267409Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-build@1.2.2",
          "component-builder@1.2.1",
          "component-manifest@1.0.0",
          "unglob@0.1.2",
          "minimatch@0.2.14"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "0.2.14"
      },
      {
        "id": "npm:minimatch:20160620",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "Nick Starke"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.2"
        ],
        "patches": [
          {
            "id": "patch:npm:minimatch:20160620:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/minimatch/20160620/minimatch_20160620_0_0_6944abf9e0694bd22fd9dad293faa40c2bc8a955.patch"
            ],
            "version": "<=3.0.1 >2.0.5",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.833898Z"
          },
          {
            "id": "patch:npm:minimatch:20160620:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/minimatch/20160620/minimatch_20160620_0_1_6944abf9e0694bd22fd9dad293faa40c2bc8a955.patch"
            ],
            "version": "<=2.0.5 >0.0.5",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.835000Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [
          {
            "version": [
              ">0.0.5 <3.0.2"
            ],
            "functionId": {
              "filePath": "minimatch.js",
              "className": null,
              "functionName": "braceExpand"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:35.094798Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:58:44.613579Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:35.094798Z"
          }
        ],
        "description": "## Overview\n\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS).\n\n## Details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\r\n\r\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\r\n\r\nLet’s take the following regular expression as an example:\r\n```js\r\nregex = /A(B|C+)+D/\r\n```\r\n\r\nThis regular expression accomplishes the following:\r\n- `A` The string must start with the letter 'A'\r\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\r\n- `D` Finally, we ensure this section of the string ends with a 'D'\r\n\r\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\r\n\r\nIt most cases, it doesn't take very long for a regex engine to find a match:\r\n\r\n```bash\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\r\n0.04s user 0.01s system 95% cpu 0.052 total\r\n\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\r\n1.79s user 0.02s system 99% cpu 1.812 total\r\n```\r\n\r\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\r\n\r\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\r\n\r\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\r\n1. CCC\r\n2. CC+C\r\n3. C+CC\r\n4. C+C+C.\r\n\r\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\r\n\r\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\r\n\r\n| String | Number of C's | Number of steps |\r\n| -------|-------------:| -----:|\r\n| ACCCX | 3 | 38\r\n| ACCCCX | 4 | 71\r\n| ACCCCCX | 5 | 136\r\n| ACCCCCCCCCCCCCCX | 14 | 65,553\r\n\r\n\r\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\n\nUpgrade `minimatch` to version 3.0.2 or higher.\n\n\n## References\n\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955)\n",
        "epssDetails": {
          "percentile": "0.48308",
          "probability": "0.00123",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2016-10540"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "118"
          ],
          "GHSA": [
            "GHSA-hxm2-r34f-qmc5"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-MINIMATCH-10105",
            "SNYK-JS-MINIMATCH-10105",
            "npm:minimatch:20160620"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2016-06-20T16:00:06.484000Z",
        "functions_new": [
          {
            "version": [
              ">0.0.5 <3.0.2"
            ],
            "functionId": {
              "filePath": "minimatch.js",
              "functionName": "braceExpand"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-MINIMATCH-10105"
        ],
        "disclosureTime": "2016-06-20T15:52:52Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2016-06-20T15:52:52Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:46:35.094798Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-build@1.2.2",
          "component-builder@1.2.1",
          "component-manifest@1.0.0",
          "unglob@0.1.2",
          "minimatch@0.2.14"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "minimatch",
        "version": "0.2.14"
      },
      {
        "id": "SNYK-JS-MINIMATCH-3050818",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.5"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:01:37.823356Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
        "epssDetails": {
          "percentile": "0.56315",
          "probability": "0.00179",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-3517"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2022-10-18T06:10:47.980262Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-10-18T06:00:25Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-10-18T06:29:18.078950Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:57.267409Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "rimraf@2.7.1",
          "glob@7.1.6",
          "minimatch@3.0.4"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "3.0.4"
      },
      {
        "id": "SNYK-JS-MINIMATCH-3050818",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.5"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:01:37.823356Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
        "epssDetails": {
          "percentile": "0.56315",
          "probability": "0.00179",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-3517"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2022-10-18T06:10:47.980262Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-10-18T06:00:25Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-10-18T06:29:18.078950Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:57.267409Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "rimraf@2.7.1",
          "glob@7.1.6",
          "minimatch@3.0.4"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "3.0.4"
      },
      {
        "id": "SNYK-JS-MINIMATCH-3050818",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.5"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:01:37.823356Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
        "epssDetails": {
          "percentile": "0.56315",
          "probability": "0.00179",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-3517"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2022-10-18T06:10:47.980262Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-10-18T06:00:25Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-10-18T06:29:18.078950Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:57.267409Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "decompress@0.2.5",
          "rimraf@2.7.1",
          "glob@7.1.6",
          "minimatch@3.0.4"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "3.0.4"
      },
      {
        "id": "SNYK-JS-MINIMATCH-3050818",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.5"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:01:37.823356Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
        "epssDetails": {
          "percentile": "0.56315",
          "probability": "0.00179",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-3517"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2022-10-18T06:10:47.980262Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-10-18T06:00:25Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-10-18T06:29:18.078950Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:57.267409Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "decompress@0.2.5",
          "tar@0.1.20",
          "fstream@0.1.31",
          "rimraf@2.7.1",
          "glob@7.1.6",
          "minimatch@3.0.4"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "3.0.4"
      },
      {
        "id": "SNYK-JS-MINIMATCH-3050818",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.5"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:01:37.823356Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
        "epssDetails": {
          "percentile": "0.56315",
          "probability": "0.00179",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-3517"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2022-10-18T06:10:47.980262Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-10-18T06:00:25Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-10-18T06:29:18.078950Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:57.267409Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "commoner@0.10.8",
          "glob@5.0.15",
          "minimatch@3.0.4"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "3.0.4"
      },
      {
        "id": "SNYK-JS-MINIMATCH-3050818",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.5"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:01:37.823356Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
        "epssDetails": {
          "percentile": "0.56315",
          "probability": "0.00179",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-3517"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2022-10-18T06:10:47.980262Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-10-18T06:00:25Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-10-18T06:29:18.078950Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:57.267409Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-search2@1.1.1",
          "cogent@0.4.3",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "commoner@0.10.8",
          "glob@5.0.15",
          "minimatch@3.0.4"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "3.0.4"
      },
      {
        "id": "SNYK-JS-MINIMATCH-3050818",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.5"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:01:37.823356Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
        "epssDetails": {
          "percentile": "0.56315",
          "probability": "0.00179",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-3517"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2022-10-18T06:10:47.980262Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-10-18T06:00:25Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-10-18T06:29:18.078950Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:57.267409Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "commoner@0.10.8",
          "glob@5.0.15",
          "minimatch@3.0.4"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "3.0.4"
      },
      {
        "id": "SNYK-JS-MINIMATCH-3050818",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.5"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:01:37.823356Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
        "epssDetails": {
          "percentile": "0.56315",
          "probability": "0.00179",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-3517"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2022-10-18T06:10:47.980262Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-10-18T06:00:25Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-10-18T06:29:18.078950Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:57.267409Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "commoner@0.10.8",
          "glob@5.0.15",
          "minimatch@3.0.4"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "3.0.4"
      },
      {
        "id": "SNYK-JS-MINIMATCH-3050818",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.5"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:01:37.823356Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
        "epssDetails": {
          "percentile": "0.56315",
          "probability": "0.00179",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-3517"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2022-10-18T06:10:47.980262Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-10-18T06:00:25Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-10-18T06:29:18.078950Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:57.267409Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "commoner@0.10.8",
          "glob@5.0.15",
          "minimatch@3.0.4"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "3.0.4"
      },
      {
        "id": "SNYK-JS-MINIMATCH-3050818",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.5"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:01:37.823356Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
        "epssDetails": {
          "percentile": "0.56315",
          "probability": "0.00179",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-3517"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2022-10-18T06:10:47.980262Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-10-18T06:00:25Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-10-18T06:29:18.078950Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:57.267409Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "commoner@0.10.8",
          "glob@5.0.15",
          "minimatch@3.0.4"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "3.0.4"
      },
      {
        "id": "SNYK-JS-MINIMATCH-3050818",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.5"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:01:37.823356Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:01.021508Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:57.267409Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
        "epssDetails": {
          "percentile": "0.56315",
          "probability": "0.00179",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-3517"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2022-10-18T06:10:47.980262Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-10-18T06:00:25Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-10-18T06:29:18.078950Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:57.267409Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "commoner@0.10.8",
          "glob@5.0.15",
          "minimatch@3.0.4"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimatch",
        "version": "3.0.4"
      },
      {
        "id": "SNYK-JS-MINIMIST-2429795",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<0.2.4",
            ">=1.2.0 <1.2.6"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "0.2.4",
          "1.2.6"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimist",
        "references": [
          {
            "url": "https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703",
            "title": "Fix Commit"
          },
          {
            "url": "https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d",
            "title": "Fix Commit"
          },
          {
            "url": "https://github.com/minimistjs/minimist/blob/master/index.js%23L69",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 5.6,
            "modificationTime": "2024-03-11T09:49:28.176331Z"
          },
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:49:30.625120Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:54:01.114274Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:05:10.320008Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 5.6,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:28.176331Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:30.625120Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.114274Z"
          }
        ],
        "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution due to a missing handler to `Function.prototype`.\r\n\r\n**Notes:** \r\n\r\n- This vulnerability is a bypass to [CVE-2020-7598](https://security.snyk.io/vuln/SNYK-JS-MINIMIST-559764)\r\n\r\n- The reason for the different CVSS between CVE-2021-44906 to CVE-2020-7598, is that CVE-2020-7598 can pollute objects, while CVE-2021-44906 can pollute only function.\r\n\r\n\r\n## PoC by Snyk\r\n```js\r\nrequire('minimist')('--_.constructor.constructor.prototype.foo bar'.split(' '));\r\nconsole.log((function(){}).foo); // bar\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.4, 1.2.6 or higher.\n## References\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703)\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d)\n- [Vulnerable Code](https://github.com/minimistjs/minimist/blob/master/index.js#L69)\n",
        "epssDetails": {
          "percentile": "0.92837",
          "probability": "0.04607",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-44906"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "SNYK": [
            "SNYK-JS-MINIMIST-559764"
          ]
        },
        "packageName": "minimist",
        "proprietary": false,
        "creationTime": "2022-03-18T13:02:08.840039Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-03-18T12:24:05Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-03-21T12:09:35Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.114274Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "decompress@0.2.5",
          "tar@0.1.20",
          "fstream@0.1.31",
          "mkdirp@0.5.5",
          "minimist@1.2.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimist",
        "version": "1.2.5"
      },
      {
        "id": "SNYK-JS-MINIMIST-2429795",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<0.2.4",
            ">=1.2.0 <1.2.6"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "0.2.4",
          "1.2.6"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimist",
        "references": [
          {
            "url": "https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703",
            "title": "Fix Commit"
          },
          {
            "url": "https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d",
            "title": "Fix Commit"
          },
          {
            "url": "https://github.com/minimistjs/minimist/blob/master/index.js%23L69",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 5.6,
            "modificationTime": "2024-03-11T09:49:28.176331Z"
          },
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:49:30.625120Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:54:01.114274Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:05:10.320008Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 5.6,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:28.176331Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:30.625120Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.114274Z"
          }
        ],
        "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution due to a missing handler to `Function.prototype`.\r\n\r\n**Notes:** \r\n\r\n- This vulnerability is a bypass to [CVE-2020-7598](https://security.snyk.io/vuln/SNYK-JS-MINIMIST-559764)\r\n\r\n- The reason for the different CVSS between CVE-2021-44906 to CVE-2020-7598, is that CVE-2020-7598 can pollute objects, while CVE-2021-44906 can pollute only function.\r\n\r\n\r\n## PoC by Snyk\r\n```js\r\nrequire('minimist')('--_.constructor.constructor.prototype.foo bar'.split(' '));\r\nconsole.log((function(){}).foo); // bar\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.4, 1.2.6 or higher.\n## References\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703)\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d)\n- [Vulnerable Code](https://github.com/minimistjs/minimist/blob/master/index.js#L69)\n",
        "epssDetails": {
          "percentile": "0.92837",
          "probability": "0.04607",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-44906"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "SNYK": [
            "SNYK-JS-MINIMIST-559764"
          ]
        },
        "packageName": "minimist",
        "proprietary": false,
        "creationTime": "2022-03-18T13:02:08.840039Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-03-18T12:24:05Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-03-21T12:09:35Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.114274Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "commoner@0.10.8",
          "mkdirp@0.5.5",
          "minimist@1.2.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimist",
        "version": "1.2.5"
      },
      {
        "id": "SNYK-JS-MINIMIST-2429795",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<0.2.4",
            ">=1.2.0 <1.2.6"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "0.2.4",
          "1.2.6"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimist",
        "references": [
          {
            "url": "https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703",
            "title": "Fix Commit"
          },
          {
            "url": "https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d",
            "title": "Fix Commit"
          },
          {
            "url": "https://github.com/minimistjs/minimist/blob/master/index.js%23L69",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 5.6,
            "modificationTime": "2024-03-11T09:49:28.176331Z"
          },
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:49:30.625120Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:54:01.114274Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:05:10.320008Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 5.6,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:28.176331Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:30.625120Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.114274Z"
          }
        ],
        "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution due to a missing handler to `Function.prototype`.\r\n\r\n**Notes:** \r\n\r\n- This vulnerability is a bypass to [CVE-2020-7598](https://security.snyk.io/vuln/SNYK-JS-MINIMIST-559764)\r\n\r\n- The reason for the different CVSS between CVE-2021-44906 to CVE-2020-7598, is that CVE-2020-7598 can pollute objects, while CVE-2021-44906 can pollute only function.\r\n\r\n\r\n## PoC by Snyk\r\n```js\r\nrequire('minimist')('--_.constructor.constructor.prototype.foo bar'.split(' '));\r\nconsole.log((function(){}).foo); // bar\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.4, 1.2.6 or higher.\n## References\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703)\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d)\n- [Vulnerable Code](https://github.com/minimistjs/minimist/blob/master/index.js#L69)\n",
        "epssDetails": {
          "percentile": "0.92837",
          "probability": "0.04607",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-44906"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "SNYK": [
            "SNYK-JS-MINIMIST-559764"
          ]
        },
        "packageName": "minimist",
        "proprietary": false,
        "creationTime": "2022-03-18T13:02:08.840039Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-03-18T12:24:05Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-03-21T12:09:35Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.114274Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-search2@1.1.1",
          "cogent@0.4.3",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "commoner@0.10.8",
          "mkdirp@0.5.5",
          "minimist@1.2.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimist",
        "version": "1.2.5"
      },
      {
        "id": "SNYK-JS-MINIMIST-2429795",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<0.2.4",
            ">=1.2.0 <1.2.6"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "0.2.4",
          "1.2.6"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimist",
        "references": [
          {
            "url": "https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703",
            "title": "Fix Commit"
          },
          {
            "url": "https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d",
            "title": "Fix Commit"
          },
          {
            "url": "https://github.com/minimistjs/minimist/blob/master/index.js%23L69",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 5.6,
            "modificationTime": "2024-03-11T09:49:28.176331Z"
          },
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:49:30.625120Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:54:01.114274Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:05:10.320008Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 5.6,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:28.176331Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:30.625120Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.114274Z"
          }
        ],
        "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution due to a missing handler to `Function.prototype`.\r\n\r\n**Notes:** \r\n\r\n- This vulnerability is a bypass to [CVE-2020-7598](https://security.snyk.io/vuln/SNYK-JS-MINIMIST-559764)\r\n\r\n- The reason for the different CVSS between CVE-2021-44906 to CVE-2020-7598, is that CVE-2020-7598 can pollute objects, while CVE-2021-44906 can pollute only function.\r\n\r\n\r\n## PoC by Snyk\r\n```js\r\nrequire('minimist')('--_.constructor.constructor.prototype.foo bar'.split(' '));\r\nconsole.log((function(){}).foo); // bar\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.4, 1.2.6 or higher.\n## References\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703)\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d)\n- [Vulnerable Code](https://github.com/minimistjs/minimist/blob/master/index.js#L69)\n",
        "epssDetails": {
          "percentile": "0.92837",
          "probability": "0.04607",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-44906"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "SNYK": [
            "SNYK-JS-MINIMIST-559764"
          ]
        },
        "packageName": "minimist",
        "proprietary": false,
        "creationTime": "2022-03-18T13:02:08.840039Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-03-18T12:24:05Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-03-21T12:09:35Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.114274Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "commoner@0.10.8",
          "mkdirp@0.5.5",
          "minimist@1.2.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimist",
        "version": "1.2.5"
      },
      {
        "id": "SNYK-JS-MINIMIST-2429795",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<0.2.4",
            ">=1.2.0 <1.2.6"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "0.2.4",
          "1.2.6"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimist",
        "references": [
          {
            "url": "https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703",
            "title": "Fix Commit"
          },
          {
            "url": "https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d",
            "title": "Fix Commit"
          },
          {
            "url": "https://github.com/minimistjs/minimist/blob/master/index.js%23L69",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 5.6,
            "modificationTime": "2024-03-11T09:49:28.176331Z"
          },
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:49:30.625120Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:54:01.114274Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:05:10.320008Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 5.6,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:28.176331Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:30.625120Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.114274Z"
          }
        ],
        "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution due to a missing handler to `Function.prototype`.\r\n\r\n**Notes:** \r\n\r\n- This vulnerability is a bypass to [CVE-2020-7598](https://security.snyk.io/vuln/SNYK-JS-MINIMIST-559764)\r\n\r\n- The reason for the different CVSS between CVE-2021-44906 to CVE-2020-7598, is that CVE-2020-7598 can pollute objects, while CVE-2021-44906 can pollute only function.\r\n\r\n\r\n## PoC by Snyk\r\n```js\r\nrequire('minimist')('--_.constructor.constructor.prototype.foo bar'.split(' '));\r\nconsole.log((function(){}).foo); // bar\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.4, 1.2.6 or higher.\n## References\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703)\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d)\n- [Vulnerable Code](https://github.com/minimistjs/minimist/blob/master/index.js#L69)\n",
        "epssDetails": {
          "percentile": "0.92837",
          "probability": "0.04607",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-44906"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "SNYK": [
            "SNYK-JS-MINIMIST-559764"
          ]
        },
        "packageName": "minimist",
        "proprietary": false,
        "creationTime": "2022-03-18T13:02:08.840039Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-03-18T12:24:05Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-03-21T12:09:35Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.114274Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "commoner@0.10.8",
          "mkdirp@0.5.5",
          "minimist@1.2.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimist",
        "version": "1.2.5"
      },
      {
        "id": "SNYK-JS-MINIMIST-2429795",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<0.2.4",
            ">=1.2.0 <1.2.6"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "0.2.4",
          "1.2.6"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimist",
        "references": [
          {
            "url": "https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703",
            "title": "Fix Commit"
          },
          {
            "url": "https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d",
            "title": "Fix Commit"
          },
          {
            "url": "https://github.com/minimistjs/minimist/blob/master/index.js%23L69",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 5.6,
            "modificationTime": "2024-03-11T09:49:28.176331Z"
          },
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:49:30.625120Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:54:01.114274Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:05:10.320008Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 5.6,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:28.176331Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:30.625120Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.114274Z"
          }
        ],
        "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution due to a missing handler to `Function.prototype`.\r\n\r\n**Notes:** \r\n\r\n- This vulnerability is a bypass to [CVE-2020-7598](https://security.snyk.io/vuln/SNYK-JS-MINIMIST-559764)\r\n\r\n- The reason for the different CVSS between CVE-2021-44906 to CVE-2020-7598, is that CVE-2020-7598 can pollute objects, while CVE-2021-44906 can pollute only function.\r\n\r\n\r\n## PoC by Snyk\r\n```js\r\nrequire('minimist')('--_.constructor.constructor.prototype.foo bar'.split(' '));\r\nconsole.log((function(){}).foo); // bar\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.4, 1.2.6 or higher.\n## References\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703)\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d)\n- [Vulnerable Code](https://github.com/minimistjs/minimist/blob/master/index.js#L69)\n",
        "epssDetails": {
          "percentile": "0.92837",
          "probability": "0.04607",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-44906"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "SNYK": [
            "SNYK-JS-MINIMIST-559764"
          ]
        },
        "packageName": "minimist",
        "proprietary": false,
        "creationTime": "2022-03-18T13:02:08.840039Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-03-18T12:24:05Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-03-21T12:09:35Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.114274Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "commoner@0.10.8",
          "mkdirp@0.5.5",
          "minimist@1.2.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimist",
        "version": "1.2.5"
      },
      {
        "id": "SNYK-JS-MINIMIST-2429795",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<0.2.4",
            ">=1.2.0 <1.2.6"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "0.2.4",
          "1.2.6"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimist",
        "references": [
          {
            "url": "https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703",
            "title": "Fix Commit"
          },
          {
            "url": "https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d",
            "title": "Fix Commit"
          },
          {
            "url": "https://github.com/minimistjs/minimist/blob/master/index.js%23L69",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 5.6,
            "modificationTime": "2024-03-11T09:49:28.176331Z"
          },
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:49:30.625120Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:54:01.114274Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:05:10.320008Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 5.6,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:28.176331Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:30.625120Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.114274Z"
          }
        ],
        "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution due to a missing handler to `Function.prototype`.\r\n\r\n**Notes:** \r\n\r\n- This vulnerability is a bypass to [CVE-2020-7598](https://security.snyk.io/vuln/SNYK-JS-MINIMIST-559764)\r\n\r\n- The reason for the different CVSS between CVE-2021-44906 to CVE-2020-7598, is that CVE-2020-7598 can pollute objects, while CVE-2021-44906 can pollute only function.\r\n\r\n\r\n## PoC by Snyk\r\n```js\r\nrequire('minimist')('--_.constructor.constructor.prototype.foo bar'.split(' '));\r\nconsole.log((function(){}).foo); // bar\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.4, 1.2.6 or higher.\n## References\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703)\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d)\n- [Vulnerable Code](https://github.com/minimistjs/minimist/blob/master/index.js#L69)\n",
        "epssDetails": {
          "percentile": "0.92837",
          "probability": "0.04607",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-44906"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "SNYK": [
            "SNYK-JS-MINIMIST-559764"
          ]
        },
        "packageName": "minimist",
        "proprietary": false,
        "creationTime": "2022-03-18T13:02:08.840039Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-03-18T12:24:05Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-03-21T12:09:35Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.114274Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "commoner@0.10.8",
          "mkdirp@0.5.5",
          "minimist@1.2.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimist",
        "version": "1.2.5"
      },
      {
        "id": "SNYK-JS-MINIMIST-2429795",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<0.2.4",
            ">=1.2.0 <1.2.6"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "0.2.4",
          "1.2.6"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimist",
        "references": [
          {
            "url": "https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703",
            "title": "Fix Commit"
          },
          {
            "url": "https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d",
            "title": "Fix Commit"
          },
          {
            "url": "https://github.com/minimistjs/minimist/blob/master/index.js%23L69",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 5.6,
            "modificationTime": "2024-03-11T09:49:28.176331Z"
          },
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:49:30.625120Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:54:01.114274Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:05:10.320008Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 5.6,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:28.176331Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:30.625120Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.114274Z"
          }
        ],
        "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution due to a missing handler to `Function.prototype`.\r\n\r\n**Notes:** \r\n\r\n- This vulnerability is a bypass to [CVE-2020-7598](https://security.snyk.io/vuln/SNYK-JS-MINIMIST-559764)\r\n\r\n- The reason for the different CVSS between CVE-2021-44906 to CVE-2020-7598, is that CVE-2020-7598 can pollute objects, while CVE-2021-44906 can pollute only function.\r\n\r\n\r\n## PoC by Snyk\r\n```js\r\nrequire('minimist')('--_.constructor.constructor.prototype.foo bar'.split(' '));\r\nconsole.log((function(){}).foo); // bar\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.4, 1.2.6 or higher.\n## References\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703)\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d)\n- [Vulnerable Code](https://github.com/minimistjs/minimist/blob/master/index.js#L69)\n",
        "epssDetails": {
          "percentile": "0.92837",
          "probability": "0.04607",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-44906"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "SNYK": [
            "SNYK-JS-MINIMIST-559764"
          ]
        },
        "packageName": "minimist",
        "proprietary": false,
        "creationTime": "2022-03-18T13:02:08.840039Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-03-18T12:24:05Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-03-21T12:09:35Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.114274Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "commoner@0.10.8",
          "mkdirp@0.5.5",
          "minimist@1.2.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "minimist",
        "version": "1.2.5"
      },
      {
        "id": "SNYK-JS-MOMENT-2440688",
        "title": "Directory Traversal",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.29.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.29.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": "This vulnerability is only applicable when the user-provided locale name is not sanitized before it has been used."
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "moment",
        "references": [
          {
            "url": "https://github.com/moment/moment/commit/4211bfc8f15746be4019bba557e29a7ba83d54c5",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:49:13.115980Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:59.336348Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:56:27.815354Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:13.115980Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:59.336348Z"
          }
        ],
        "description": "## Overview\n[moment](https://www.npmjs.com/package/moment) is a lightweight JavaScript date library for parsing, validating, manipulating, and formatting dates.\n\nAffected versions of this package are vulnerable to Directory Traversal when a user provides a locale string which is directly used to switch moment locale.\n\n## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```\n\n## Remediation\nUpgrade `moment` to version 2.29.2 or higher.\n## References\n- [GitHub Commit](https://github.com/moment/moment/commit/4211bfc8f15746be4019bba557e29a7ba83d54c5)\n",
        "epssDetails": {
          "percentile": "0.74019",
          "probability": "0.00387",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-24785"
          ],
          "CWE": [
            "CWE-22"
          ],
          "GHSA": [
            "GHSA-8hfj-j24r-96c4"
          ]
        },
        "packageName": "moment",
        "proprietary": false,
        "creationTime": "2022-04-05T08:46:07.677588Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-04-05T08:39:23Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-04-05T12:30:50.878091Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:59.336348Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "chart.js@2.9.3",
          "moment@2.24.0"
        ],
        "upgradePath": [
          false,
          "chart.js@3.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "moment",
        "version": "2.24.0"
      },
      {
        "id": "SNYK-JS-MOMENT-2944238",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Khang Vo"
        ],
        "semver": {
          "vulnerable": [
            ">=2.18.0 <2.29.4"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.29.4"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "moment",
        "references": [
          {
            "url": "https://github.com/moment/moment/commit/9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/moment/moment/issues/6012",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/moment/moment/pull/6015",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:49:44.971659Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:56.672165Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:56:44.318778Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:44.971659Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:56.672165Z"
          }
        ],
        "description": "## Overview\n[moment](https://www.npmjs.com/package/moment) is a lightweight JavaScript date library for parsing, validating, manipulating, and formatting dates.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `preprocessRFC2822()` function in `from-string.js`, when processing a very long crafted string (over 10k characters).\r\n\r\n\r\n\r\n## PoC:\r\n```js\r\nmoment(\"(\".repeat(500000))\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `moment` to version 2.29.4 or higher.\n## References\n- [GitHub Commit](https://github.com/moment/moment/commit/9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3)\n- [GitHub Issue](https://github.com/moment/moment/issues/6012)\n- [GitHub PR](https://github.com/moment/moment/pull/6015)\n",
        "epssDetails": {
          "percentile": "0.81708",
          "probability": "0.00760",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-31129"
          ],
          "CWE": [
            "CWE-1333"
          ],
          "GHSA": [
            "GHSA-wc69-rhjr-hc9g"
          ]
        },
        "packageName": "moment",
        "proprietary": false,
        "creationTime": "2022-07-07T06:05:46.236101Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-07-06T18:38:49Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-07-07T07:32:53Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:56.672165Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "chart.js@2.9.3",
          "moment@2.24.0"
        ],
        "upgradePath": [
          false,
          "chart.js@3.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "moment",
        "version": "2.24.0"
      },
      {
        "id": "SNYK-JS-NETMASK-1089716",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "netmask",
        "references": [
          {
            "url": "https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md",
            "title": "PoC"
          },
          {
            "url": "https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/",
            "title": "Researcher Report"
          },
          {
            "url": "https://github.com/projectdiscovery/nuclei-templates/blob/main/http/cves/2021/CVE-2021-28918.yaml",
            "title": "Nuclei Templates"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "cvssV3BaseScore": 9.1,
            "modificationTime": "2024-03-11T09:48:13.711068Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:41.794951Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:48:13.711068Z"
          }
        ],
        "description": "## Overview\n[netmask](https://www.npmjs.org/package/netmask) is a library to parse IPv4 CIDR blocks.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF). It incorrectly evaluates individual IPv4 octets that contain octal strings as left-stripped integers, leading to an inordinate attack surface on hundreds of thousands of projects that rely on `netmask` to filter or evaluate IPv4 block ranges, both inbound and outbound.\r\n\r\nFor example, a remote unauthenticated attacker can request local resources using input data `0177.0.0.1` (`127.0.0.1`), which `netmask` evaluates as the public IP `177.0.0.1`.\r\nContrastingly, a remote authenticated or unauthenticated attacker can input the data `0127.0.0.01` (`87.0.0.1`) as localhost, yet the input data is a public IP and can potentially cause local and remote file inclusion (LFI/RFI).\r\nA remote authenticated or unauthenticated attacker can bypass packages that rely on `netmask` to filter IP address blocks to reach intranets, VPNs, containers, adjacent VPC instances, or LAN hosts, using input data such as `012.0.0.1` (`10.0.0.1`), which `netmask` evaluates as `12.0.0.1` (public).\n\n\n **NOTE:** This vulnerability has also been identified as: [CVE-2021-29418](https://security.snyk.io/vuln/SNYK-JS-NETMASK-6056519)\n\n## Remediation\nUpgrade `netmask` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4)\n- [PoC](https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md)\n- [Researcher Report](https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/)\n- [Nuclei Templates](https://github.com/projectdiscovery/nuclei-templates/blob/main/http/cves/2021/CVE-2021-28918.yaml)\n",
        "epssDetails": {
          "percentile": "0.95735",
          "probability": "0.13134",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-28918"
          ],
          "CWE": [
            "CWE-20",
            "CWE-918"
          ],
          "GHSA": [
            "GHSA-pch5-whg9-qr2r"
          ]
        },
        "packageName": "netmask",
        "proprietary": false,
        "creationTime": "2021-03-30T09:49:33.483598Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-03-29T21:32:05Z",
        "exploitDetails": {
          "sources": [
            "Nuclei Templates",
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-03-30T14:57:04Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-10-14T14:55:05.812035Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "netmask@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "netmask",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-NETMASK-6056519",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "netmask",
        "references": [
          {
            "url": "https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md",
            "title": "PoC"
          },
          {
            "url": "https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/",
            "title": "Researcher Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:48:36.307470Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:41.785682Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:48:36.307470Z"
          }
        ],
        "description": "## Overview\n[netmask](https://www.npmjs.org/package/netmask) is a library to parse IPv4 CIDR blocks.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF). It incorrectly evaluates individual IPv4 octets that contain octal strings as left-stripped integers, leading to an inordinate attack surface on hundreds of thousands of projects that rely on `netmask` to filter or evaluate IPv4 block ranges, both inbound and outbound.\r\n\r\nFor example, a remote unauthenticated attacker can request local resources using input data `0177.0.0.1` (`127.0.0.1`), which `netmask` evaluates as the public IP `177.0.0.1`.\r\nContrastingly, a remote authenticated or unauthenticated attacker can input the data `0127.0.0.01` (`87.0.0.1`) as localhost, yet the input data is a public IP and can potentially cause local and remote file inclusion (LFI/RFI).\r\nA remote authenticated or unauthenticated attacker can bypass packages that rely on `netmask` to filter IP address blocks to reach intranets, VPNs, containers, adjacent VPC instances, or LAN hosts, using input data such as `012.0.0.1` (`10.0.0.1`), which `netmask` evaluates as `12.0.0.1` (public).\n\n\n **NOTE:** This vulnerability has also been identified as: [CVE-2021-28918](https://security.snyk.io/vuln/SNYK-JS-NETMASK-1089716)\n\n## Remediation\nUpgrade `netmask` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4)\n- [PoC](https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md)\n- [Researcher Report](https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/)\n",
        "epssDetails": {
          "percentile": "0.45836",
          "probability": "0.00111",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-29418"
          ],
          "CWE": [
            "CWE-20",
            "CWE-918"
          ],
          "GHSA": [
            "GHSA-pch5-whg9-qr2r"
          ]
        },
        "packageName": "netmask",
        "proprietary": false,
        "creationTime": "2023-11-14T13:41:50.864766Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-03-29T21:32:05Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-03-30T14:57:04Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:48:36.307470Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "netmask@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "netmask",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-NETMASK-1089716",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "netmask",
        "references": [
          {
            "url": "https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md",
            "title": "PoC"
          },
          {
            "url": "https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/",
            "title": "Researcher Report"
          },
          {
            "url": "https://github.com/projectdiscovery/nuclei-templates/blob/main/http/cves/2021/CVE-2021-28918.yaml",
            "title": "Nuclei Templates"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "cvssV3BaseScore": 9.1,
            "modificationTime": "2024-03-11T09:48:13.711068Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:41.794951Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:48:13.711068Z"
          }
        ],
        "description": "## Overview\n[netmask](https://www.npmjs.org/package/netmask) is a library to parse IPv4 CIDR blocks.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF). It incorrectly evaluates individual IPv4 octets that contain octal strings as left-stripped integers, leading to an inordinate attack surface on hundreds of thousands of projects that rely on `netmask` to filter or evaluate IPv4 block ranges, both inbound and outbound.\r\n\r\nFor example, a remote unauthenticated attacker can request local resources using input data `0177.0.0.1` (`127.0.0.1`), which `netmask` evaluates as the public IP `177.0.0.1`.\r\nContrastingly, a remote authenticated or unauthenticated attacker can input the data `0127.0.0.01` (`87.0.0.1`) as localhost, yet the input data is a public IP and can potentially cause local and remote file inclusion (LFI/RFI).\r\nA remote authenticated or unauthenticated attacker can bypass packages that rely on `netmask` to filter IP address blocks to reach intranets, VPNs, containers, adjacent VPC instances, or LAN hosts, using input data such as `012.0.0.1` (`10.0.0.1`), which `netmask` evaluates as `12.0.0.1` (public).\n\n\n **NOTE:** This vulnerability has also been identified as: [CVE-2021-29418](https://security.snyk.io/vuln/SNYK-JS-NETMASK-6056519)\n\n## Remediation\nUpgrade `netmask` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4)\n- [PoC](https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md)\n- [Researcher Report](https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/)\n- [Nuclei Templates](https://github.com/projectdiscovery/nuclei-templates/blob/main/http/cves/2021/CVE-2021-28918.yaml)\n",
        "epssDetails": {
          "percentile": "0.95735",
          "probability": "0.13134",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-28918"
          ],
          "CWE": [
            "CWE-20",
            "CWE-918"
          ],
          "GHSA": [
            "GHSA-pch5-whg9-qr2r"
          ]
        },
        "packageName": "netmask",
        "proprietary": false,
        "creationTime": "2021-03-30T09:49:33.483598Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-03-29T21:32:05Z",
        "exploitDetails": {
          "sources": [
            "Nuclei Templates",
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-03-30T14:57:04Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-10-14T14:55:05.812035Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-search2@1.1.1",
          "cogent@0.4.3",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "netmask@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "netmask",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-NETMASK-6056519",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "netmask",
        "references": [
          {
            "url": "https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md",
            "title": "PoC"
          },
          {
            "url": "https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/",
            "title": "Researcher Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:48:36.307470Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:41.785682Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:48:36.307470Z"
          }
        ],
        "description": "## Overview\n[netmask](https://www.npmjs.org/package/netmask) is a library to parse IPv4 CIDR blocks.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF). It incorrectly evaluates individual IPv4 octets that contain octal strings as left-stripped integers, leading to an inordinate attack surface on hundreds of thousands of projects that rely on `netmask` to filter or evaluate IPv4 block ranges, both inbound and outbound.\r\n\r\nFor example, a remote unauthenticated attacker can request local resources using input data `0177.0.0.1` (`127.0.0.1`), which `netmask` evaluates as the public IP `177.0.0.1`.\r\nContrastingly, a remote authenticated or unauthenticated attacker can input the data `0127.0.0.01` (`87.0.0.1`) as localhost, yet the input data is a public IP and can potentially cause local and remote file inclusion (LFI/RFI).\r\nA remote authenticated or unauthenticated attacker can bypass packages that rely on `netmask` to filter IP address blocks to reach intranets, VPNs, containers, adjacent VPC instances, or LAN hosts, using input data such as `012.0.0.1` (`10.0.0.1`), which `netmask` evaluates as `12.0.0.1` (public).\n\n\n **NOTE:** This vulnerability has also been identified as: [CVE-2021-28918](https://security.snyk.io/vuln/SNYK-JS-NETMASK-1089716)\n\n## Remediation\nUpgrade `netmask` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4)\n- [PoC](https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md)\n- [Researcher Report](https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/)\n",
        "epssDetails": {
          "percentile": "0.45836",
          "probability": "0.00111",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-29418"
          ],
          "CWE": [
            "CWE-20",
            "CWE-918"
          ],
          "GHSA": [
            "GHSA-pch5-whg9-qr2r"
          ]
        },
        "packageName": "netmask",
        "proprietary": false,
        "creationTime": "2023-11-14T13:41:50.864766Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-03-29T21:32:05Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-03-30T14:57:04Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:48:36.307470Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-search2@1.1.1",
          "cogent@0.4.3",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "netmask@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "netmask",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-NETMASK-1089716",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "netmask",
        "references": [
          {
            "url": "https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md",
            "title": "PoC"
          },
          {
            "url": "https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/",
            "title": "Researcher Report"
          },
          {
            "url": "https://github.com/projectdiscovery/nuclei-templates/blob/main/http/cves/2021/CVE-2021-28918.yaml",
            "title": "Nuclei Templates"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "cvssV3BaseScore": 9.1,
            "modificationTime": "2024-03-11T09:48:13.711068Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:41.794951Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:48:13.711068Z"
          }
        ],
        "description": "## Overview\n[netmask](https://www.npmjs.org/package/netmask) is a library to parse IPv4 CIDR blocks.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF). It incorrectly evaluates individual IPv4 octets that contain octal strings as left-stripped integers, leading to an inordinate attack surface on hundreds of thousands of projects that rely on `netmask` to filter or evaluate IPv4 block ranges, both inbound and outbound.\r\n\r\nFor example, a remote unauthenticated attacker can request local resources using input data `0177.0.0.1` (`127.0.0.1`), which `netmask` evaluates as the public IP `177.0.0.1`.\r\nContrastingly, a remote authenticated or unauthenticated attacker can input the data `0127.0.0.01` (`87.0.0.1`) as localhost, yet the input data is a public IP and can potentially cause local and remote file inclusion (LFI/RFI).\r\nA remote authenticated or unauthenticated attacker can bypass packages that rely on `netmask` to filter IP address blocks to reach intranets, VPNs, containers, adjacent VPC instances, or LAN hosts, using input data such as `012.0.0.1` (`10.0.0.1`), which `netmask` evaluates as `12.0.0.1` (public).\n\n\n **NOTE:** This vulnerability has also been identified as: [CVE-2021-29418](https://security.snyk.io/vuln/SNYK-JS-NETMASK-6056519)\n\n## Remediation\nUpgrade `netmask` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4)\n- [PoC](https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md)\n- [Researcher Report](https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/)\n- [Nuclei Templates](https://github.com/projectdiscovery/nuclei-templates/blob/main/http/cves/2021/CVE-2021-28918.yaml)\n",
        "epssDetails": {
          "percentile": "0.95735",
          "probability": "0.13134",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-28918"
          ],
          "CWE": [
            "CWE-20",
            "CWE-918"
          ],
          "GHSA": [
            "GHSA-pch5-whg9-qr2r"
          ]
        },
        "packageName": "netmask",
        "proprietary": false,
        "creationTime": "2021-03-30T09:49:33.483598Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-03-29T21:32:05Z",
        "exploitDetails": {
          "sources": [
            "Nuclei Templates",
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-03-30T14:57:04Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-10-14T14:55:05.812035Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "netmask@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "netmask",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-NETMASK-6056519",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "netmask",
        "references": [
          {
            "url": "https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md",
            "title": "PoC"
          },
          {
            "url": "https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/",
            "title": "Researcher Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:48:36.307470Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:41.785682Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:48:36.307470Z"
          }
        ],
        "description": "## Overview\n[netmask](https://www.npmjs.org/package/netmask) is a library to parse IPv4 CIDR blocks.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF). It incorrectly evaluates individual IPv4 octets that contain octal strings as left-stripped integers, leading to an inordinate attack surface on hundreds of thousands of projects that rely on `netmask` to filter or evaluate IPv4 block ranges, both inbound and outbound.\r\n\r\nFor example, a remote unauthenticated attacker can request local resources using input data `0177.0.0.1` (`127.0.0.1`), which `netmask` evaluates as the public IP `177.0.0.1`.\r\nContrastingly, a remote authenticated or unauthenticated attacker can input the data `0127.0.0.01` (`87.0.0.1`) as localhost, yet the input data is a public IP and can potentially cause local and remote file inclusion (LFI/RFI).\r\nA remote authenticated or unauthenticated attacker can bypass packages that rely on `netmask` to filter IP address blocks to reach intranets, VPNs, containers, adjacent VPC instances, or LAN hosts, using input data such as `012.0.0.1` (`10.0.0.1`), which `netmask` evaluates as `12.0.0.1` (public).\n\n\n **NOTE:** This vulnerability has also been identified as: [CVE-2021-28918](https://security.snyk.io/vuln/SNYK-JS-NETMASK-1089716)\n\n## Remediation\nUpgrade `netmask` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4)\n- [PoC](https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md)\n- [Researcher Report](https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/)\n",
        "epssDetails": {
          "percentile": "0.45836",
          "probability": "0.00111",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-29418"
          ],
          "CWE": [
            "CWE-20",
            "CWE-918"
          ],
          "GHSA": [
            "GHSA-pch5-whg9-qr2r"
          ]
        },
        "packageName": "netmask",
        "proprietary": false,
        "creationTime": "2023-11-14T13:41:50.864766Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-03-29T21:32:05Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-03-30T14:57:04Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:48:36.307470Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "netmask@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "netmask",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-NETMASK-1089716",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "netmask",
        "references": [
          {
            "url": "https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md",
            "title": "PoC"
          },
          {
            "url": "https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/",
            "title": "Researcher Report"
          },
          {
            "url": "https://github.com/projectdiscovery/nuclei-templates/blob/main/http/cves/2021/CVE-2021-28918.yaml",
            "title": "Nuclei Templates"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "cvssV3BaseScore": 9.1,
            "modificationTime": "2024-03-11T09:48:13.711068Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:41.794951Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:48:13.711068Z"
          }
        ],
        "description": "## Overview\n[netmask](https://www.npmjs.org/package/netmask) is a library to parse IPv4 CIDR blocks.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF). It incorrectly evaluates individual IPv4 octets that contain octal strings as left-stripped integers, leading to an inordinate attack surface on hundreds of thousands of projects that rely on `netmask` to filter or evaluate IPv4 block ranges, both inbound and outbound.\r\n\r\nFor example, a remote unauthenticated attacker can request local resources using input data `0177.0.0.1` (`127.0.0.1`), which `netmask` evaluates as the public IP `177.0.0.1`.\r\nContrastingly, a remote authenticated or unauthenticated attacker can input the data `0127.0.0.01` (`87.0.0.1`) as localhost, yet the input data is a public IP and can potentially cause local and remote file inclusion (LFI/RFI).\r\nA remote authenticated or unauthenticated attacker can bypass packages that rely on `netmask` to filter IP address blocks to reach intranets, VPNs, containers, adjacent VPC instances, or LAN hosts, using input data such as `012.0.0.1` (`10.0.0.1`), which `netmask` evaluates as `12.0.0.1` (public).\n\n\n **NOTE:** This vulnerability has also been identified as: [CVE-2021-29418](https://security.snyk.io/vuln/SNYK-JS-NETMASK-6056519)\n\n## Remediation\nUpgrade `netmask` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4)\n- [PoC](https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md)\n- [Researcher Report](https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/)\n- [Nuclei Templates](https://github.com/projectdiscovery/nuclei-templates/blob/main/http/cves/2021/CVE-2021-28918.yaml)\n",
        "epssDetails": {
          "percentile": "0.95735",
          "probability": "0.13134",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-28918"
          ],
          "CWE": [
            "CWE-20",
            "CWE-918"
          ],
          "GHSA": [
            "GHSA-pch5-whg9-qr2r"
          ]
        },
        "packageName": "netmask",
        "proprietary": false,
        "creationTime": "2021-03-30T09:49:33.483598Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-03-29T21:32:05Z",
        "exploitDetails": {
          "sources": [
            "Nuclei Templates",
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-03-30T14:57:04Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-10-14T14:55:05.812035Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "netmask@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "netmask",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-NETMASK-6056519",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "netmask",
        "references": [
          {
            "url": "https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md",
            "title": "PoC"
          },
          {
            "url": "https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/",
            "title": "Researcher Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:48:36.307470Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:41.785682Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:48:36.307470Z"
          }
        ],
        "description": "## Overview\n[netmask](https://www.npmjs.org/package/netmask) is a library to parse IPv4 CIDR blocks.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF). It incorrectly evaluates individual IPv4 octets that contain octal strings as left-stripped integers, leading to an inordinate attack surface on hundreds of thousands of projects that rely on `netmask` to filter or evaluate IPv4 block ranges, both inbound and outbound.\r\n\r\nFor example, a remote unauthenticated attacker can request local resources using input data `0177.0.0.1` (`127.0.0.1`), which `netmask` evaluates as the public IP `177.0.0.1`.\r\nContrastingly, a remote authenticated or unauthenticated attacker can input the data `0127.0.0.01` (`87.0.0.1`) as localhost, yet the input data is a public IP and can potentially cause local and remote file inclusion (LFI/RFI).\r\nA remote authenticated or unauthenticated attacker can bypass packages that rely on `netmask` to filter IP address blocks to reach intranets, VPNs, containers, adjacent VPC instances, or LAN hosts, using input data such as `012.0.0.1` (`10.0.0.1`), which `netmask` evaluates as `12.0.0.1` (public).\n\n\n **NOTE:** This vulnerability has also been identified as: [CVE-2021-28918](https://security.snyk.io/vuln/SNYK-JS-NETMASK-1089716)\n\n## Remediation\nUpgrade `netmask` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4)\n- [PoC](https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md)\n- [Researcher Report](https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/)\n",
        "epssDetails": {
          "percentile": "0.45836",
          "probability": "0.00111",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-29418"
          ],
          "CWE": [
            "CWE-20",
            "CWE-918"
          ],
          "GHSA": [
            "GHSA-pch5-whg9-qr2r"
          ]
        },
        "packageName": "netmask",
        "proprietary": false,
        "creationTime": "2023-11-14T13:41:50.864766Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-03-29T21:32:05Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-03-30T14:57:04Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:48:36.307470Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "netmask@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "netmask",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-NETMASK-1089716",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "netmask",
        "references": [
          {
            "url": "https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md",
            "title": "PoC"
          },
          {
            "url": "https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/",
            "title": "Researcher Report"
          },
          {
            "url": "https://github.com/projectdiscovery/nuclei-templates/blob/main/http/cves/2021/CVE-2021-28918.yaml",
            "title": "Nuclei Templates"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "cvssV3BaseScore": 9.1,
            "modificationTime": "2024-03-11T09:48:13.711068Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:41.794951Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:48:13.711068Z"
          }
        ],
        "description": "## Overview\n[netmask](https://www.npmjs.org/package/netmask) is a library to parse IPv4 CIDR blocks.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF). It incorrectly evaluates individual IPv4 octets that contain octal strings as left-stripped integers, leading to an inordinate attack surface on hundreds of thousands of projects that rely on `netmask` to filter or evaluate IPv4 block ranges, both inbound and outbound.\r\n\r\nFor example, a remote unauthenticated attacker can request local resources using input data `0177.0.0.1` (`127.0.0.1`), which `netmask` evaluates as the public IP `177.0.0.1`.\r\nContrastingly, a remote authenticated or unauthenticated attacker can input the data `0127.0.0.01` (`87.0.0.1`) as localhost, yet the input data is a public IP and can potentially cause local and remote file inclusion (LFI/RFI).\r\nA remote authenticated or unauthenticated attacker can bypass packages that rely on `netmask` to filter IP address blocks to reach intranets, VPNs, containers, adjacent VPC instances, or LAN hosts, using input data such as `012.0.0.1` (`10.0.0.1`), which `netmask` evaluates as `12.0.0.1` (public).\n\n\n **NOTE:** This vulnerability has also been identified as: [CVE-2021-29418](https://security.snyk.io/vuln/SNYK-JS-NETMASK-6056519)\n\n## Remediation\nUpgrade `netmask` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4)\n- [PoC](https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md)\n- [Researcher Report](https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/)\n- [Nuclei Templates](https://github.com/projectdiscovery/nuclei-templates/blob/main/http/cves/2021/CVE-2021-28918.yaml)\n",
        "epssDetails": {
          "percentile": "0.95735",
          "probability": "0.13134",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-28918"
          ],
          "CWE": [
            "CWE-20",
            "CWE-918"
          ],
          "GHSA": [
            "GHSA-pch5-whg9-qr2r"
          ]
        },
        "packageName": "netmask",
        "proprietary": false,
        "creationTime": "2021-03-30T09:49:33.483598Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-03-29T21:32:05Z",
        "exploitDetails": {
          "sources": [
            "Nuclei Templates",
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-03-30T14:57:04Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-10-14T14:55:05.812035Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "netmask@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "netmask",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-NETMASK-6056519",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "netmask",
        "references": [
          {
            "url": "https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md",
            "title": "PoC"
          },
          {
            "url": "https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/",
            "title": "Researcher Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:48:36.307470Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:41.785682Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:48:36.307470Z"
          }
        ],
        "description": "## Overview\n[netmask](https://www.npmjs.org/package/netmask) is a library to parse IPv4 CIDR blocks.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF). It incorrectly evaluates individual IPv4 octets that contain octal strings as left-stripped integers, leading to an inordinate attack surface on hundreds of thousands of projects that rely on `netmask` to filter or evaluate IPv4 block ranges, both inbound and outbound.\r\n\r\nFor example, a remote unauthenticated attacker can request local resources using input data `0177.0.0.1` (`127.0.0.1`), which `netmask` evaluates as the public IP `177.0.0.1`.\r\nContrastingly, a remote authenticated or unauthenticated attacker can input the data `0127.0.0.01` (`87.0.0.1`) as localhost, yet the input data is a public IP and can potentially cause local and remote file inclusion (LFI/RFI).\r\nA remote authenticated or unauthenticated attacker can bypass packages that rely on `netmask` to filter IP address blocks to reach intranets, VPNs, containers, adjacent VPC instances, or LAN hosts, using input data such as `012.0.0.1` (`10.0.0.1`), which `netmask` evaluates as `12.0.0.1` (public).\n\n\n **NOTE:** This vulnerability has also been identified as: [CVE-2021-28918](https://security.snyk.io/vuln/SNYK-JS-NETMASK-1089716)\n\n## Remediation\nUpgrade `netmask` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4)\n- [PoC](https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md)\n- [Researcher Report](https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/)\n",
        "epssDetails": {
          "percentile": "0.45836",
          "probability": "0.00111",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-29418"
          ],
          "CWE": [
            "CWE-20",
            "CWE-918"
          ],
          "GHSA": [
            "GHSA-pch5-whg9-qr2r"
          ]
        },
        "packageName": "netmask",
        "proprietary": false,
        "creationTime": "2023-11-14T13:41:50.864766Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-03-29T21:32:05Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-03-30T14:57:04Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:48:36.307470Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "netmask@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "netmask",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-NETMASK-1089716",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "netmask",
        "references": [
          {
            "url": "https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md",
            "title": "PoC"
          },
          {
            "url": "https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/",
            "title": "Researcher Report"
          },
          {
            "url": "https://github.com/projectdiscovery/nuclei-templates/blob/main/http/cves/2021/CVE-2021-28918.yaml",
            "title": "Nuclei Templates"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "cvssV3BaseScore": 9.1,
            "modificationTime": "2024-03-11T09:48:13.711068Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:41.794951Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:48:13.711068Z"
          }
        ],
        "description": "## Overview\n[netmask](https://www.npmjs.org/package/netmask) is a library to parse IPv4 CIDR blocks.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF). It incorrectly evaluates individual IPv4 octets that contain octal strings as left-stripped integers, leading to an inordinate attack surface on hundreds of thousands of projects that rely on `netmask` to filter or evaluate IPv4 block ranges, both inbound and outbound.\r\n\r\nFor example, a remote unauthenticated attacker can request local resources using input data `0177.0.0.1` (`127.0.0.1`), which `netmask` evaluates as the public IP `177.0.0.1`.\r\nContrastingly, a remote authenticated or unauthenticated attacker can input the data `0127.0.0.01` (`87.0.0.1`) as localhost, yet the input data is a public IP and can potentially cause local and remote file inclusion (LFI/RFI).\r\nA remote authenticated or unauthenticated attacker can bypass packages that rely on `netmask` to filter IP address blocks to reach intranets, VPNs, containers, adjacent VPC instances, or LAN hosts, using input data such as `012.0.0.1` (`10.0.0.1`), which `netmask` evaluates as `12.0.0.1` (public).\n\n\n **NOTE:** This vulnerability has also been identified as: [CVE-2021-29418](https://security.snyk.io/vuln/SNYK-JS-NETMASK-6056519)\n\n## Remediation\nUpgrade `netmask` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4)\n- [PoC](https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md)\n- [Researcher Report](https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/)\n- [Nuclei Templates](https://github.com/projectdiscovery/nuclei-templates/blob/main/http/cves/2021/CVE-2021-28918.yaml)\n",
        "epssDetails": {
          "percentile": "0.95735",
          "probability": "0.13134",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-28918"
          ],
          "CWE": [
            "CWE-20",
            "CWE-918"
          ],
          "GHSA": [
            "GHSA-pch5-whg9-qr2r"
          ]
        },
        "packageName": "netmask",
        "proprietary": false,
        "creationTime": "2021-03-30T09:49:33.483598Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-03-29T21:32:05Z",
        "exploitDetails": {
          "sources": [
            "Nuclei Templates",
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-03-30T14:57:04Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-10-14T14:55:05.812035Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "netmask@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "netmask",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-NETMASK-6056519",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "netmask",
        "references": [
          {
            "url": "https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md",
            "title": "PoC"
          },
          {
            "url": "https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/",
            "title": "Researcher Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:48:36.307470Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:41.785682Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:48:36.307470Z"
          }
        ],
        "description": "## Overview\n[netmask](https://www.npmjs.org/package/netmask) is a library to parse IPv4 CIDR blocks.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF). It incorrectly evaluates individual IPv4 octets that contain octal strings as left-stripped integers, leading to an inordinate attack surface on hundreds of thousands of projects that rely on `netmask` to filter or evaluate IPv4 block ranges, both inbound and outbound.\r\n\r\nFor example, a remote unauthenticated attacker can request local resources using input data `0177.0.0.1` (`127.0.0.1`), which `netmask` evaluates as the public IP `177.0.0.1`.\r\nContrastingly, a remote authenticated or unauthenticated attacker can input the data `0127.0.0.01` (`87.0.0.1`) as localhost, yet the input data is a public IP and can potentially cause local and remote file inclusion (LFI/RFI).\r\nA remote authenticated or unauthenticated attacker can bypass packages that rely on `netmask` to filter IP address blocks to reach intranets, VPNs, containers, adjacent VPC instances, or LAN hosts, using input data such as `012.0.0.1` (`10.0.0.1`), which `netmask` evaluates as `12.0.0.1` (public).\n\n\n **NOTE:** This vulnerability has also been identified as: [CVE-2021-28918](https://security.snyk.io/vuln/SNYK-JS-NETMASK-1089716)\n\n## Remediation\nUpgrade `netmask` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4)\n- [PoC](https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md)\n- [Researcher Report](https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/)\n",
        "epssDetails": {
          "percentile": "0.45836",
          "probability": "0.00111",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-29418"
          ],
          "CWE": [
            "CWE-20",
            "CWE-918"
          ],
          "GHSA": [
            "GHSA-pch5-whg9-qr2r"
          ]
        },
        "packageName": "netmask",
        "proprietary": false,
        "creationTime": "2023-11-14T13:41:50.864766Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-03-29T21:32:05Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-03-30T14:57:04Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:48:36.307470Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "netmask@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "netmask",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-NETMASK-1089716",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "netmask",
        "references": [
          {
            "url": "https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md",
            "title": "PoC"
          },
          {
            "url": "https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/",
            "title": "Researcher Report"
          },
          {
            "url": "https://github.com/projectdiscovery/nuclei-templates/blob/main/http/cves/2021/CVE-2021-28918.yaml",
            "title": "Nuclei Templates"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "cvssV3BaseScore": 9.1,
            "modificationTime": "2024-03-11T09:48:13.711068Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:41.794951Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:48:13.711068Z"
          }
        ],
        "description": "## Overview\n[netmask](https://www.npmjs.org/package/netmask) is a library to parse IPv4 CIDR blocks.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF). It incorrectly evaluates individual IPv4 octets that contain octal strings as left-stripped integers, leading to an inordinate attack surface on hundreds of thousands of projects that rely on `netmask` to filter or evaluate IPv4 block ranges, both inbound and outbound.\r\n\r\nFor example, a remote unauthenticated attacker can request local resources using input data `0177.0.0.1` (`127.0.0.1`), which `netmask` evaluates as the public IP `177.0.0.1`.\r\nContrastingly, a remote authenticated or unauthenticated attacker can input the data `0127.0.0.01` (`87.0.0.1`) as localhost, yet the input data is a public IP and can potentially cause local and remote file inclusion (LFI/RFI).\r\nA remote authenticated or unauthenticated attacker can bypass packages that rely on `netmask` to filter IP address blocks to reach intranets, VPNs, containers, adjacent VPC instances, or LAN hosts, using input data such as `012.0.0.1` (`10.0.0.1`), which `netmask` evaluates as `12.0.0.1` (public).\n\n\n **NOTE:** This vulnerability has also been identified as: [CVE-2021-29418](https://security.snyk.io/vuln/SNYK-JS-NETMASK-6056519)\n\n## Remediation\nUpgrade `netmask` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4)\n- [PoC](https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md)\n- [Researcher Report](https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/)\n- [Nuclei Templates](https://github.com/projectdiscovery/nuclei-templates/blob/main/http/cves/2021/CVE-2021-28918.yaml)\n",
        "epssDetails": {
          "percentile": "0.95735",
          "probability": "0.13134",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-28918"
          ],
          "CWE": [
            "CWE-20",
            "CWE-918"
          ],
          "GHSA": [
            "GHSA-pch5-whg9-qr2r"
          ]
        },
        "packageName": "netmask",
        "proprietary": false,
        "creationTime": "2021-03-30T09:49:33.483598Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-03-29T21:32:05Z",
        "exploitDetails": {
          "sources": [
            "Nuclei Templates",
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-03-30T14:57:04Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-10-14T14:55:05.812035Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "netmask@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "netmask",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-NETMASK-6056519",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "netmask",
        "references": [
          {
            "url": "https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md",
            "title": "PoC"
          },
          {
            "url": "https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/",
            "title": "Researcher Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:48:36.307470Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:41.785682Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:48:36.307470Z"
          }
        ],
        "description": "## Overview\n[netmask](https://www.npmjs.org/package/netmask) is a library to parse IPv4 CIDR blocks.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF). It incorrectly evaluates individual IPv4 octets that contain octal strings as left-stripped integers, leading to an inordinate attack surface on hundreds of thousands of projects that rely on `netmask` to filter or evaluate IPv4 block ranges, both inbound and outbound.\r\n\r\nFor example, a remote unauthenticated attacker can request local resources using input data `0177.0.0.1` (`127.0.0.1`), which `netmask` evaluates as the public IP `177.0.0.1`.\r\nContrastingly, a remote authenticated or unauthenticated attacker can input the data `0127.0.0.01` (`87.0.0.1`) as localhost, yet the input data is a public IP and can potentially cause local and remote file inclusion (LFI/RFI).\r\nA remote authenticated or unauthenticated attacker can bypass packages that rely on `netmask` to filter IP address blocks to reach intranets, VPNs, containers, adjacent VPC instances, or LAN hosts, using input data such as `012.0.0.1` (`10.0.0.1`), which `netmask` evaluates as `12.0.0.1` (public).\n\n\n **NOTE:** This vulnerability has also been identified as: [CVE-2021-28918](https://security.snyk.io/vuln/SNYK-JS-NETMASK-1089716)\n\n## Remediation\nUpgrade `netmask` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4)\n- [PoC](https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md)\n- [Researcher Report](https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/)\n",
        "epssDetails": {
          "percentile": "0.45836",
          "probability": "0.00111",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-29418"
          ],
          "CWE": [
            "CWE-20",
            "CWE-918"
          ],
          "GHSA": [
            "GHSA-pch5-whg9-qr2r"
          ]
        },
        "packageName": "netmask",
        "proprietary": false,
        "creationTime": "2023-11-14T13:41:50.864766Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-03-29T21:32:05Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-03-30T14:57:04Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:48:36.307470Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "netmask@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "netmask",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-PACRESOLVER-1564857",
        "title": "Remote Code Execution (RCE)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
        "credit": [
          "Tim Perry"
        ],
        "semver": {
          "vulnerable": [
            "<5.0.0"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.1,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "pac-resolver",
        "references": [
          {
            "url": "https://github.com/TooTallNate/node-degenerator/commit/ccc3445354135398b6eb1a04c7d27c13b833f2d5",
            "title": "GitHub Commit #1"
          },
          {
            "url": "https://github.com/TooTallNate/node-degenerator/commit/9d25bb67d957bc2e5425fea7bf7a58b3fc64ff9e",
            "title": "GitHub Commit #2"
          },
          {
            "url": "https://github.com/TooTallNate/node-pac-resolver/releases/tag/5.0.0",
            "title": "Github Release"
          },
          {
            "url": "https://httptoolkit.tech/blog/npm-pac-proxy-agent-vulnerability/",
            "title": "Researcher Blog"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:50:25.992772Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:56:10.573012Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:50:25.992772Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Remote Code Execution (RCE). This can occur when used with untrusted input, due to unsafe PAC file handling.\r\n\r\nIn order to exploit this vulnerability in practice, this either requires an attacker on your local network, a specific vulnerable configuration, or some second vulnerability that allows an attacker to set your config values.\r\n\r\n**NOTE:** The fix for this vulnerability is applied in the `node-degenerator` library, a dependency is written by the same maintainer. \r\n\r\n\r\n### PoC\r\n```js\r\nconst pac = require('pac-resolver');\r\n\r\n// Should keep running forever (if not vulnerable):\r\nsetInterval(() => {\r\n    console.log(\"Still running\");\r\n}, 1000);\r\n\r\n// Parsing a malicious PAC file unexpectedly executes unsandboxed code:\r\npac(`\r\n    // Real PAC config:\r\n    function FindProxyForURL(url, host) {\r\n        return \"DIRECT\";\r\n    }\r\n\r\n    // But also run arbitrary code:\r\n    var f = this.constructor.constructor(\\`\r\n        // Running outside the sandbox:\r\n        console.log('Read env vars:', process.env);\r\n        console.log('!!! PAC file is running arbitrary code !!!');\r\n        console.log('Can read & could exfiltrate env vars ^');\r\n        console.log('Can kill parsing process, like so:');\r\n        process.exit(100); // Kill the vulnerable process\r\n        // etc etc\r\n    \\`);\r\n\r\n    f();\r\n\r\n```\n## Remediation\nUpgrade `pac-resolver` to version 5.0.0 or higher.\n## References\n- [GitHub Commit #1](https://github.com/TooTallNate/node-degenerator/commit/ccc3445354135398b6eb1a04c7d27c13b833f2d5)\n- [GitHub Commit #2](https://github.com/TooTallNate/node-degenerator/commit/9d25bb67d957bc2e5425fea7bf7a58b3fc64ff9e)\n- [Github Release](https://github.com/TooTallNate/node-pac-resolver/releases/tag/5.0.0)\n- [Researcher Blog](https://httptoolkit.tech/blog/npm-pac-proxy-agent-vulnerability/)\n",
        "epssDetails": {
          "percentile": "0.75323",
          "probability": "0.00433",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-23406"
          ],
          "CWE": [
            "CWE-94"
          ]
        },
        "packageName": "pac-resolver",
        "proprietary": true,
        "creationTime": "2021-08-15T12:18:11.115775Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-05-30T13:37:37Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-08-22T13:26:31Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:50:25.992772Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "pac-resolver",
        "version": "1.2.6"
      },
      {
        "id": "SNYK-JS-PACRESOLVER-1564857",
        "title": "Remote Code Execution (RCE)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
        "credit": [
          "Tim Perry"
        ],
        "semver": {
          "vulnerable": [
            "<5.0.0"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.1,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "pac-resolver",
        "references": [
          {
            "url": "https://github.com/TooTallNate/node-degenerator/commit/ccc3445354135398b6eb1a04c7d27c13b833f2d5",
            "title": "GitHub Commit #1"
          },
          {
            "url": "https://github.com/TooTallNate/node-degenerator/commit/9d25bb67d957bc2e5425fea7bf7a58b3fc64ff9e",
            "title": "GitHub Commit #2"
          },
          {
            "url": "https://github.com/TooTallNate/node-pac-resolver/releases/tag/5.0.0",
            "title": "Github Release"
          },
          {
            "url": "https://httptoolkit.tech/blog/npm-pac-proxy-agent-vulnerability/",
            "title": "Researcher Blog"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:50:25.992772Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:56:10.573012Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:50:25.992772Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Remote Code Execution (RCE). This can occur when used with untrusted input, due to unsafe PAC file handling.\r\n\r\nIn order to exploit this vulnerability in practice, this either requires an attacker on your local network, a specific vulnerable configuration, or some second vulnerability that allows an attacker to set your config values.\r\n\r\n**NOTE:** The fix for this vulnerability is applied in the `node-degenerator` library, a dependency is written by the same maintainer. \r\n\r\n\r\n### PoC\r\n```js\r\nconst pac = require('pac-resolver');\r\n\r\n// Should keep running forever (if not vulnerable):\r\nsetInterval(() => {\r\n    console.log(\"Still running\");\r\n}, 1000);\r\n\r\n// Parsing a malicious PAC file unexpectedly executes unsandboxed code:\r\npac(`\r\n    // Real PAC config:\r\n    function FindProxyForURL(url, host) {\r\n        return \"DIRECT\";\r\n    }\r\n\r\n    // But also run arbitrary code:\r\n    var f = this.constructor.constructor(\\`\r\n        // Running outside the sandbox:\r\n        console.log('Read env vars:', process.env);\r\n        console.log('!!! PAC file is running arbitrary code !!!');\r\n        console.log('Can read & could exfiltrate env vars ^');\r\n        console.log('Can kill parsing process, like so:');\r\n        process.exit(100); // Kill the vulnerable process\r\n        // etc etc\r\n    \\`);\r\n\r\n    f();\r\n\r\n```\n## Remediation\nUpgrade `pac-resolver` to version 5.0.0 or higher.\n## References\n- [GitHub Commit #1](https://github.com/TooTallNate/node-degenerator/commit/ccc3445354135398b6eb1a04c7d27c13b833f2d5)\n- [GitHub Commit #2](https://github.com/TooTallNate/node-degenerator/commit/9d25bb67d957bc2e5425fea7bf7a58b3fc64ff9e)\n- [Github Release](https://github.com/TooTallNate/node-pac-resolver/releases/tag/5.0.0)\n- [Researcher Blog](https://httptoolkit.tech/blog/npm-pac-proxy-agent-vulnerability/)\n",
        "epssDetails": {
          "percentile": "0.75323",
          "probability": "0.00433",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-23406"
          ],
          "CWE": [
            "CWE-94"
          ]
        },
        "packageName": "pac-resolver",
        "proprietary": true,
        "creationTime": "2021-08-15T12:18:11.115775Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-05-30T13:37:37Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-08-22T13:26:31Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:50:25.992772Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-search2@1.1.1",
          "cogent@0.4.3",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "pac-resolver",
        "version": "1.2.6"
      },
      {
        "id": "SNYK-JS-PACRESOLVER-1564857",
        "title": "Remote Code Execution (RCE)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
        "credit": [
          "Tim Perry"
        ],
        "semver": {
          "vulnerable": [
            "<5.0.0"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.1,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "pac-resolver",
        "references": [
          {
            "url": "https://github.com/TooTallNate/node-degenerator/commit/ccc3445354135398b6eb1a04c7d27c13b833f2d5",
            "title": "GitHub Commit #1"
          },
          {
            "url": "https://github.com/TooTallNate/node-degenerator/commit/9d25bb67d957bc2e5425fea7bf7a58b3fc64ff9e",
            "title": "GitHub Commit #2"
          },
          {
            "url": "https://github.com/TooTallNate/node-pac-resolver/releases/tag/5.0.0",
            "title": "Github Release"
          },
          {
            "url": "https://httptoolkit.tech/blog/npm-pac-proxy-agent-vulnerability/",
            "title": "Researcher Blog"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:50:25.992772Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:56:10.573012Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:50:25.992772Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Remote Code Execution (RCE). This can occur when used with untrusted input, due to unsafe PAC file handling.\r\n\r\nIn order to exploit this vulnerability in practice, this either requires an attacker on your local network, a specific vulnerable configuration, or some second vulnerability that allows an attacker to set your config values.\r\n\r\n**NOTE:** The fix for this vulnerability is applied in the `node-degenerator` library, a dependency is written by the same maintainer. \r\n\r\n\r\n### PoC\r\n```js\r\nconst pac = require('pac-resolver');\r\n\r\n// Should keep running forever (if not vulnerable):\r\nsetInterval(() => {\r\n    console.log(\"Still running\");\r\n}, 1000);\r\n\r\n// Parsing a malicious PAC file unexpectedly executes unsandboxed code:\r\npac(`\r\n    // Real PAC config:\r\n    function FindProxyForURL(url, host) {\r\n        return \"DIRECT\";\r\n    }\r\n\r\n    // But also run arbitrary code:\r\n    var f = this.constructor.constructor(\\`\r\n        // Running outside the sandbox:\r\n        console.log('Read env vars:', process.env);\r\n        console.log('!!! PAC file is running arbitrary code !!!');\r\n        console.log('Can read & could exfiltrate env vars ^');\r\n        console.log('Can kill parsing process, like so:');\r\n        process.exit(100); // Kill the vulnerable process\r\n        // etc etc\r\n    \\`);\r\n\r\n    f();\r\n\r\n```\n## Remediation\nUpgrade `pac-resolver` to version 5.0.0 or higher.\n## References\n- [GitHub Commit #1](https://github.com/TooTallNate/node-degenerator/commit/ccc3445354135398b6eb1a04c7d27c13b833f2d5)\n- [GitHub Commit #2](https://github.com/TooTallNate/node-degenerator/commit/9d25bb67d957bc2e5425fea7bf7a58b3fc64ff9e)\n- [Github Release](https://github.com/TooTallNate/node-pac-resolver/releases/tag/5.0.0)\n- [Researcher Blog](https://httptoolkit.tech/blog/npm-pac-proxy-agent-vulnerability/)\n",
        "epssDetails": {
          "percentile": "0.75323",
          "probability": "0.00433",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-23406"
          ],
          "CWE": [
            "CWE-94"
          ]
        },
        "packageName": "pac-resolver",
        "proprietary": true,
        "creationTime": "2021-08-15T12:18:11.115775Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-05-30T13:37:37Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-08-22T13:26:31Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:50:25.992772Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "pac-resolver",
        "version": "1.2.6"
      },
      {
        "id": "SNYK-JS-PACRESOLVER-1564857",
        "title": "Remote Code Execution (RCE)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
        "credit": [
          "Tim Perry"
        ],
        "semver": {
          "vulnerable": [
            "<5.0.0"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.1,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "pac-resolver",
        "references": [
          {
            "url": "https://github.com/TooTallNate/node-degenerator/commit/ccc3445354135398b6eb1a04c7d27c13b833f2d5",
            "title": "GitHub Commit #1"
          },
          {
            "url": "https://github.com/TooTallNate/node-degenerator/commit/9d25bb67d957bc2e5425fea7bf7a58b3fc64ff9e",
            "title": "GitHub Commit #2"
          },
          {
            "url": "https://github.com/TooTallNate/node-pac-resolver/releases/tag/5.0.0",
            "title": "Github Release"
          },
          {
            "url": "https://httptoolkit.tech/blog/npm-pac-proxy-agent-vulnerability/",
            "title": "Researcher Blog"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:50:25.992772Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:56:10.573012Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:50:25.992772Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Remote Code Execution (RCE). This can occur when used with untrusted input, due to unsafe PAC file handling.\r\n\r\nIn order to exploit this vulnerability in practice, this either requires an attacker on your local network, a specific vulnerable configuration, or some second vulnerability that allows an attacker to set your config values.\r\n\r\n**NOTE:** The fix for this vulnerability is applied in the `node-degenerator` library, a dependency is written by the same maintainer. \r\n\r\n\r\n### PoC\r\n```js\r\nconst pac = require('pac-resolver');\r\n\r\n// Should keep running forever (if not vulnerable):\r\nsetInterval(() => {\r\n    console.log(\"Still running\");\r\n}, 1000);\r\n\r\n// Parsing a malicious PAC file unexpectedly executes unsandboxed code:\r\npac(`\r\n    // Real PAC config:\r\n    function FindProxyForURL(url, host) {\r\n        return \"DIRECT\";\r\n    }\r\n\r\n    // But also run arbitrary code:\r\n    var f = this.constructor.constructor(\\`\r\n        // Running outside the sandbox:\r\n        console.log('Read env vars:', process.env);\r\n        console.log('!!! PAC file is running arbitrary code !!!');\r\n        console.log('Can read & could exfiltrate env vars ^');\r\n        console.log('Can kill parsing process, like so:');\r\n        process.exit(100); // Kill the vulnerable process\r\n        // etc etc\r\n    \\`);\r\n\r\n    f();\r\n\r\n```\n## Remediation\nUpgrade `pac-resolver` to version 5.0.0 or higher.\n## References\n- [GitHub Commit #1](https://github.com/TooTallNate/node-degenerator/commit/ccc3445354135398b6eb1a04c7d27c13b833f2d5)\n- [GitHub Commit #2](https://github.com/TooTallNate/node-degenerator/commit/9d25bb67d957bc2e5425fea7bf7a58b3fc64ff9e)\n- [Github Release](https://github.com/TooTallNate/node-pac-resolver/releases/tag/5.0.0)\n- [Researcher Blog](https://httptoolkit.tech/blog/npm-pac-proxy-agent-vulnerability/)\n",
        "epssDetails": {
          "percentile": "0.75323",
          "probability": "0.00433",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-23406"
          ],
          "CWE": [
            "CWE-94"
          ]
        },
        "packageName": "pac-resolver",
        "proprietary": true,
        "creationTime": "2021-08-15T12:18:11.115775Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-05-30T13:37:37Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-08-22T13:26:31Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:50:25.992772Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "pac-resolver",
        "version": "1.2.6"
      },
      {
        "id": "SNYK-JS-PACRESOLVER-1564857",
        "title": "Remote Code Execution (RCE)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
        "credit": [
          "Tim Perry"
        ],
        "semver": {
          "vulnerable": [
            "<5.0.0"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.1,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "pac-resolver",
        "references": [
          {
            "url": "https://github.com/TooTallNate/node-degenerator/commit/ccc3445354135398b6eb1a04c7d27c13b833f2d5",
            "title": "GitHub Commit #1"
          },
          {
            "url": "https://github.com/TooTallNate/node-degenerator/commit/9d25bb67d957bc2e5425fea7bf7a58b3fc64ff9e",
            "title": "GitHub Commit #2"
          },
          {
            "url": "https://github.com/TooTallNate/node-pac-resolver/releases/tag/5.0.0",
            "title": "Github Release"
          },
          {
            "url": "https://httptoolkit.tech/blog/npm-pac-proxy-agent-vulnerability/",
            "title": "Researcher Blog"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:50:25.992772Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:56:10.573012Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:50:25.992772Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Remote Code Execution (RCE). This can occur when used with untrusted input, due to unsafe PAC file handling.\r\n\r\nIn order to exploit this vulnerability in practice, this either requires an attacker on your local network, a specific vulnerable configuration, or some second vulnerability that allows an attacker to set your config values.\r\n\r\n**NOTE:** The fix for this vulnerability is applied in the `node-degenerator` library, a dependency is written by the same maintainer. \r\n\r\n\r\n### PoC\r\n```js\r\nconst pac = require('pac-resolver');\r\n\r\n// Should keep running forever (if not vulnerable):\r\nsetInterval(() => {\r\n    console.log(\"Still running\");\r\n}, 1000);\r\n\r\n// Parsing a malicious PAC file unexpectedly executes unsandboxed code:\r\npac(`\r\n    // Real PAC config:\r\n    function FindProxyForURL(url, host) {\r\n        return \"DIRECT\";\r\n    }\r\n\r\n    // But also run arbitrary code:\r\n    var f = this.constructor.constructor(\\`\r\n        // Running outside the sandbox:\r\n        console.log('Read env vars:', process.env);\r\n        console.log('!!! PAC file is running arbitrary code !!!');\r\n        console.log('Can read & could exfiltrate env vars ^');\r\n        console.log('Can kill parsing process, like so:');\r\n        process.exit(100); // Kill the vulnerable process\r\n        // etc etc\r\n    \\`);\r\n\r\n    f();\r\n\r\n```\n## Remediation\nUpgrade `pac-resolver` to version 5.0.0 or higher.\n## References\n- [GitHub Commit #1](https://github.com/TooTallNate/node-degenerator/commit/ccc3445354135398b6eb1a04c7d27c13b833f2d5)\n- [GitHub Commit #2](https://github.com/TooTallNate/node-degenerator/commit/9d25bb67d957bc2e5425fea7bf7a58b3fc64ff9e)\n- [Github Release](https://github.com/TooTallNate/node-pac-resolver/releases/tag/5.0.0)\n- [Researcher Blog](https://httptoolkit.tech/blog/npm-pac-proxy-agent-vulnerability/)\n",
        "epssDetails": {
          "percentile": "0.75323",
          "probability": "0.00433",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-23406"
          ],
          "CWE": [
            "CWE-94"
          ]
        },
        "packageName": "pac-resolver",
        "proprietary": true,
        "creationTime": "2021-08-15T12:18:11.115775Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-05-30T13:37:37Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-08-22T13:26:31Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:50:25.992772Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "pac-resolver",
        "version": "1.2.6"
      },
      {
        "id": "SNYK-JS-PACRESOLVER-1564857",
        "title": "Remote Code Execution (RCE)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
        "credit": [
          "Tim Perry"
        ],
        "semver": {
          "vulnerable": [
            "<5.0.0"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.1,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "pac-resolver",
        "references": [
          {
            "url": "https://github.com/TooTallNate/node-degenerator/commit/ccc3445354135398b6eb1a04c7d27c13b833f2d5",
            "title": "GitHub Commit #1"
          },
          {
            "url": "https://github.com/TooTallNate/node-degenerator/commit/9d25bb67d957bc2e5425fea7bf7a58b3fc64ff9e",
            "title": "GitHub Commit #2"
          },
          {
            "url": "https://github.com/TooTallNate/node-pac-resolver/releases/tag/5.0.0",
            "title": "Github Release"
          },
          {
            "url": "https://httptoolkit.tech/blog/npm-pac-proxy-agent-vulnerability/",
            "title": "Researcher Blog"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:50:25.992772Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:56:10.573012Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:50:25.992772Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Remote Code Execution (RCE). This can occur when used with untrusted input, due to unsafe PAC file handling.\r\n\r\nIn order to exploit this vulnerability in practice, this either requires an attacker on your local network, a specific vulnerable configuration, or some second vulnerability that allows an attacker to set your config values.\r\n\r\n**NOTE:** The fix for this vulnerability is applied in the `node-degenerator` library, a dependency is written by the same maintainer. \r\n\r\n\r\n### PoC\r\n```js\r\nconst pac = require('pac-resolver');\r\n\r\n// Should keep running forever (if not vulnerable):\r\nsetInterval(() => {\r\n    console.log(\"Still running\");\r\n}, 1000);\r\n\r\n// Parsing a malicious PAC file unexpectedly executes unsandboxed code:\r\npac(`\r\n    // Real PAC config:\r\n    function FindProxyForURL(url, host) {\r\n        return \"DIRECT\";\r\n    }\r\n\r\n    // But also run arbitrary code:\r\n    var f = this.constructor.constructor(\\`\r\n        // Running outside the sandbox:\r\n        console.log('Read env vars:', process.env);\r\n        console.log('!!! PAC file is running arbitrary code !!!');\r\n        console.log('Can read & could exfiltrate env vars ^');\r\n        console.log('Can kill parsing process, like so:');\r\n        process.exit(100); // Kill the vulnerable process\r\n        // etc etc\r\n    \\`);\r\n\r\n    f();\r\n\r\n```\n## Remediation\nUpgrade `pac-resolver` to version 5.0.0 or higher.\n## References\n- [GitHub Commit #1](https://github.com/TooTallNate/node-degenerator/commit/ccc3445354135398b6eb1a04c7d27c13b833f2d5)\n- [GitHub Commit #2](https://github.com/TooTallNate/node-degenerator/commit/9d25bb67d957bc2e5425fea7bf7a58b3fc64ff9e)\n- [Github Release](https://github.com/TooTallNate/node-pac-resolver/releases/tag/5.0.0)\n- [Researcher Blog](https://httptoolkit.tech/blog/npm-pac-proxy-agent-vulnerability/)\n",
        "epssDetails": {
          "percentile": "0.75323",
          "probability": "0.00433",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-23406"
          ],
          "CWE": [
            "CWE-94"
          ]
        },
        "packageName": "pac-resolver",
        "proprietary": true,
        "creationTime": "2021-08-15T12:18:11.115775Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-05-30T13:37:37Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-08-22T13:26:31Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:50:25.992772Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "pac-resolver",
        "version": "1.2.6"
      },
      {
        "id": "SNYK-JS-PACRESOLVER-1564857",
        "title": "Remote Code Execution (RCE)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
        "credit": [
          "Tim Perry"
        ],
        "semver": {
          "vulnerable": [
            "<5.0.0"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.1,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "pac-resolver",
        "references": [
          {
            "url": "https://github.com/TooTallNate/node-degenerator/commit/ccc3445354135398b6eb1a04c7d27c13b833f2d5",
            "title": "GitHub Commit #1"
          },
          {
            "url": "https://github.com/TooTallNate/node-degenerator/commit/9d25bb67d957bc2e5425fea7bf7a58b3fc64ff9e",
            "title": "GitHub Commit #2"
          },
          {
            "url": "https://github.com/TooTallNate/node-pac-resolver/releases/tag/5.0.0",
            "title": "Github Release"
          },
          {
            "url": "https://httptoolkit.tech/blog/npm-pac-proxy-agent-vulnerability/",
            "title": "Researcher Blog"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:50:25.992772Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:56:10.573012Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:50:25.992772Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Remote Code Execution (RCE). This can occur when used with untrusted input, due to unsafe PAC file handling.\r\n\r\nIn order to exploit this vulnerability in practice, this either requires an attacker on your local network, a specific vulnerable configuration, or some second vulnerability that allows an attacker to set your config values.\r\n\r\n**NOTE:** The fix for this vulnerability is applied in the `node-degenerator` library, a dependency is written by the same maintainer. \r\n\r\n\r\n### PoC\r\n```js\r\nconst pac = require('pac-resolver');\r\n\r\n// Should keep running forever (if not vulnerable):\r\nsetInterval(() => {\r\n    console.log(\"Still running\");\r\n}, 1000);\r\n\r\n// Parsing a malicious PAC file unexpectedly executes unsandboxed code:\r\npac(`\r\n    // Real PAC config:\r\n    function FindProxyForURL(url, host) {\r\n        return \"DIRECT\";\r\n    }\r\n\r\n    // But also run arbitrary code:\r\n    var f = this.constructor.constructor(\\`\r\n        // Running outside the sandbox:\r\n        console.log('Read env vars:', process.env);\r\n        console.log('!!! PAC file is running arbitrary code !!!');\r\n        console.log('Can read & could exfiltrate env vars ^');\r\n        console.log('Can kill parsing process, like so:');\r\n        process.exit(100); // Kill the vulnerable process\r\n        // etc etc\r\n    \\`);\r\n\r\n    f();\r\n\r\n```\n## Remediation\nUpgrade `pac-resolver` to version 5.0.0 or higher.\n## References\n- [GitHub Commit #1](https://github.com/TooTallNate/node-degenerator/commit/ccc3445354135398b6eb1a04c7d27c13b833f2d5)\n- [GitHub Commit #2](https://github.com/TooTallNate/node-degenerator/commit/9d25bb67d957bc2e5425fea7bf7a58b3fc64ff9e)\n- [Github Release](https://github.com/TooTallNate/node-pac-resolver/releases/tag/5.0.0)\n- [Researcher Blog](https://httptoolkit.tech/blog/npm-pac-proxy-agent-vulnerability/)\n",
        "epssDetails": {
          "percentile": "0.75323",
          "probability": "0.00433",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-23406"
          ],
          "CWE": [
            "CWE-94"
          ]
        },
        "packageName": "pac-resolver",
        "proprietary": true,
        "creationTime": "2021-08-15T12:18:11.115775Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-05-30T13:37:37Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-08-22T13:26:31Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:50:25.992772Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "pac-resolver",
        "version": "1.2.6"
      },
      {
        "id": "SNYK-JS-POSTCSS-1255640",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Yeting Li"
        ],
        "semver": {
          "vulnerable": [
            ">=8.0.0 <8.2.13",
            "<7.0.36"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "8.2.13",
          "7.0.36"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "postcss",
        "references": [
          {
            "url": "https://github.com/postcss/postcss/commit/2b1d04c867995e55124e0a165b7c6622c1735956",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:51:39.227175Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:48.848594Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:04:56.506991Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:39.227175Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:48.848594Z"
          }
        ],
        "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via `getAnnotationURL()` and `loadAnnotation()` in `lib/previous-map.js`. The vulnerable regexes are caused mainly by the sub-pattern `\\/\\*\\s*# sourceMappingURL=(.*)`.\r\n\r\n### PoC\r\n```\r\nvar postcss = require(\"postcss\")\r\nfunction build_attack(n) {\r\n    var ret = \"a{}\"\r\n    for (var i = 0; i < n; i++) {\r\n        ret += \"/*# sourceMappingURL=\"\r\n    }\r\n    return ret + \"!\";\r\n}\r\n\r\n// postcss.parse('a{}/*# sourceMappingURL=a.css.map */')\r\nfor(var i = 1; i <= 500000; i++) {\r\n    if (i % 1000 == 0) {\r\n        var time = Date.now();\r\n        var attack_str = build_attack(i)\r\n        try{\r\n            postcss.parse(attack_str)\r\n            var time_cost = Date.now() - time;\r\n            console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\");\r\n            }\r\n        catch(e){\r\n        var time_cost = Date.now() - time;\r\n        console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\");\r\n        }\r\n    }\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `postcss` to version 8.2.13, 7.0.36 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/2b1d04c867995e55124e0a165b7c6622c1735956)\n",
        "epssDetails": {
          "percentile": "0.59208",
          "probability": "0.00204",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-23382"
          ],
          "CWE": [
            "CWE-400"
          ]
        },
        "packageName": "postcss",
        "proprietary": true,
        "creationTime": "2021-04-26T15:22:41.908415Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-04-26T15:09:50Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-04-26T16:18:39Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:48.848594Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-build@1.2.2",
          "builder-autoprefixer@1.0.4",
          "autoprefixer-core@3.1.2",
          "postcss@2.2.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "postcss",
        "version": "2.2.6"
      },
      {
        "id": "SNYK-JS-POSTCSS-5926692",
        "title": "Improper Input Validation",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<8.4.31"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "8.4.31"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "postcss",
        "references": [
          {
            "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/postcss/postcss/pull/1890",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
            "title": "GitHub Release"
          },
          {
            "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-11-26T13:40:04.334293Z"
          },
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:40.363646Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:22.228973Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-11-26T13:40:04.334293Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:40.363646Z"
          }
        ],
        "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
        "epssDetails": {
          "percentile": "0.41218",
          "probability": "0.00093",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-44270"
          ],
          "CWE": [
            "CWE-20"
          ]
        },
        "packageName": "postcss",
        "proprietary": false,
        "creationTime": "2023-10-01T10:42:55.486681Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-09-29T22:46:45Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-10-01T11:23:35.354495Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-11-26T13:40:04.334293Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-build@1.2.2",
          "builder-autoprefixer@1.0.4",
          "autoprefixer-core@3.1.2",
          "postcss@2.2.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "postcss",
        "version": "2.2.6"
      },
      {
        "id": "SNYK-JS-QS-3153490",
        "title": "Prototype Poisoning",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "BRAUN Nathanael",
          "BRISSAUD Johan"
        ],
        "semver": {
          "vulnerable": [
            "<6.2.4",
            ">=6.3.0 <6.3.3",
            ">=6.4.0 <6.4.1",
            ">=6.5.0 <6.5.3",
            ">=6.6.0 <6.6.1",
            ">=6.7.0 <6.7.3",
            ">=6.8.0 <6.8.3",
            ">=6.9.0 <6.9.7",
            ">=6.10.0 <6.10.3"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "6.2.4",
          "6.3.3",
          "6.4.1",
          "6.5.3",
          "6.6.1",
          "6.7.3",
          "6.8.3",
          "6.9.7",
          "6.10.3"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "qs",
        "references": [
          {
            "url": "https://github.com/ljharb/qs/pull/428",
            "title": "GitHub PR"
          },
          {
            "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2150323",
            "title": "RedHat Bugzilla Bug"
          },
          {
            "url": "https://github.com/n8tz/CVE-2022-24999",
            "title": "Researcher Advisory"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:52:48.801266Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:59.571489Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:01.312784Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:48.801266Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:59.571489Z"
          }
        ],
        "description": "## Overview\n[qs](https://www.npmjs.com/package/qs) is a querystring parser that supports nesting and arrays, with a depth limit.\n\nAffected versions of this package are vulnerable to Prototype Poisoning which allows attackers to cause a Node process to hang, processing an Array object whose prototype has been replaced by one with an excessive length value.\r\n\r\n**Note:** In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](https://security.snyk.io/vuln/SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `qs` to version 6.2.4, 6.3.3, 6.4.1, 6.5.3, 6.6.1, 6.7.3, 6.8.3, 6.9.7, 6.10.3 or higher.\n## References\n- [GitHub PR](https://github.com/ljharb/qs/pull/428)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=2150323)\n- [Researcher Advisory](https://github.com/n8tz/CVE-2022-24999)\n",
        "epssDetails": {
          "percentile": "0.89100",
          "probability": "0.01947",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-24999"
          ],
          "CWE": [
            "CWE-1321"
          ]
        },
        "packageName": "qs",
        "proprietary": false,
        "creationTime": "2022-12-04T11:01:47.782869Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-11-26T00:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-12-04T12:24:32.307833Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:59.571489Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "superagent@0.17.0",
          "qs@0.6.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "qs",
        "version": "0.6.5"
      },
      {
        "id": "npm:qs:20140806",
        "title": "Denial of Service (DoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "Dustin Shiver"
        ],
        "semver": {
          "vulnerable": [
            "<1.0.0"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "1.0.0"
        ],
        "patches": [
          {
            "id": "patch:npm:qs:20140806:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20140806/qs_20140806_0_1_snyk_npm.patch"
            ],
            "version": "=0.5.6",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.728930Z"
          },
          {
            "id": "patch:npm:qs:20140806:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20140806/qs_20140806_0_0_43a604b7847e56bba49d0ce3e222fe89569354d8_snyk.patch"
            ],
            "version": "<1.0.0 >=0.6.5",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.741062Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [
          {
            "version": [
              "<1.0.0"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "compact"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "qs",
        "references": [
          {
            "url": "https://github.com/tj/node-querystring/pull/114/commits/43a604b7847e56bba49d0ce3e222fe89569354d8",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/node-querystring/issues/104",
            "title": "GitHub Issue"
          },
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2014-7191",
            "title": "NVD"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 4.3,
            "modificationTime": "2024-03-11T09:48:53.430808Z"
          },
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:52:39.103034Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:59:04.389055Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:48:53.430808Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:39.103034Z"
          }
        ],
        "description": "## Overview\n\n[qs](https://www.npmjs.com/package/qs) is a querystring parser that supports nesting and arrays, with a depth limit.\n\n\nAffected versions of this package are vulnerable to Denial of Service (DoS).\nDuring parsing, the `qs` module may create a sparse area (an array where no elements are filled), and grow that array to the necessary size based on the indices used on it. An attacker can specify a high index value in a query string, thus making the server allocate a respectively big array. Truly large values can cause the server to run out of memory and cause it to crash - thus enabling a Denial-of-Service attack.\n\n## Remediation\n\nUpgrade `qs` to version 1.0.0 or higher.\n\n\n## Details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\r\n\r\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\r\n\r\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\r\n\r\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\r\n\r\nTwo common types of DoS vulnerabilities:\r\n\r\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\r\n\r\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](npm:ws:20171108)\n\n## References\n\n- [GitHub Commit](https://github.com/tj/node-querystring/pull/114/commits/43a604b7847e56bba49d0ce3e222fe89569354d8)\n\n- [GitHub Issue](https://github.com/visionmedia/node-querystring/issues/104)\n\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2014-7191)\n",
        "epssDetails": {
          "percentile": "0.93304",
          "probability": "0.05333",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2014-7191"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "29"
          ],
          "GHSA": [
            "GHSA-gqgv-6jq5-jjj9",
            "GHSA-jjv7-qpx3-h62q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-QS-10019",
            "SNYK-JS-QS-10019",
            "npm:qs:20140806"
          ]
        },
        "packageName": "qs",
        "proprietary": false,
        "creationTime": "2014-08-06T06:10:22Z",
        "functions_new": [
          {
            "version": [
              "<1.0.0"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "compact"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-QS-10019"
        ],
        "disclosureTime": "2014-08-06T06:10:22Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2014-08-06T06:10:22Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:52:39.103034Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "superagent@0.17.0",
          "qs@0.6.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "qs",
        "version": "0.6.5"
      },
      {
        "id": "npm:qs:20140806-1",
        "title": "Denial of Service (DoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
        "credit": [
          "Tom Steele"
        ],
        "semver": {
          "vulnerable": [
            "<1.0.0"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "1.0.0"
        ],
        "patches": [
          {
            "id": "patch:npm:qs:20140806-1:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20140806-1/qs_20140806-1_0_0_snyk.patch"
            ],
            "version": "<1.0.0 >=0.6.5",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.742148Z"
          },
          {
            "id": "patch:npm:qs:20140806-1:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20140806-1/qs_20140806-1_0_1_snyk.patch"
            ],
            "version": "=0.5.6",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.744535Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "qs",
        "references": [
          {
            "url": "https://nodesecurity.io/advisories/28",
            "title": "Node Security Advisory"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:45:55.210133Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:58:44.467015Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:45:55.210133Z"
          }
        ],
        "description": "## Overview\n[qs](https://www.npmjs.com/package/qs) is a querystring parser that supports nesting and arrays, with a depth limit.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). When parsing a string representing a deeply nested object, qs will block the event loop for long periods of time. Such a delay may hold up the server's resources, keeping it from processing other requests in the meantime, thus enabling a Denial-of-Service attack.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `qs` to version 1.0.0 or higher.\n## References\n- [Node Security Advisory](https://nodesecurity.io/advisories/28)\n",
        "epssDetails": {
          "percentile": "0.45841",
          "probability": "0.00110",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2014-10064"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "28"
          ],
          "GHSA": [
            "GHSA-f9cm-p3w6-xvr3"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-QS-10020",
            "SNYK-JS-QS-10020",
            "npm:qs:20140806-1"
          ]
        },
        "packageName": "qs",
        "proprietary": false,
        "creationTime": "2014-08-06T06:10:23Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-QS-10020"
        ],
        "disclosureTime": "2014-08-06T06:10:23Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2014-08-06T06:10:23Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:45:55.210133Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "superagent@0.17.0",
          "qs@0.6.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "qs",
        "version": "0.6.5"
      },
      {
        "id": "npm:qs:20170213",
        "title": "Prototype Override Protection Bypass",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "Snyk Security Research Team"
        ],
        "semver": {
          "vulnerable": [
            "<6.0.4",
            ">=6.1.0 <6.1.2",
            ">=6.2.0 <6.2.3",
            ">=6.3.0 <6.3.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "6.0.4",
          "6.1.2",
          "6.2.3",
          "6.3.2"
        ],
        "patches": [
          {
            "id": "patch:npm:qs:20170213:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/630_632.patch"
            ],
            "version": "=6.3.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.855245Z"
          },
          {
            "id": "patch:npm:qs:20170213:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/631_632.patch"
            ],
            "version": "=6.3.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.856271Z"
          },
          {
            "id": "patch:npm:qs:20170213:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/621_623.patch"
            ],
            "version": "=6.2.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.857318Z"
          },
          {
            "id": "patch:npm:qs:20170213:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/622_623.patch"
            ],
            "version": "=6.2.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.858334Z"
          },
          {
            "id": "patch:npm:qs:20170213:4",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/610_612.patch"
            ],
            "version": "=6.1.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.859411Z"
          },
          {
            "id": "patch:npm:qs:20170213:5",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/611_612.patch"
            ],
            "version": "=6.1.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.860523Z"
          },
          {
            "id": "patch:npm:qs:20170213:6",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/602_604.patch"
            ],
            "version": "=6.0.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.861504Z"
          },
          {
            "id": "patch:npm:qs:20170213:7",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/603_604.patch"
            ],
            "version": "=6.0.3",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.862615Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [
          {
            "version": [
              ">=6.2.0 <6.2.3",
              "6.3.0"
            ],
            "functionId": {
              "filePath": "lib/parse.js",
              "className": null,
              "functionName": "parseObject"
            }
          },
          {
            "version": [
              ">=6.3.1 <6.3.2"
            ],
            "functionId": {
              "filePath": "lib/parse.js",
              "className": null,
              "functionName": "parseObjectRecursive"
            }
          },
          {
            "version": [
              "<6.0.4"
            ],
            "functionId": {
              "filePath": "lib/parse.js",
              "className": null,
              "functionName": "internals.parseObject"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "qs",
        "references": [
          {
            "url": "https://github.com/ljharb/qs/commit/beade029171b8cef9cee0d03ebe577e2dd84976d",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/ljharb/qs/issues/200",
            "title": "GitHub Issue"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:34.338137Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:48:53.414157Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:03:33.996696Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:34.338137Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:48:53.414157Z"
          }
        ],
        "description": "## Overview\n[qs](https://www.npmjs.com/package/qs) is a querystring parser that supports nesting and arrays, with a depth limit.\n\nAffected versions of this package are vulnerable to Prototype Override Protection Bypass. By default `qs` protects against attacks that attempt to overwrite an object's existing prototype properties, such as `toString()`, `hasOwnProperty()`,etc.\r\n\r\nFrom [`qs` documentation](https://github.com/ljharb/qs):\r\n> By default parameters that would overwrite properties on the object prototype are ignored, if you wish to keep the data from those fields either use plainObjects as mentioned above, or set allowPrototypes to true which will allow user input to overwrite those properties. WARNING It is generally a bad idea to enable this option as it can cause problems when attempting to use the properties that have been overwritten. Always be careful with this option.\r\n\r\nOverwriting these properties can impact application logic, potentially allowing attackers to work around security controls, modify data, make the application unstable and more.\r\n\r\nIn versions of the package affected by this vulnerability, it is possible to circumvent this protection and overwrite prototype properties and functions by prefixing the name of the parameter with `[` or `]`. e.g. `qs.parse(\"]=toString\")` will return `{toString = true}`, as a result, calling `toString()` on the object will throw an exception.\r\n\r\n**Example:**\r\n```js\r\nqs.parse('toString=foo', { allowPrototypes: false })\r\n// {}\r\n\r\nqs.parse(\"]=toString\", { allowPrototypes: false })\r\n// {toString = true} <== prototype overwritten\r\n```\r\n\r\nFor more information, you can check out our [blog](https://snyk.io/blog/high-severity-vulnerability-qs/).\r\n\r\n## Disclosure Timeline\r\n- February 13th, 2017 - Reported the issue to package owner.\r\n- February 13th, 2017 - Issue acknowledged by package owner.\r\n- February 16th, 2017 - Partial fix released in versions `6.0.3`, `6.1.1`, `6.2.2`, `6.3.1`.\r\n- March 6th, 2017     - Final fix released in versions `6.4.0`,`6.3.2`, `6.2.3`, `6.1.2` and `6.0.4`\n## Remediation\nUpgrade `qs` to version 6.0.4, 6.1.2, 6.2.3, 6.3.2 or higher.\n## References\n- [GitHub Commit](https://github.com/ljharb/qs/commit/beade029171b8cef9cee0d03ebe577e2dd84976d)\n- [GitHub Issue](https://github.com/ljharb/qs/issues/200)\n",
        "epssDetails": {
          "percentile": "0.48830",
          "probability": "0.00126",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-1000048"
          ],
          "CWE": [
            "CWE-20"
          ],
          "GHSA": [
            "GHSA-gqgv-6jq5-jjj9"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-QS-10407",
            "SNYK-JS-QS-10407",
            "npm:qs:20170213"
          ]
        },
        "packageName": "qs",
        "proprietary": true,
        "creationTime": "2017-02-14T11:44:54.163000Z",
        "functions_new": [
          {
            "version": [
              ">=6.2.0 <6.2.3",
              "6.3.0"
            ],
            "functionId": {
              "filePath": "lib/parse.js",
              "functionName": "parseObject"
            }
          },
          {
            "version": [
              ">=6.3.1 <6.3.2"
            ],
            "functionId": {
              "filePath": "lib/parse.js",
              "functionName": "parseObjectRecursive"
            }
          },
          {
            "version": [
              "<6.0.4"
            ],
            "functionId": {
              "filePath": "lib/parse.js",
              "functionName": "internals.parseObject"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-QS-10407"
        ],
        "disclosureTime": "2017-02-13T00:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-03-01T10:00:54Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:48:53.414157Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "superagent@0.17.0",
          "qs@0.6.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "qs",
        "version": "0.6.5"
      },
      {
        "id": "SNYK-JS-QS-3153490",
        "title": "Prototype Poisoning",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "BRAUN Nathanael",
          "BRISSAUD Johan"
        ],
        "semver": {
          "vulnerable": [
            "<6.2.4",
            ">=6.3.0 <6.3.3",
            ">=6.4.0 <6.4.1",
            ">=6.5.0 <6.5.3",
            ">=6.6.0 <6.6.1",
            ">=6.7.0 <6.7.3",
            ">=6.8.0 <6.8.3",
            ">=6.9.0 <6.9.7",
            ">=6.10.0 <6.10.3"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "6.2.4",
          "6.3.3",
          "6.4.1",
          "6.5.3",
          "6.6.1",
          "6.7.3",
          "6.8.3",
          "6.9.7",
          "6.10.3"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "qs",
        "references": [
          {
            "url": "https://github.com/ljharb/qs/pull/428",
            "title": "GitHub PR"
          },
          {
            "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2150323",
            "title": "RedHat Bugzilla Bug"
          },
          {
            "url": "https://github.com/n8tz/CVE-2022-24999",
            "title": "Researcher Advisory"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:52:48.801266Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:59.571489Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:01.312784Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:48.801266Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:59.571489Z"
          }
        ],
        "description": "## Overview\n[qs](https://www.npmjs.com/package/qs) is a querystring parser that supports nesting and arrays, with a depth limit.\n\nAffected versions of this package are vulnerable to Prototype Poisoning which allows attackers to cause a Node process to hang, processing an Array object whose prototype has been replaced by one with an excessive length value.\r\n\r\n**Note:** In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](https://security.snyk.io/vuln/SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `qs` to version 6.2.4, 6.3.3, 6.4.1, 6.5.3, 6.6.1, 6.7.3, 6.8.3, 6.9.7, 6.10.3 or higher.\n## References\n- [GitHub PR](https://github.com/ljharb/qs/pull/428)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=2150323)\n- [Researcher Advisory](https://github.com/n8tz/CVE-2022-24999)\n",
        "epssDetails": {
          "percentile": "0.89100",
          "probability": "0.01947",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-24999"
          ],
          "CWE": [
            "CWE-1321"
          ]
        },
        "packageName": "qs",
        "proprietary": false,
        "creationTime": "2022-12-04T11:01:47.782869Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-11-26T00:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-12-04T12:24:32.307833Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:59.571489Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "tiny-lr-fork@0.0.5",
          "qs@0.5.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "qs",
        "version": "0.5.6"
      },
      {
        "id": "npm:qs:20140806",
        "title": "Denial of Service (DoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "Dustin Shiver"
        ],
        "semver": {
          "vulnerable": [
            "<1.0.0"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "1.0.0"
        ],
        "patches": [
          {
            "id": "patch:npm:qs:20140806:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20140806/qs_20140806_0_1_snyk_npm.patch"
            ],
            "version": "=0.5.6",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.728930Z"
          },
          {
            "id": "patch:npm:qs:20140806:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20140806/qs_20140806_0_0_43a604b7847e56bba49d0ce3e222fe89569354d8_snyk.patch"
            ],
            "version": "<1.0.0 >=0.6.5",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.741062Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [
          {
            "version": [
              "<1.0.0"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "compact"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "qs",
        "references": [
          {
            "url": "https://github.com/tj/node-querystring/pull/114/commits/43a604b7847e56bba49d0ce3e222fe89569354d8",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/node-querystring/issues/104",
            "title": "GitHub Issue"
          },
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2014-7191",
            "title": "NVD"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 4.3,
            "modificationTime": "2024-03-11T09:48:53.430808Z"
          },
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:52:39.103034Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:59:04.389055Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:48:53.430808Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:39.103034Z"
          }
        ],
        "description": "## Overview\n\n[qs](https://www.npmjs.com/package/qs) is a querystring parser that supports nesting and arrays, with a depth limit.\n\n\nAffected versions of this package are vulnerable to Denial of Service (DoS).\nDuring parsing, the `qs` module may create a sparse area (an array where no elements are filled), and grow that array to the necessary size based on the indices used on it. An attacker can specify a high index value in a query string, thus making the server allocate a respectively big array. Truly large values can cause the server to run out of memory and cause it to crash - thus enabling a Denial-of-Service attack.\n\n## Remediation\n\nUpgrade `qs` to version 1.0.0 or higher.\n\n\n## Details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\r\n\r\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\r\n\r\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\r\n\r\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\r\n\r\nTwo common types of DoS vulnerabilities:\r\n\r\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\r\n\r\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](npm:ws:20171108)\n\n## References\n\n- [GitHub Commit](https://github.com/tj/node-querystring/pull/114/commits/43a604b7847e56bba49d0ce3e222fe89569354d8)\n\n- [GitHub Issue](https://github.com/visionmedia/node-querystring/issues/104)\n\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2014-7191)\n",
        "epssDetails": {
          "percentile": "0.93304",
          "probability": "0.05333",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2014-7191"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "29"
          ],
          "GHSA": [
            "GHSA-gqgv-6jq5-jjj9",
            "GHSA-jjv7-qpx3-h62q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-QS-10019",
            "SNYK-JS-QS-10019",
            "npm:qs:20140806"
          ]
        },
        "packageName": "qs",
        "proprietary": false,
        "creationTime": "2014-08-06T06:10:22Z",
        "functions_new": [
          {
            "version": [
              "<1.0.0"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "compact"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-QS-10019"
        ],
        "disclosureTime": "2014-08-06T06:10:22Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2014-08-06T06:10:22Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:52:39.103034Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "tiny-lr-fork@0.0.5",
          "qs@0.5.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "qs",
        "version": "0.5.6"
      },
      {
        "id": "npm:qs:20140806-1",
        "title": "Denial of Service (DoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
        "credit": [
          "Tom Steele"
        ],
        "semver": {
          "vulnerable": [
            "<1.0.0"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "1.0.0"
        ],
        "patches": [
          {
            "id": "patch:npm:qs:20140806-1:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20140806-1/qs_20140806-1_0_0_snyk.patch"
            ],
            "version": "<1.0.0 >=0.6.5",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.742148Z"
          },
          {
            "id": "patch:npm:qs:20140806-1:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20140806-1/qs_20140806-1_0_1_snyk.patch"
            ],
            "version": "=0.5.6",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.744535Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "qs",
        "references": [
          {
            "url": "https://nodesecurity.io/advisories/28",
            "title": "Node Security Advisory"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:45:55.210133Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:58:44.467015Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:45:55.210133Z"
          }
        ],
        "description": "## Overview\n[qs](https://www.npmjs.com/package/qs) is a querystring parser that supports nesting and arrays, with a depth limit.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). When parsing a string representing a deeply nested object, qs will block the event loop for long periods of time. Such a delay may hold up the server's resources, keeping it from processing other requests in the meantime, thus enabling a Denial-of-Service attack.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `qs` to version 1.0.0 or higher.\n## References\n- [Node Security Advisory](https://nodesecurity.io/advisories/28)\n",
        "epssDetails": {
          "percentile": "0.45841",
          "probability": "0.00110",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2014-10064"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "28"
          ],
          "GHSA": [
            "GHSA-f9cm-p3w6-xvr3"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-QS-10020",
            "SNYK-JS-QS-10020",
            "npm:qs:20140806-1"
          ]
        },
        "packageName": "qs",
        "proprietary": false,
        "creationTime": "2014-08-06T06:10:23Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-QS-10020"
        ],
        "disclosureTime": "2014-08-06T06:10:23Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2014-08-06T06:10:23Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:45:55.210133Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "tiny-lr-fork@0.0.5",
          "qs@0.5.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "qs",
        "version": "0.5.6"
      },
      {
        "id": "npm:qs:20170213",
        "title": "Prototype Override Protection Bypass",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "Snyk Security Research Team"
        ],
        "semver": {
          "vulnerable": [
            "<6.0.4",
            ">=6.1.0 <6.1.2",
            ">=6.2.0 <6.2.3",
            ">=6.3.0 <6.3.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "6.0.4",
          "6.1.2",
          "6.2.3",
          "6.3.2"
        ],
        "patches": [
          {
            "id": "patch:npm:qs:20170213:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/630_632.patch"
            ],
            "version": "=6.3.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.855245Z"
          },
          {
            "id": "patch:npm:qs:20170213:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/631_632.patch"
            ],
            "version": "=6.3.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.856271Z"
          },
          {
            "id": "patch:npm:qs:20170213:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/621_623.patch"
            ],
            "version": "=6.2.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.857318Z"
          },
          {
            "id": "patch:npm:qs:20170213:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/622_623.patch"
            ],
            "version": "=6.2.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.858334Z"
          },
          {
            "id": "patch:npm:qs:20170213:4",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/610_612.patch"
            ],
            "version": "=6.1.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.859411Z"
          },
          {
            "id": "patch:npm:qs:20170213:5",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/611_612.patch"
            ],
            "version": "=6.1.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.860523Z"
          },
          {
            "id": "patch:npm:qs:20170213:6",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/602_604.patch"
            ],
            "version": "=6.0.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.861504Z"
          },
          {
            "id": "patch:npm:qs:20170213:7",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/603_604.patch"
            ],
            "version": "=6.0.3",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.862615Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [
          {
            "version": [
              ">=6.2.0 <6.2.3",
              "6.3.0"
            ],
            "functionId": {
              "filePath": "lib/parse.js",
              "className": null,
              "functionName": "parseObject"
            }
          },
          {
            "version": [
              ">=6.3.1 <6.3.2"
            ],
            "functionId": {
              "filePath": "lib/parse.js",
              "className": null,
              "functionName": "parseObjectRecursive"
            }
          },
          {
            "version": [
              "<6.0.4"
            ],
            "functionId": {
              "filePath": "lib/parse.js",
              "className": null,
              "functionName": "internals.parseObject"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "qs",
        "references": [
          {
            "url": "https://github.com/ljharb/qs/commit/beade029171b8cef9cee0d03ebe577e2dd84976d",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/ljharb/qs/issues/200",
            "title": "GitHub Issue"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:34.338137Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:48:53.414157Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:03:33.996696Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:34.338137Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:48:53.414157Z"
          }
        ],
        "description": "## Overview\n[qs](https://www.npmjs.com/package/qs) is a querystring parser that supports nesting and arrays, with a depth limit.\n\nAffected versions of this package are vulnerable to Prototype Override Protection Bypass. By default `qs` protects against attacks that attempt to overwrite an object's existing prototype properties, such as `toString()`, `hasOwnProperty()`,etc.\r\n\r\nFrom [`qs` documentation](https://github.com/ljharb/qs):\r\n> By default parameters that would overwrite properties on the object prototype are ignored, if you wish to keep the data from those fields either use plainObjects as mentioned above, or set allowPrototypes to true which will allow user input to overwrite those properties. WARNING It is generally a bad idea to enable this option as it can cause problems when attempting to use the properties that have been overwritten. Always be careful with this option.\r\n\r\nOverwriting these properties can impact application logic, potentially allowing attackers to work around security controls, modify data, make the application unstable and more.\r\n\r\nIn versions of the package affected by this vulnerability, it is possible to circumvent this protection and overwrite prototype properties and functions by prefixing the name of the parameter with `[` or `]`. e.g. `qs.parse(\"]=toString\")` will return `{toString = true}`, as a result, calling `toString()` on the object will throw an exception.\r\n\r\n**Example:**\r\n```js\r\nqs.parse('toString=foo', { allowPrototypes: false })\r\n// {}\r\n\r\nqs.parse(\"]=toString\", { allowPrototypes: false })\r\n// {toString = true} <== prototype overwritten\r\n```\r\n\r\nFor more information, you can check out our [blog](https://snyk.io/blog/high-severity-vulnerability-qs/).\r\n\r\n## Disclosure Timeline\r\n- February 13th, 2017 - Reported the issue to package owner.\r\n- February 13th, 2017 - Issue acknowledged by package owner.\r\n- February 16th, 2017 - Partial fix released in versions `6.0.3`, `6.1.1`, `6.2.2`, `6.3.1`.\r\n- March 6th, 2017     - Final fix released in versions `6.4.0`,`6.3.2`, `6.2.3`, `6.1.2` and `6.0.4`\n## Remediation\nUpgrade `qs` to version 6.0.4, 6.1.2, 6.2.3, 6.3.2 or higher.\n## References\n- [GitHub Commit](https://github.com/ljharb/qs/commit/beade029171b8cef9cee0d03ebe577e2dd84976d)\n- [GitHub Issue](https://github.com/ljharb/qs/issues/200)\n",
        "epssDetails": {
          "percentile": "0.48830",
          "probability": "0.00126",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-1000048"
          ],
          "CWE": [
            "CWE-20"
          ],
          "GHSA": [
            "GHSA-gqgv-6jq5-jjj9"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-QS-10407",
            "SNYK-JS-QS-10407",
            "npm:qs:20170213"
          ]
        },
        "packageName": "qs",
        "proprietary": true,
        "creationTime": "2017-02-14T11:44:54.163000Z",
        "functions_new": [
          {
            "version": [
              ">=6.2.0 <6.2.3",
              "6.3.0"
            ],
            "functionId": {
              "filePath": "lib/parse.js",
              "functionName": "parseObject"
            }
          },
          {
            "version": [
              ">=6.3.1 <6.3.2"
            ],
            "functionId": {
              "filePath": "lib/parse.js",
              "functionName": "parseObjectRecursive"
            }
          },
          {
            "version": [
              "<6.0.4"
            ],
            "functionId": {
              "filePath": "lib/parse.js",
              "functionName": "internals.parseObject"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-QS-10407"
        ],
        "disclosureTime": "2017-02-13T00:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-03-01T10:00:54Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:48:53.414157Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "tiny-lr-fork@0.0.5",
          "qs@0.5.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "qs",
        "version": "0.5.6"
      },
      {
        "id": "SNYK-JS-SEMVER-3247795",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Alessio Della Libera - Snyk Research Team"
        ],
        "semver": {
          "vulnerable": [
            "<5.7.2",
            ">=6.0.0 <6.3.1",
            ">=7.0.0 <7.5.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.7.2",
          "6.3.1",
          "7.5.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/pull/564",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:32.773457Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
        "epssDetails": {
          "percentile": "0.68629",
          "probability": "0.00270",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-25883"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "semver",
        "proprietary": true,
        "creationTime": "2023-01-25T16:16:50.073158Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-01-25T16:00:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-06-20T15:39:58.313421Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.668389Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "npm:semver:20150403",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Adam Baldwin"
        ],
        "semver": {
          "vulnerable": [
            "<4.3.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "4.3.2"
        ],
        "patches": [
          {
            "id": "patch:npm:semver:20150403:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "version": "<4.3.2 >= 2.0.2",
            "comments": [
              "https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "modificationTime": "2019-12-03T11:40:45.754335Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/npm/releases/tag/v2.7.5",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 4.3,
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:00:19.582987Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The semver module uses regular expressions when parsing a version string. For a carefully crafted input, the time it takes to process these regular expressions is not linear to the length of the input. Since the semver module did not enforce a limit on the version string length, an attacker could provide a long string that would take up a large amount of resources, potentially taking a server down. This issue therefore enables a potential Denial of Service attack.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 4.3.2 or higher.\n## References\n- [GitHub Release](https://github.com/npm/npm/releases/tag/v2.7.5)\n",
        "epssDetails": {
          "percentile": "0.64704",
          "probability": "0.00242",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-8855"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "31"
          ],
          "GHSA": [
            "GHSA-x6fg-f45m-jf5q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SEMVER-10038",
            "SNYK-JS-SEMVER-10038",
            "npm:semver:20150403"
          ]
        },
        "packageName": "semver",
        "proprietary": false,
        "creationTime": "2015-04-03T16:00:00Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-SEMVER-10038"
        ],
        "disclosureTime": "2015-04-03T16:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2015-04-03T16:00:00Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.386275Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "SNYK-JS-SEMVER-3247795",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Alessio Della Libera - Snyk Research Team"
        ],
        "semver": {
          "vulnerable": [
            "<5.7.2",
            ">=6.0.0 <6.3.1",
            ">=7.0.0 <7.5.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.7.2",
          "6.3.1",
          "7.5.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/pull/564",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:32.773457Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
        "epssDetails": {
          "percentile": "0.68629",
          "probability": "0.00270",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-25883"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "semver",
        "proprietary": true,
        "creationTime": "2023-01-25T16:16:50.073158Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-01-25T16:00:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-06-20T15:39:58.313421Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.668389Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-flatten@1.0.1",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "npm:semver:20150403",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Adam Baldwin"
        ],
        "semver": {
          "vulnerable": [
            "<4.3.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "4.3.2"
        ],
        "patches": [
          {
            "id": "patch:npm:semver:20150403:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "version": "<4.3.2 >= 2.0.2",
            "comments": [
              "https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "modificationTime": "2019-12-03T11:40:45.754335Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/npm/releases/tag/v2.7.5",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 4.3,
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:00:19.582987Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The semver module uses regular expressions when parsing a version string. For a carefully crafted input, the time it takes to process these regular expressions is not linear to the length of the input. Since the semver module did not enforce a limit on the version string length, an attacker could provide a long string that would take up a large amount of resources, potentially taking a server down. This issue therefore enables a potential Denial of Service attack.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 4.3.2 or higher.\n## References\n- [GitHub Release](https://github.com/npm/npm/releases/tag/v2.7.5)\n",
        "epssDetails": {
          "percentile": "0.64704",
          "probability": "0.00242",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-8855"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "31"
          ],
          "GHSA": [
            "GHSA-x6fg-f45m-jf5q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SEMVER-10038",
            "SNYK-JS-SEMVER-10038",
            "npm:semver:20150403"
          ]
        },
        "packageName": "semver",
        "proprietary": false,
        "creationTime": "2015-04-03T16:00:00Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-SEMVER-10038"
        ],
        "disclosureTime": "2015-04-03T16:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2015-04-03T16:00:00Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.386275Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-flatten@1.0.1",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "SNYK-JS-SEMVER-3247795",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Alessio Della Libera - Snyk Research Team"
        ],
        "semver": {
          "vulnerable": [
            "<5.7.2",
            ">=6.0.0 <6.3.1",
            ">=7.0.0 <7.5.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.7.2",
          "6.3.1",
          "7.5.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/pull/564",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:32.773457Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
        "epssDetails": {
          "percentile": "0.68629",
          "probability": "0.00270",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-25883"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "semver",
        "proprietary": true,
        "creationTime": "2023-01-25T16:16:50.073158Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-01-25T16:00:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-06-20T15:39:58.313421Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.668389Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-remotes@1.2.0",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "npm:semver:20150403",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Adam Baldwin"
        ],
        "semver": {
          "vulnerable": [
            "<4.3.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "4.3.2"
        ],
        "patches": [
          {
            "id": "patch:npm:semver:20150403:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "version": "<4.3.2 >= 2.0.2",
            "comments": [
              "https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "modificationTime": "2019-12-03T11:40:45.754335Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/npm/releases/tag/v2.7.5",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 4.3,
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:00:19.582987Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The semver module uses regular expressions when parsing a version string. For a carefully crafted input, the time it takes to process these regular expressions is not linear to the length of the input. Since the semver module did not enforce a limit on the version string length, an attacker could provide a long string that would take up a large amount of resources, potentially taking a server down. This issue therefore enables a potential Denial of Service attack.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 4.3.2 or higher.\n## References\n- [GitHub Release](https://github.com/npm/npm/releases/tag/v2.7.5)\n",
        "epssDetails": {
          "percentile": "0.64704",
          "probability": "0.00242",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-8855"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "31"
          ],
          "GHSA": [
            "GHSA-x6fg-f45m-jf5q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SEMVER-10038",
            "SNYK-JS-SEMVER-10038",
            "npm:semver:20150403"
          ]
        },
        "packageName": "semver",
        "proprietary": false,
        "creationTime": "2015-04-03T16:00:00Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-SEMVER-10038"
        ],
        "disclosureTime": "2015-04-03T16:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2015-04-03T16:00:00Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.386275Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-remotes@1.2.0",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "SNYK-JS-SEMVER-3247795",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Alessio Della Libera - Snyk Research Team"
        ],
        "semver": {
          "vulnerable": [
            "<5.7.2",
            ">=6.0.0 <6.3.1",
            ">=7.0.0 <7.5.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.7.2",
          "6.3.1",
          "7.5.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/pull/564",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:32.773457Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
        "epssDetails": {
          "percentile": "0.68629",
          "probability": "0.00270",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-25883"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "semver",
        "proprietary": true,
        "creationTime": "2023-01-25T16:16:50.073158Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-01-25T16:00:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-06-20T15:39:58.313421Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.668389Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "npm:semver:20150403",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Adam Baldwin"
        ],
        "semver": {
          "vulnerable": [
            "<4.3.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "4.3.2"
        ],
        "patches": [
          {
            "id": "patch:npm:semver:20150403:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "version": "<4.3.2 >= 2.0.2",
            "comments": [
              "https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "modificationTime": "2019-12-03T11:40:45.754335Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/npm/releases/tag/v2.7.5",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 4.3,
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:00:19.582987Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The semver module uses regular expressions when parsing a version string. For a carefully crafted input, the time it takes to process these regular expressions is not linear to the length of the input. Since the semver module did not enforce a limit on the version string length, an attacker could provide a long string that would take up a large amount of resources, potentially taking a server down. This issue therefore enables a potential Denial of Service attack.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 4.3.2 or higher.\n## References\n- [GitHub Release](https://github.com/npm/npm/releases/tag/v2.7.5)\n",
        "epssDetails": {
          "percentile": "0.64704",
          "probability": "0.00242",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-8855"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "31"
          ],
          "GHSA": [
            "GHSA-x6fg-f45m-jf5q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SEMVER-10038",
            "SNYK-JS-SEMVER-10038",
            "npm:semver:20150403"
          ]
        },
        "packageName": "semver",
        "proprietary": false,
        "creationTime": "2015-04-03T16:00:00Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-SEMVER-10038"
        ],
        "disclosureTime": "2015-04-03T16:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2015-04-03T16:00:00Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.386275Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "SNYK-JS-SEMVER-3247795",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Alessio Della Libera - Snyk Research Team"
        ],
        "semver": {
          "vulnerable": [
            "<5.7.2",
            ">=6.0.0 <6.3.1",
            ">=7.0.0 <7.5.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.7.2",
          "6.3.1",
          "7.5.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/pull/564",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:32.773457Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
        "epssDetails": {
          "percentile": "0.68629",
          "probability": "0.00270",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-25883"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "semver",
        "proprietary": true,
        "creationTime": "2023-01-25T16:16:50.073158Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-01-25T16:00:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-06-20T15:39:58.313421Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.668389Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "npm:semver:20150403",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Adam Baldwin"
        ],
        "semver": {
          "vulnerable": [
            "<4.3.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "4.3.2"
        ],
        "patches": [
          {
            "id": "patch:npm:semver:20150403:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "version": "<4.3.2 >= 2.0.2",
            "comments": [
              "https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "modificationTime": "2019-12-03T11:40:45.754335Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/npm/releases/tag/v2.7.5",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 4.3,
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:00:19.582987Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The semver module uses regular expressions when parsing a version string. For a carefully crafted input, the time it takes to process these regular expressions is not linear to the length of the input. Since the semver module did not enforce a limit on the version string length, an attacker could provide a long string that would take up a large amount of resources, potentially taking a server down. This issue therefore enables a potential Denial of Service attack.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 4.3.2 or higher.\n## References\n- [GitHub Release](https://github.com/npm/npm/releases/tag/v2.7.5)\n",
        "epssDetails": {
          "percentile": "0.64704",
          "probability": "0.00242",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-8855"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "31"
          ],
          "GHSA": [
            "GHSA-x6fg-f45m-jf5q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SEMVER-10038",
            "SNYK-JS-SEMVER-10038",
            "npm:semver:20150403"
          ]
        },
        "packageName": "semver",
        "proprietary": false,
        "creationTime": "2015-04-03T16:00:00Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-SEMVER-10038"
        ],
        "disclosureTime": "2015-04-03T16:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2015-04-03T16:00:00Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.386275Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "SNYK-JS-SEMVER-3247795",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Alessio Della Libera - Snyk Research Team"
        ],
        "semver": {
          "vulnerable": [
            "<5.7.2",
            ">=6.0.0 <6.3.1",
            ">=7.0.0 <7.5.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.7.2",
          "6.3.1",
          "7.5.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/pull/564",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:32.773457Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
        "epssDetails": {
          "percentile": "0.68629",
          "probability": "0.00270",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-25883"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "semver",
        "proprietary": true,
        "creationTime": "2023-01-25T16:16:50.073158Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-01-25T16:00:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-06-20T15:39:58.313421Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.668389Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "npm:semver:20150403",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Adam Baldwin"
        ],
        "semver": {
          "vulnerable": [
            "<4.3.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "4.3.2"
        ],
        "patches": [
          {
            "id": "patch:npm:semver:20150403:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "version": "<4.3.2 >= 2.0.2",
            "comments": [
              "https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "modificationTime": "2019-12-03T11:40:45.754335Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/npm/releases/tag/v2.7.5",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 4.3,
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:00:19.582987Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The semver module uses regular expressions when parsing a version string. For a carefully crafted input, the time it takes to process these regular expressions is not linear to the length of the input. Since the semver module did not enforce a limit on the version string length, an attacker could provide a long string that would take up a large amount of resources, potentially taking a server down. This issue therefore enables a potential Denial of Service attack.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 4.3.2 or higher.\n## References\n- [GitHub Release](https://github.com/npm/npm/releases/tag/v2.7.5)\n",
        "epssDetails": {
          "percentile": "0.64704",
          "probability": "0.00242",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-8855"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "31"
          ],
          "GHSA": [
            "GHSA-x6fg-f45m-jf5q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SEMVER-10038",
            "SNYK-JS-SEMVER-10038",
            "npm:semver:20150403"
          ]
        },
        "packageName": "semver",
        "proprietary": false,
        "creationTime": "2015-04-03T16:00:00Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-SEMVER-10038"
        ],
        "disclosureTime": "2015-04-03T16:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2015-04-03T16:00:00Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.386275Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "SNYK-JS-SEMVER-3247795",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Alessio Della Libera - Snyk Research Team"
        ],
        "semver": {
          "vulnerable": [
            "<5.7.2",
            ">=6.0.0 <6.3.1",
            ">=7.0.0 <7.5.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.7.2",
          "6.3.1",
          "7.5.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/pull/564",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:32.773457Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
        "epssDetails": {
          "percentile": "0.68629",
          "probability": "0.00270",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-25883"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "semver",
        "proprietary": true,
        "creationTime": "2023-01-25T16:16:50.073158Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-01-25T16:00:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-06-20T15:39:58.313421Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.668389Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "npm:semver:20150403",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Adam Baldwin"
        ],
        "semver": {
          "vulnerable": [
            "<4.3.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "4.3.2"
        ],
        "patches": [
          {
            "id": "patch:npm:semver:20150403:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "version": "<4.3.2 >= 2.0.2",
            "comments": [
              "https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "modificationTime": "2019-12-03T11:40:45.754335Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/npm/releases/tag/v2.7.5",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 4.3,
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:00:19.582987Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The semver module uses regular expressions when parsing a version string. For a carefully crafted input, the time it takes to process these regular expressions is not linear to the length of the input. Since the semver module did not enforce a limit on the version string length, an attacker could provide a long string that would take up a large amount of resources, potentially taking a server down. This issue therefore enables a potential Denial of Service attack.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 4.3.2 or higher.\n## References\n- [GitHub Release](https://github.com/npm/npm/releases/tag/v2.7.5)\n",
        "epssDetails": {
          "percentile": "0.64704",
          "probability": "0.00242",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-8855"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "31"
          ],
          "GHSA": [
            "GHSA-x6fg-f45m-jf5q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SEMVER-10038",
            "SNYK-JS-SEMVER-10038",
            "npm:semver:20150403"
          ]
        },
        "packageName": "semver",
        "proprietary": false,
        "creationTime": "2015-04-03T16:00:00Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-SEMVER-10038"
        ],
        "disclosureTime": "2015-04-03T16:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2015-04-03T16:00:00Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.386275Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "SNYK-JS-SEMVER-3247795",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Alessio Della Libera - Snyk Research Team"
        ],
        "semver": {
          "vulnerable": [
            "<5.7.2",
            ">=6.0.0 <6.3.1",
            ">=7.0.0 <7.5.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.7.2",
          "6.3.1",
          "7.5.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/pull/564",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:32.773457Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
        "epssDetails": {
          "percentile": "0.68629",
          "probability": "0.00270",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-25883"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "semver",
        "proprietary": true,
        "creationTime": "2023-01-25T16:16:50.073158Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-01-25T16:00:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-06-20T15:39:58.313421Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.668389Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-flatten@1.0.1",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "npm:semver:20150403",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Adam Baldwin"
        ],
        "semver": {
          "vulnerable": [
            "<4.3.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "4.3.2"
        ],
        "patches": [
          {
            "id": "patch:npm:semver:20150403:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "version": "<4.3.2 >= 2.0.2",
            "comments": [
              "https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "modificationTime": "2019-12-03T11:40:45.754335Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/npm/releases/tag/v2.7.5",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 4.3,
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:00:19.582987Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The semver module uses regular expressions when parsing a version string. For a carefully crafted input, the time it takes to process these regular expressions is not linear to the length of the input. Since the semver module did not enforce a limit on the version string length, an attacker could provide a long string that would take up a large amount of resources, potentially taking a server down. This issue therefore enables a potential Denial of Service attack.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 4.3.2 or higher.\n## References\n- [GitHub Release](https://github.com/npm/npm/releases/tag/v2.7.5)\n",
        "epssDetails": {
          "percentile": "0.64704",
          "probability": "0.00242",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-8855"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "31"
          ],
          "GHSA": [
            "GHSA-x6fg-f45m-jf5q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SEMVER-10038",
            "SNYK-JS-SEMVER-10038",
            "npm:semver:20150403"
          ]
        },
        "packageName": "semver",
        "proprietary": false,
        "creationTime": "2015-04-03T16:00:00Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-SEMVER-10038"
        ],
        "disclosureTime": "2015-04-03T16:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2015-04-03T16:00:00Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.386275Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-flatten@1.0.1",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "SNYK-JS-SEMVER-3247795",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Alessio Della Libera - Snyk Research Team"
        ],
        "semver": {
          "vulnerable": [
            "<5.7.2",
            ">=6.0.0 <6.3.1",
            ">=7.0.0 <7.5.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.7.2",
          "6.3.1",
          "7.5.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/pull/564",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:32.773457Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
        "epssDetails": {
          "percentile": "0.68629",
          "probability": "0.00270",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-25883"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "semver",
        "proprietary": true,
        "creationTime": "2023-01-25T16:16:50.073158Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-01-25T16:00:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-06-20T15:39:58.313421Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.668389Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-flatten@1.0.1",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "npm:semver:20150403",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Adam Baldwin"
        ],
        "semver": {
          "vulnerable": [
            "<4.3.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "4.3.2"
        ],
        "patches": [
          {
            "id": "patch:npm:semver:20150403:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "version": "<4.3.2 >= 2.0.2",
            "comments": [
              "https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "modificationTime": "2019-12-03T11:40:45.754335Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/npm/releases/tag/v2.7.5",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 4.3,
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:00:19.582987Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The semver module uses regular expressions when parsing a version string. For a carefully crafted input, the time it takes to process these regular expressions is not linear to the length of the input. Since the semver module did not enforce a limit on the version string length, an attacker could provide a long string that would take up a large amount of resources, potentially taking a server down. This issue therefore enables a potential Denial of Service attack.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 4.3.2 or higher.\n## References\n- [GitHub Release](https://github.com/npm/npm/releases/tag/v2.7.5)\n",
        "epssDetails": {
          "percentile": "0.64704",
          "probability": "0.00242",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-8855"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "31"
          ],
          "GHSA": [
            "GHSA-x6fg-f45m-jf5q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SEMVER-10038",
            "SNYK-JS-SEMVER-10038",
            "npm:semver:20150403"
          ]
        },
        "packageName": "semver",
        "proprietary": false,
        "creationTime": "2015-04-03T16:00:00Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-SEMVER-10038"
        ],
        "disclosureTime": "2015-04-03T16:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2015-04-03T16:00:00Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.386275Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-flatten@1.0.1",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "SNYK-JS-SEMVER-3247795",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Alessio Della Libera - Snyk Research Team"
        ],
        "semver": {
          "vulnerable": [
            "<5.7.2",
            ">=6.0.0 <6.3.1",
            ">=7.0.0 <7.5.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.7.2",
          "6.3.1",
          "7.5.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/pull/564",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:32.773457Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
        "epssDetails": {
          "percentile": "0.68629",
          "probability": "0.00270",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-25883"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "semver",
        "proprietary": true,
        "creationTime": "2023-01-25T16:16:50.073158Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-01-25T16:00:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-06-20T15:39:58.313421Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.668389Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-flatten@1.0.1",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "npm:semver:20150403",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Adam Baldwin"
        ],
        "semver": {
          "vulnerable": [
            "<4.3.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "4.3.2"
        ],
        "patches": [
          {
            "id": "patch:npm:semver:20150403:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "version": "<4.3.2 >= 2.0.2",
            "comments": [
              "https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "modificationTime": "2019-12-03T11:40:45.754335Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/npm/releases/tag/v2.7.5",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 4.3,
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:00:19.582987Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The semver module uses regular expressions when parsing a version string. For a carefully crafted input, the time it takes to process these regular expressions is not linear to the length of the input. Since the semver module did not enforce a limit on the version string length, an attacker could provide a long string that would take up a large amount of resources, potentially taking a server down. This issue therefore enables a potential Denial of Service attack.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 4.3.2 or higher.\n## References\n- [GitHub Release](https://github.com/npm/npm/releases/tag/v2.7.5)\n",
        "epssDetails": {
          "percentile": "0.64704",
          "probability": "0.00242",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-8855"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "31"
          ],
          "GHSA": [
            "GHSA-x6fg-f45m-jf5q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SEMVER-10038",
            "SNYK-JS-SEMVER-10038",
            "npm:semver:20150403"
          ]
        },
        "packageName": "semver",
        "proprietary": false,
        "creationTime": "2015-04-03T16:00:00Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-SEMVER-10038"
        ],
        "disclosureTime": "2015-04-03T16:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2015-04-03T16:00:00Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.386275Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-flatten@1.0.1",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "SNYK-JS-SEMVER-3247795",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Alessio Della Libera - Snyk Research Team"
        ],
        "semver": {
          "vulnerable": [
            "<5.7.2",
            ">=6.0.0 <6.3.1",
            ">=7.0.0 <7.5.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.7.2",
          "6.3.1",
          "7.5.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/pull/564",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:32.773457Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
        "epssDetails": {
          "percentile": "0.68629",
          "probability": "0.00270",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-25883"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "semver",
        "proprietary": true,
        "creationTime": "2023-01-25T16:16:50.073158Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-01-25T16:00:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-06-20T15:39:58.313421Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.668389Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-flatten@1.0.1",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "npm:semver:20150403",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Adam Baldwin"
        ],
        "semver": {
          "vulnerable": [
            "<4.3.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "4.3.2"
        ],
        "patches": [
          {
            "id": "patch:npm:semver:20150403:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "version": "<4.3.2 >= 2.0.2",
            "comments": [
              "https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "modificationTime": "2019-12-03T11:40:45.754335Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/npm/releases/tag/v2.7.5",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 4.3,
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:00:19.582987Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The semver module uses regular expressions when parsing a version string. For a carefully crafted input, the time it takes to process these regular expressions is not linear to the length of the input. Since the semver module did not enforce a limit on the version string length, an attacker could provide a long string that would take up a large amount of resources, potentially taking a server down. This issue therefore enables a potential Denial of Service attack.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 4.3.2 or higher.\n## References\n- [GitHub Release](https://github.com/npm/npm/releases/tag/v2.7.5)\n",
        "epssDetails": {
          "percentile": "0.64704",
          "probability": "0.00242",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-8855"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "31"
          ],
          "GHSA": [
            "GHSA-x6fg-f45m-jf5q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SEMVER-10038",
            "SNYK-JS-SEMVER-10038",
            "npm:semver:20150403"
          ]
        },
        "packageName": "semver",
        "proprietary": false,
        "creationTime": "2015-04-03T16:00:00Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-SEMVER-10038"
        ],
        "disclosureTime": "2015-04-03T16:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2015-04-03T16:00:00Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.386275Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-flatten@1.0.1",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "SNYK-JS-SEMVER-3247795",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Alessio Della Libera - Snyk Research Team"
        ],
        "semver": {
          "vulnerable": [
            "<5.7.2",
            ">=6.0.0 <6.3.1",
            ">=7.0.0 <7.5.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.7.2",
          "6.3.1",
          "7.5.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/pull/564",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:32.773457Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
        "epssDetails": {
          "percentile": "0.68629",
          "probability": "0.00270",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-25883"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "semver",
        "proprietary": true,
        "creationTime": "2023-01-25T16:16:50.073158Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-01-25T16:00:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-06-20T15:39:58.313421Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.668389Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-remotes@1.2.0",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "npm:semver:20150403",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Adam Baldwin"
        ],
        "semver": {
          "vulnerable": [
            "<4.3.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "4.3.2"
        ],
        "patches": [
          {
            "id": "patch:npm:semver:20150403:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "version": "<4.3.2 >= 2.0.2",
            "comments": [
              "https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "modificationTime": "2019-12-03T11:40:45.754335Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/npm/releases/tag/v2.7.5",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 4.3,
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:00:19.582987Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The semver module uses regular expressions when parsing a version string. For a carefully crafted input, the time it takes to process these regular expressions is not linear to the length of the input. Since the semver module did not enforce a limit on the version string length, an attacker could provide a long string that would take up a large amount of resources, potentially taking a server down. This issue therefore enables a potential Denial of Service attack.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 4.3.2 or higher.\n## References\n- [GitHub Release](https://github.com/npm/npm/releases/tag/v2.7.5)\n",
        "epssDetails": {
          "percentile": "0.64704",
          "probability": "0.00242",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-8855"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "31"
          ],
          "GHSA": [
            "GHSA-x6fg-f45m-jf5q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SEMVER-10038",
            "SNYK-JS-SEMVER-10038",
            "npm:semver:20150403"
          ]
        },
        "packageName": "semver",
        "proprietary": false,
        "creationTime": "2015-04-03T16:00:00Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-SEMVER-10038"
        ],
        "disclosureTime": "2015-04-03T16:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2015-04-03T16:00:00Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.386275Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-remotes@1.2.0",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "SNYK-JS-SEMVER-3247795",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Alessio Della Libera - Snyk Research Team"
        ],
        "semver": {
          "vulnerable": [
            "<5.7.2",
            ">=6.0.0 <6.3.1",
            ">=7.0.0 <7.5.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.7.2",
          "6.3.1",
          "7.5.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/pull/564",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:32.773457Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
        "epssDetails": {
          "percentile": "0.68629",
          "probability": "0.00270",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-25883"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "semver",
        "proprietary": true,
        "creationTime": "2023-01-25T16:16:50.073158Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-01-25T16:00:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-06-20T15:39:58.313421Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.668389Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-remotes@1.2.0",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "npm:semver:20150403",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Adam Baldwin"
        ],
        "semver": {
          "vulnerable": [
            "<4.3.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "4.3.2"
        ],
        "patches": [
          {
            "id": "patch:npm:semver:20150403:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "version": "<4.3.2 >= 2.0.2",
            "comments": [
              "https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "modificationTime": "2019-12-03T11:40:45.754335Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/npm/releases/tag/v2.7.5",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 4.3,
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:00:19.582987Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The semver module uses regular expressions when parsing a version string. For a carefully crafted input, the time it takes to process these regular expressions is not linear to the length of the input. Since the semver module did not enforce a limit on the version string length, an attacker could provide a long string that would take up a large amount of resources, potentially taking a server down. This issue therefore enables a potential Denial of Service attack.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 4.3.2 or higher.\n## References\n- [GitHub Release](https://github.com/npm/npm/releases/tag/v2.7.5)\n",
        "epssDetails": {
          "percentile": "0.64704",
          "probability": "0.00242",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-8855"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "31"
          ],
          "GHSA": [
            "GHSA-x6fg-f45m-jf5q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SEMVER-10038",
            "SNYK-JS-SEMVER-10038",
            "npm:semver:20150403"
          ]
        },
        "packageName": "semver",
        "proprietary": false,
        "creationTime": "2015-04-03T16:00:00Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-SEMVER-10038"
        ],
        "disclosureTime": "2015-04-03T16:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2015-04-03T16:00:00Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.386275Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-remotes@1.2.0",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "SNYK-JS-SEMVER-3247795",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Alessio Della Libera - Snyk Research Team"
        ],
        "semver": {
          "vulnerable": [
            "<5.7.2",
            ">=6.0.0 <6.3.1",
            ">=7.0.0 <7.5.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.7.2",
          "6.3.1",
          "7.5.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/pull/564",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:32.773457Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
        "epssDetails": {
          "percentile": "0.68629",
          "probability": "0.00270",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-25883"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "semver",
        "proprietary": true,
        "creationTime": "2023-01-25T16:16:50.073158Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-01-25T16:00:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-06-20T15:39:58.313421Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.668389Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-remotes@1.2.0",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "npm:semver:20150403",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Adam Baldwin"
        ],
        "semver": {
          "vulnerable": [
            "<4.3.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "4.3.2"
        ],
        "patches": [
          {
            "id": "patch:npm:semver:20150403:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "version": "<4.3.2 >= 2.0.2",
            "comments": [
              "https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "modificationTime": "2019-12-03T11:40:45.754335Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/npm/releases/tag/v2.7.5",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 4.3,
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:00:19.582987Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The semver module uses regular expressions when parsing a version string. For a carefully crafted input, the time it takes to process these regular expressions is not linear to the length of the input. Since the semver module did not enforce a limit on the version string length, an attacker could provide a long string that would take up a large amount of resources, potentially taking a server down. This issue therefore enables a potential Denial of Service attack.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 4.3.2 or higher.\n## References\n- [GitHub Release](https://github.com/npm/npm/releases/tag/v2.7.5)\n",
        "epssDetails": {
          "percentile": "0.64704",
          "probability": "0.00242",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-8855"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "31"
          ],
          "GHSA": [
            "GHSA-x6fg-f45m-jf5q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SEMVER-10038",
            "SNYK-JS-SEMVER-10038",
            "npm:semver:20150403"
          ]
        },
        "packageName": "semver",
        "proprietary": false,
        "creationTime": "2015-04-03T16:00:00Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-SEMVER-10038"
        ],
        "disclosureTime": "2015-04-03T16:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2015-04-03T16:00:00Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.386275Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-remotes@1.2.0",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "SNYK-JS-SEMVER-3247795",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Alessio Della Libera - Snyk Research Team"
        ],
        "semver": {
          "vulnerable": [
            "<5.7.2",
            ">=6.0.0 <6.3.1",
            ">=7.0.0 <7.5.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.7.2",
          "6.3.1",
          "7.5.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/pull/564",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:32.773457Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
        "epssDetails": {
          "percentile": "0.68629",
          "probability": "0.00270",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-25883"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "semver",
        "proprietary": true,
        "creationTime": "2023-01-25T16:16:50.073158Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-01-25T16:00:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-06-20T15:39:58.313421Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.668389Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-remotes@1.2.0",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "npm:semver:20150403",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Adam Baldwin"
        ],
        "semver": {
          "vulnerable": [
            "<4.3.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "4.3.2"
        ],
        "patches": [
          {
            "id": "patch:npm:semver:20150403:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "version": "<4.3.2 >= 2.0.2",
            "comments": [
              "https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "modificationTime": "2019-12-03T11:40:45.754335Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/npm/releases/tag/v2.7.5",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 4.3,
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:00:19.582987Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The semver module uses regular expressions when parsing a version string. For a carefully crafted input, the time it takes to process these regular expressions is not linear to the length of the input. Since the semver module did not enforce a limit on the version string length, an attacker could provide a long string that would take up a large amount of resources, potentially taking a server down. This issue therefore enables a potential Denial of Service attack.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 4.3.2 or higher.\n## References\n- [GitHub Release](https://github.com/npm/npm/releases/tag/v2.7.5)\n",
        "epssDetails": {
          "percentile": "0.64704",
          "probability": "0.00242",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-8855"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "31"
          ],
          "GHSA": [
            "GHSA-x6fg-f45m-jf5q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SEMVER-10038",
            "SNYK-JS-SEMVER-10038",
            "npm:semver:20150403"
          ]
        },
        "packageName": "semver",
        "proprietary": false,
        "creationTime": "2015-04-03T16:00:00Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-SEMVER-10038"
        ],
        "disclosureTime": "2015-04-03T16:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2015-04-03T16:00:00Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.386275Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-remotes@1.2.0",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "SNYK-JS-SEMVER-3247795",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Alessio Della Libera - Snyk Research Team"
        ],
        "semver": {
          "vulnerable": [
            "<5.7.2",
            ">=6.0.0 <6.3.1",
            ">=7.0.0 <7.5.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.7.2",
          "6.3.1",
          "7.5.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/pull/564",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:32.773457Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
        "epssDetails": {
          "percentile": "0.68629",
          "probability": "0.00270",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-25883"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "semver",
        "proprietary": true,
        "creationTime": "2023-01-25T16:16:50.073158Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-01-25T16:00:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-06-20T15:39:58.313421Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.668389Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "npm:semver:20150403",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Adam Baldwin"
        ],
        "semver": {
          "vulnerable": [
            "<4.3.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "4.3.2"
        ],
        "patches": [
          {
            "id": "patch:npm:semver:20150403:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "version": "<4.3.2 >= 2.0.2",
            "comments": [
              "https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "modificationTime": "2019-12-03T11:40:45.754335Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/npm/releases/tag/v2.7.5",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 4.3,
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:00:19.582987Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The semver module uses regular expressions when parsing a version string. For a carefully crafted input, the time it takes to process these regular expressions is not linear to the length of the input. Since the semver module did not enforce a limit on the version string length, an attacker could provide a long string that would take up a large amount of resources, potentially taking a server down. This issue therefore enables a potential Denial of Service attack.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 4.3.2 or higher.\n## References\n- [GitHub Release](https://github.com/npm/npm/releases/tag/v2.7.5)\n",
        "epssDetails": {
          "percentile": "0.64704",
          "probability": "0.00242",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-8855"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "31"
          ],
          "GHSA": [
            "GHSA-x6fg-f45m-jf5q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SEMVER-10038",
            "SNYK-JS-SEMVER-10038",
            "npm:semver:20150403"
          ]
        },
        "packageName": "semver",
        "proprietary": false,
        "creationTime": "2015-04-03T16:00:00Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-SEMVER-10038"
        ],
        "disclosureTime": "2015-04-03T16:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2015-04-03T16:00:00Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.386275Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "SNYK-JS-SEMVER-3247795",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Alessio Della Libera - Snyk Research Team"
        ],
        "semver": {
          "vulnerable": [
            "<5.7.2",
            ">=6.0.0 <6.3.1",
            ">=7.0.0 <7.5.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.7.2",
          "6.3.1",
          "7.5.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/pull/564",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:32.773457Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
        "epssDetails": {
          "percentile": "0.68629",
          "probability": "0.00270",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-25883"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "semver",
        "proprietary": true,
        "creationTime": "2023-01-25T16:16:50.073158Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-01-25T16:00:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-06-20T15:39:58.313421Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.668389Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-build@1.2.2",
          "component-builder@1.2.1",
          "component-flatten@1.0.1",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "npm:semver:20150403",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Adam Baldwin"
        ],
        "semver": {
          "vulnerable": [
            "<4.3.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "4.3.2"
        ],
        "patches": [
          {
            "id": "patch:npm:semver:20150403:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "version": "<4.3.2 >= 2.0.2",
            "comments": [
              "https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "modificationTime": "2019-12-03T11:40:45.754335Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/npm/releases/tag/v2.7.5",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 4.3,
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:00:19.582987Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The semver module uses regular expressions when parsing a version string. For a carefully crafted input, the time it takes to process these regular expressions is not linear to the length of the input. Since the semver module did not enforce a limit on the version string length, an attacker could provide a long string that would take up a large amount of resources, potentially taking a server down. This issue therefore enables a potential Denial of Service attack.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 4.3.2 or higher.\n## References\n- [GitHub Release](https://github.com/npm/npm/releases/tag/v2.7.5)\n",
        "epssDetails": {
          "percentile": "0.64704",
          "probability": "0.00242",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-8855"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "31"
          ],
          "GHSA": [
            "GHSA-x6fg-f45m-jf5q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SEMVER-10038",
            "SNYK-JS-SEMVER-10038",
            "npm:semver:20150403"
          ]
        },
        "packageName": "semver",
        "proprietary": false,
        "creationTime": "2015-04-03T16:00:00Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-SEMVER-10038"
        ],
        "disclosureTime": "2015-04-03T16:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2015-04-03T16:00:00Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.386275Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-build@1.2.2",
          "component-builder@1.2.1",
          "component-flatten@1.0.1",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "SNYK-JS-SEMVER-3247795",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Alessio Della Libera - Snyk Research Team"
        ],
        "semver": {
          "vulnerable": [
            "<5.7.2",
            ">=6.0.0 <6.3.1",
            ">=7.0.0 <7.5.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.7.2",
          "6.3.1",
          "7.5.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/pull/564",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:32.773457Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.600372Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.668389Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
        "epssDetails": {
          "percentile": "0.68629",
          "probability": "0.00270",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-25883"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "semver",
        "proprietary": true,
        "creationTime": "2023-01-25T16:16:50.073158Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-01-25T16:00:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-06-20T15:39:58.313421Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.668389Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "component-remotes@1.2.0",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "npm:semver:20150403",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Adam Baldwin"
        ],
        "semver": {
          "vulnerable": [
            "<4.3.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "4.3.2"
        ],
        "patches": [
          {
            "id": "patch:npm:semver:20150403:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "version": "<4.3.2 >= 2.0.2",
            "comments": [
              "https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"
            ],
            "modificationTime": "2019-12-03T11:40:45.754335Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/npm/releases/tag/v2.7.5",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 4.3,
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:00:19.582987Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:37.195075Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:19.386275Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The semver module uses regular expressions when parsing a version string. For a carefully crafted input, the time it takes to process these regular expressions is not linear to the length of the input. Since the semver module did not enforce a limit on the version string length, an attacker could provide a long string that would take up a large amount of resources, potentially taking a server down. This issue therefore enables a potential Denial of Service attack.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 4.3.2 or higher.\n## References\n- [GitHub Release](https://github.com/npm/npm/releases/tag/v2.7.5)\n",
        "epssDetails": {
          "percentile": "0.64704",
          "probability": "0.00242",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-8855"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "31"
          ],
          "GHSA": [
            "GHSA-x6fg-f45m-jf5q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SEMVER-10038",
            "SNYK-JS-SEMVER-10038",
            "npm:semver:20150403"
          ]
        },
        "packageName": "semver",
        "proprietary": false,
        "creationTime": "2015-04-03T16:00:00Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-SEMVER-10038"
        ],
        "disclosureTime": "2015-04-03T16:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2015-04-03T16:00:00Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.386275Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "component-remotes@1.2.0",
          "semver@2.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "semver",
        "version": "2.3.2"
      },
      {
        "id": "SNYK-JS-TAR-1536528",
        "title": "Arbitrary File Overwrite",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
        "credit": [
          "ginkoid",
          "chen-robert"
        ],
        "semver": {
          "vulnerable": [
            "<3.2.3",
            ">=4.0.0 <4.4.15",
            ">=5.0.0 <5.0.7",
            ">=6.0.0 <6.1.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.2.3",
          "4.4.15",
          "5.0.7",
          "6.1.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "tar",
        "references": [
          {
            "url": "https://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2024-03-11T09:48:46.483638Z"
          },
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2024-03-11T09:49:33.954082Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2024-03-11T09:53:56.383420Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:05:15.329322Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:48:46.483638Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "assigner": "SUSE",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:33.954082Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:56.383420Z"
          }
        ],
        "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Arbitrary File Overwrite. This is due to insufficient symlink protection.\r\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks.  Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created.\r\n\r\nThis logic is insufficient when extracting tar files that contain both a directory and a symlink with the same name as the directory. This order of operations results in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to `mkdir` for that directory are skipped.\r\nHowever, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it is possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location.\n## Remediation\nUpgrade `tar` to version 3.2.3, 4.4.15, 5.0.7, 6.1.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20)\n",
        "epssDetails": {
          "percentile": "0.80721",
          "probability": "0.00689",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-32803"
          ],
          "CWE": [
            "CWE-22"
          ],
          "NSP": [
            "1771"
          ],
          "GHSA": [
            "GHSA-r628-mhmh-qjhw"
          ]
        },
        "packageName": "tar",
        "proprietary": false,
        "creationTime": "2021-08-04T06:32:44.747650Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-08-04T06:13:39Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-08-04T07:24:54.942553Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:56.383420Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "decompress@0.2.5",
          "tar@0.1.20"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "tar",
        "version": "0.1.20"
      },
      {
        "id": "SNYK-JS-TAR-1536531",
        "title": "Arbitrary File Overwrite",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
        "credit": [
          "ginkoid",
          "chen-robert"
        ],
        "semver": {
          "vulnerable": [
            "<3.2.2",
            ">=4.0.0 <4.4.14",
            ">=5.0.0 <5.0.6",
            ">=6.0.0 <6.1.1"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.2.2",
          "4.4.14",
          "5.0.6",
          "6.1.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "tar",
        "references": [
          {
            "url": "https://github.com/npm/node-tar/commit/1f036ca23f64a547bdd6c79c1a44bc62e8115da4",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2024-03-11T09:49:32.434806Z"
          },
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2024-03-11T09:51:19.297627Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2024-03-11T09:53:56.376638Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:02:25.215192Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "assigner": "SUSE",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:32.434806Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:19.297627Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:56.376638Z"
          }
        ],
        "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Arbitrary File Overwrite. This is due to insufficient absolute path sanitization.\r\n\r\n`node-tar` aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example, the path `/home/user/.bashrc` would turn into `home/user/.bashrc`.\r\n\r\nThis logic is insufficient when file paths contain repeated path roots such as `////home/user/.bashrc`. `node-tar` only strips a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) still resolves to an absolute path.\n## Remediation\nUpgrade `tar` to version 3.2.2, 4.4.14, 5.0.6, 6.1.1 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/1f036ca23f64a547bdd6c79c1a44bc62e8115da4)\n",
        "epssDetails": {
          "percentile": "0.80721",
          "probability": "0.00689",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-32804"
          ],
          "CWE": [
            "CWE-22"
          ],
          "NSP": [
            "1770"
          ],
          "GHSA": [
            "GHSA-3jfq-g458-7qm9"
          ]
        },
        "packageName": "tar",
        "proprietary": false,
        "creationTime": "2021-08-04T06:40:36.725155Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-08-04T06:33:52Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-08-04T07:24:55.599985Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:56.376638Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "decompress@0.2.5",
          "tar@0.1.20"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "tar",
        "version": "0.1.20"
      },
      {
        "id": "SNYK-JS-TAR-1536758",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:U/RL:O/RC:R",
        "credit": [
          "@isaacs"
        ],
        "semver": {
          "vulnerable": [
            ">=6.0.0 <6.1.4",
            ">=5.0.0 <5.0.8",
            "<4.4.16"
          ]
        },
        "exploit": "Unproven",
        "fixedIn": [
          "6.1.4",
          "5.0.8",
          "4.4.16"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "tar",
        "references": [
          {
            "url": "https://github.com/npm/node-tar/commit/06cbde5935aa7643f578f874de84a7da2a74fe3a",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-tar/commit/adf35115dbc6e7a479fe3c38f859baf6ffff7a7a",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-tar/commit/d3d5a4e4560f18131e64fc62f5a281b238ef2ecf",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:U/RL:O/RC:R",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:02:38.479287Z"
          }
        ],
        "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). When stripping the trailing slash from `files` arguments, the  `f.replace(/\\/+$/, '')` performance of this function can exponentially degrade when `f` contains many `/` characters resulting in ReDoS. \r\n\r\nThis vulnerability is not likely to be exploitable as it requires that the untrusted input is being passed into the `tar.extract()` or `tar.list()` array of entries to parse/extract, which would be unusual.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `tar` to version 6.1.4, 5.0.8, 4.4.16 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/06cbde5935aa7643f578f874de84a7da2a74fe3a)\n- [GitHub Commit](https://github.com/npm/node-tar/commit/adf35115dbc6e7a479fe3c38f859baf6ffff7a7a)\n- [GitHub Commit](https://github.com/npm/node-tar/commit/d3d5a4e4560f18131e64fc62f5a281b238ef2ecf)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-400"
          ]
        },
        "packageName": "tar",
        "proprietary": false,
        "creationTime": "2021-08-05T12:41:27.304655Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-08-05T12:38:55Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-08-05T14:33:10Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T14:02:38.479287Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "decompress@0.2.5",
          "tar@0.1.20"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "tar",
        "version": "0.1.20"
      },
      {
        "id": "SNYK-JS-TAR-1579147",
        "title": "Arbitrary File Write",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:L",
        "credit": [
          "ginkoid",
          "chen-robert"
        ],
        "semver": {
          "vulnerable": [
            ">=6.0.0 <6.1.7",
            ">=5.0.0 <5.0.8",
            "<4.4.16"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "6.1.7",
          "5.0.8",
          "4.4.16"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "tar",
        "references": [
          {
            "url": "https://github.com/npm/node-tar/commit/53602669f58ddbeb3294d7196b3320aaaed22728",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
            "cvssV3BaseScore": 8.6,
            "modificationTime": "2024-03-11T09:44:31.001846Z"
          },
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2024-03-11T09:49:48.122765Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2024-03-11T09:53:56.480623Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:L",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:57:17.557250Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 8.6,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:44:31.001846Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "assigner": "SUSE",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:48.122765Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:56.480623Z"
          }
        ],
        "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Arbitrary File Write. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\r\n\r\nThis logic was insufficient when extracting `tar` files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators. However, `\\` is a valid filename character on posix systems.\r\n\r\nBy first creating a directory, and then replacing that directory with a symlink, it is possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted `tar` file to symlink into an arbitrary location. This can lead to extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\r\n\r\nAdditionally, a similar confusion could arise on case-insensitive filesystems. If a `tar` archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but not from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created.\n## Remediation\nUpgrade `tar` to version 6.1.7, 5.0.8, 4.4.16 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/53602669f58ddbeb3294d7196b3320aaaed22728)\n",
        "epssDetails": {
          "percentile": "0.49503",
          "probability": "0.00130",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-37701"
          ],
          "CWE": [
            "CWE-22"
          ],
          "NSP": [
            "1779"
          ],
          "GHSA": [
            "GHSA-9r2w-394v-53qc"
          ]
        },
        "packageName": "tar",
        "proprietary": false,
        "creationTime": "2021-09-01T05:55:13.724747Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-09-01T05:45:02Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-09-01T07:55:13.009873Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:56.480623Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "decompress@0.2.5",
          "tar@0.1.20"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "tar",
        "version": "0.1.20"
      },
      {
        "id": "SNYK-JS-TAR-1579152",
        "title": "Arbitrary File Write",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:L",
        "credit": [
          "ginkoid",
          "chen-robert",
          "JarLob"
        ],
        "semver": {
          "vulnerable": [
            ">=6.0.0 <6.1.9",
            ">=5.0.0 <5.0.10",
            "<4.4.18"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "6.1.9",
          "5.0.10",
          "4.4.18"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "tar",
        "references": [
          {
            "url": "https://github.com/npm/node-tar/commit/b6162c7fafe797f856564ef37f4b82747f051455",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
            "cvssV3BaseScore": 8.6,
            "modificationTime": "2024-03-11T09:48:12.366271Z"
          },
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2024-03-11T09:49:48.147412Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2024-03-11T09:53:56.478384Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:L",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:57:17.026459Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 8.6,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:48:12.366271Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "assigner": "SUSE",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:48.147412Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:56.478384Z"
          }
        ],
        "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Arbitrary File Write. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\r\n\r\nThis logic is insufficient when extracting `tar` files that contain two directories and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts.\r\nA specially crafted `tar` archive can include directories with two forms of the path that resolve to the same file system entity, followed by a symbolic link with a name in the first form, lastly followed by a file using the second form. This leads to bypassing `node-tar` symlink checks on directories, essentially allowing an untrusted `tar` file to symlink into an arbitrary location and extracting arbitrary files into that location.\n## Remediation\nUpgrade `tar` to version 6.1.9, 5.0.10, 4.4.18 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/b6162c7fafe797f856564ef37f4b82747f051455)\n",
        "epssDetails": {
          "percentile": "0.49503",
          "probability": "0.00130",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-37712"
          ],
          "CWE": [
            "CWE-22"
          ],
          "NSP": [
            "1780"
          ],
          "GHSA": [
            "GHSA-qq89-hq3f-393p"
          ]
        },
        "packageName": "tar",
        "proprietary": false,
        "creationTime": "2021-09-01T06:04:41.432860Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-09-01T05:57:49Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-09-01T07:55:12.359155Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:56.478384Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "decompress@0.2.5",
          "tar@0.1.20"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "tar",
        "version": "0.1.20"
      },
      {
        "id": "SNYK-JS-TAR-1579155",
        "title": "Arbitrary File Write",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:L",
        "credit": [
          "ginkoid",
          "chen-robert",
          "JarLob"
        ],
        "semver": {
          "vulnerable": [
            ">=6.0.0 <6.1.9",
            ">=5.0.0 <5.0.10",
            "<4.4.18"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "6.1.9",
          "5.0.10",
          "4.4.18"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": "This vulnerability is only applicable on Windows operating system"
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "tar",
        "references": [
          {
            "url": "https://github.com/npm/node-tar/commit/875a37e3ec031186fc6599f6807341f56c584598",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
            "cvssV3BaseScore": 8.2,
            "modificationTime": "2024-03-11T09:49:48.495446Z"
          },
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
            "cvssV3BaseScore": 8.6,
            "modificationTime": "2024-03-11T09:50:59.993875Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:L",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:02:08.531854Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
            "assigner": "SUSE",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:48.495446Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 8.6,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:50:59.993875Z"
          }
        ],
        "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Arbitrary File Write. `node-tar` aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory.\r\n\r\nThis logic is insufficient on Windows systems when extracting `tar` files that contain a path that is not an absolute path, but specify a drive letter different from the extraction target, such as `C:some\\path`. If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` resolves against the current working directory on the `C:` drive, rather than the extraction target directory.\r\n\r\nAdditionally, a `..` portion of the path can occur immediately after the drive letter, such as `C:../foo`, and is not properly sanitized by the logic that checks for `..` within the normalized and split portions of the path.\r\n\r\n**Note:** This only affects users of `node-tar` on Windows systems.\n## Remediation\nUpgrade `tar` to version 6.1.9, 5.0.10, 4.4.18 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/875a37e3ec031186fc6599f6807341f56c584598)\n",
        "epssDetails": {
          "percentile": "0.33828",
          "probability": "0.00074",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-37713"
          ],
          "CWE": [
            "CWE-22"
          ],
          "NSP": [
            "1781"
          ],
          "GHSA": [
            "GHSA-5955-9wpr-37jh"
          ]
        },
        "packageName": "tar",
        "proprietary": false,
        "creationTime": "2021-09-01T06:09:32.775270Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-09-01T06:05:10Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-09-01T07:55:11.707292Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:50:59.993875Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "decompress@0.2.5",
          "tar@0.1.20"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "tar",
        "version": "0.1.20"
      },
      {
        "id": "SNYK-JS-TAR-174125",
        "title": "Arbitrary File Overwrite",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:O",
        "credit": [
          "Max Justicz"
        ],
        "semver": {
          "vulnerable": [
            "<2.2.2",
            ">=3.0.0 <4.4.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.2.2",
          "4.4.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.1,
        "functions": [
          {
            "version": [
              ">=3.0.0 <4.4.2"
            ],
            "functionId": {
              "filePath": "lib/unpack.js",
              "className": null,
              "functionName": "Unpack.prototype.CHECKFS"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "tar",
        "references": [
          {
            "url": "https://github.com/npm/node-tar/commit/b0c58433c22f5e7fe8b1c76373f27e3f81dcd4c8",
            "title": "GitHub Commit"
          },
          {
            "url": "https://www.npmjs.com/advisories/803",
            "title": "NPM Security Advisory"
          },
          {
            "url": "https://hackerone.com/reports/344595",
            "title": "POC: HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:48:10.963551Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 8.8,
            "modificationTime": "2024-03-11T09:53:56.106758Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:O",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:01:05.070709Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:48:10.963551Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 8.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:56.106758Z"
          }
        ],
        "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hard-link to a file that already exists in the system, and a file that matches the hard-link may overwrite system's files with the contents of the extracted file.\n## Remediation\nUpgrade `tar` to version 2.2.2, 4.4.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/b0c58433c22f5e7fe8b1c76373f27e3f81dcd4c8)\n- [NPM Security Advisory](https://www.npmjs.com/advisories/803)\n- [POC: HackerOne Report](https://hackerone.com/reports/344595)\n",
        "epssDetails": {
          "percentile": "0.73910",
          "probability": "0.00385",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-20834"
          ],
          "CWE": [
            "CWE-59"
          ],
          "NSP": [
            "803"
          ],
          "GHSA": [
            "GHSA-j44m-qm6p-hp7m"
          ]
        },
        "packageName": "tar",
        "proprietary": false,
        "creationTime": "2019-04-07T10:04:29.112428Z",
        "functions_new": [
          {
            "version": [
              ">=3.0.0 <4.4.2"
            ],
            "functionId": {
              "filePath": "lib/unpack.js",
              "functionName": "Unpack.prototype.CHECKFS"
            }
          }
        ],
        "alternativeIds": [],
        "disclosureTime": "2019-04-04T03:31:56Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2019-04-07T03:31:56Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:56.106758Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "decompress@0.2.5",
          "tar@0.1.20"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "tar",
        "version": "0.1.20"
      },
      {
        "id": "SNYK-JS-TAR-6476909",
        "title": "Uncontrolled Resource Consumption ('Resource Exhaustion')",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Mohamed Dief"
        ],
        "semver": {
          "vulnerable": [
            "<6.2.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "6.2.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "tar",
        "references": [
          {
            "url": "https://github.com/isaacs/node-tar/commit/fe8cd57da5686f8695415414bda49206a545f7f7",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 6.5,
            "modificationTime": "2024-06-20T13:34:25.566902Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-29T11:51:08.899351Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-06-20T13:34:25.566902Z"
          }
        ],
        "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Uncontrolled Resource Consumption ('Resource Exhaustion') due to the lack of folders count validation during the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running the software and even crash the client within few seconds of running it using a path with too many sub-folders inside.\n## Remediation\nUpgrade `tar` to version 6.2.1 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/node-tar/commit/fe8cd57da5686f8695415414bda49206a545f7f7)\n",
        "epssDetails": {
          "percentile": "0.17556",
          "probability": "0.00045",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-28863"
          ],
          "CWE": [
            "CWE-400"
          ],
          "GHSA": [
            "GHSA-f5x3-32g6-xq36"
          ]
        },
        "packageName": "tar",
        "proprietary": false,
        "creationTime": "2024-03-22T12:56:33.802918Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-03-21T22:40:19Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-03-22T12:56:33.985087Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-06-20T13:34:25.566902Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "decompress@0.2.5",
          "tar@0.1.20"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "tar",
        "version": "0.1.20"
      },
      {
        "id": "npm:tar:20151103",
        "title": "Symlink File Overwrite",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
        "credit": [
          "Tim Cuthbertson"
        ],
        "semver": {
          "vulnerable": [
            ">0.0.1 <2.0.0"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.0.0"
        ],
        "patches": [
          {
            "id": "patch:npm:tar:20151103:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/tar/20151103/tar_20151103_0_0_a5337a6cd58a2d800fc03b3781a25751cf459f28_snyk.patch"
            ],
            "version": "<2.0.0 >=0.1.13",
            "comments": [
              "https://github.com/npm/node-tar/commit/a5337a6cd58a2d800fc03b3781a25751cf459f28.patch"
            ],
            "modificationTime": "2019-12-03T11:40:45.760979Z"
          },
          {
            "id": "patch:npm:tar:20151103:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/tar/20151103/tar_20151103_0_1_a5337a6cd58a2d800fc03b3781a25751cf459f28_snyk.patch"
            ],
            "version": "<0.1.13 >0.0.1",
            "comments": [
              "https://github.com/npm/node-tar/commit/a5337a6cd58a2d800fc03b3781a25751cf459f28.patch"
            ],
            "modificationTime": "2019-12-03T11:40:45.762037Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [
          {
            "version": [
              ">0.0.1 <2.0.0"
            ],
            "functionId": {
              "filePath": "lib/extract.js",
              "className": null,
              "functionName": "Extract"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "tar",
        "references": [
          {
            "url": "https://github.com/npm/node-tar/commit/a5337a6cd58a2d800fc03b3781a25751cf459f28",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/npm/releases/tag/v2.7.5",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:46:37.190949Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 4.3,
            "modificationTime": "2024-03-11T09:48:53.130288Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:31.820675Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:37.190949Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:48:53.130288Z"
          }
        ],
        "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Symlink File Overwrite. It does not properly normalize symbolic links pointing to targets outside the extraction root. As a result, packages may hold symbolic links to parent and sibling directories and overwrite those files when the package is extracted.\n## Remediation\nUpgrade `tar` to version 2.0.0 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/a5337a6cd58a2d800fc03b3781a25751cf459f28)\n- [GitHub Release](https://github.com/npm/npm/releases/tag/v2.7.5)\n",
        "epssDetails": {
          "percentile": "0.56710",
          "probability": "0.00183",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-8860"
          ],
          "CWE": [
            "CWE-208"
          ],
          "NSP": [
            "57"
          ],
          "GHSA": [
            "GHSA-gfjr-3jmm-4g9v"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-TAR-10055",
            "SNYK-JS-TAR-10055",
            "npm:tar:20151103"
          ]
        },
        "packageName": "tar",
        "proprietary": false,
        "creationTime": "2015-11-06T02:09:36.182000Z",
        "functions_new": [
          {
            "version": [
              ">0.0.1 <2.0.0"
            ],
            "functionId": {
              "filePath": "lib/extract.js",
              "functionName": "Extract"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-TAR-10055"
        ],
        "disclosureTime": "2015-11-03T07:15:12Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2015-11-06T02:09:36Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:48:53.130288Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "decompress@0.2.5",
          "tar@0.1.20"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "name": "tar",
        "version": "0.1.20"
      },
      {
        "id": "SNYK-JS-TMPL-1583443",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<1.0.5"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "1.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "tmpl",
        "references": [
          {
            "url": "https://github.com/daaku/nodejs-tmpl/commit/4c654e4d1542f329ed561fd95ccd80f30c6872d6",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:50:58.338243Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:05:05.778560Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:50:58.338243Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the main functionality.\r\n\r\n### PoC\r\n```\r\nvar tmpl = require(\"tmpl\")\r\nfor(var i = 1; i <= 1000; i++) {\r\n        var time = Date.now();\r\n        payload = \"hello, \" + \"{\".repeat(i*10000) + \"day\"\r\n        tmpl(payload, {day: \"tomorrow\"})\r\n        var time_taken = Date.now() - time;\r\n        console.log(\"payload length: \" + payload.length + \" - time taken: \" + time_taken + \"ms\")\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `tmpl` to version 1.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/daaku/nodejs-tmpl/commit/4c654e4d1542f329ed561fd95ccd80f30c6872d6)\n",
        "epssDetails": {
          "percentile": "0.47115",
          "probability": "0.00117",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-3777"
          ],
          "CWE": [
            "CWE-400"
          ]
        },
        "packageName": "tmpl",
        "proprietary": false,
        "creationTime": "2021-09-08T12:39:02.502663Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-09-08T11:19:47Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-09-15T18:40:54.502927Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:50:58.338243Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-watcher@1.0.3",
          "sane@0.8.1",
          "walker@1.0.7",
          "makeerror@1.0.11",
          "tmpl@1.0.4"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "tmpl",
        "version": "1.0.4"
      },
      {
        "id": "SNYK-JS-WORDWRAP-3149973",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Carter Snook"
        ],
        "semver": {
          "vulnerable": [
            "<1.2.4"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "1.2.4"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "word-wrap",
        "references": [
          {
            "url": "https://github.com/jonschlinkert/word-wrap/commit/420dce9a2412b21881202b73a3c34f0edc53cb2e",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/jonschlinkert/word-wrap/pull/41",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/jonschlinkert/word-wrap/blob/master/index.js%23L39",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.587261Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.864734Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:08.463618Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.587261Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.864734Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the usage of an insecure regular expression within the `result` variable.\r\n\r\n**Note:**\r\n\r\nThe regex is vulnerable on its own, but the vulnerable function is not reachable as shipped in the package.\r\n\r\n\r\n## PoC\r\n```js\r\nconst wrap = require(\"word-wrap\");\r\n\r\nfor (let i = 0; i <= 10; i++) {\r\nconst attack = \"a\" + \"t\".repeat(i * 10_00000);\r\nconst start = performance.now();\r\nwrap(\r\nattack,\r\n{ trim: true },\r\n);\r\nconsole.log(`${attack.length} characters: ${performance.now() - start}ms`);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `word-wrap` to version 1.2.4 or higher.\n## References\n- [GitHub Commit](https://github.com/jonschlinkert/word-wrap/commit/420dce9a2412b21881202b73a3c34f0edc53cb2e)\n- [GitHub PR](https://github.com/jonschlinkert/word-wrap/pull/41)\n- [Vulnerable Code](https://github.com/jonschlinkert/word-wrap/blob/master/index.js#L39)\n",
        "epssDetails": {
          "percentile": "0.49905",
          "probability": "0.00133",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-26115"
          ],
          "CWE": [
            "CWE-1333"
          ],
          "GHSA": [
            "GHSA-j8xg-fqg3-53r7"
          ]
        },
        "packageName": "word-wrap",
        "proprietary": true,
        "creationTime": "2022-11-28T14:29:41.016778Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-11-28T13:29:26Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-03-22T15:02:56.710165Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.864734Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "degenerator@1.0.4",
          "escodegen@1.14.1",
          "optionator@0.8.3",
          "word-wrap@1.2.3"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "word-wrap",
        "version": "1.2.3"
      },
      {
        "id": "SNYK-JS-WORDWRAP-3149973",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Carter Snook"
        ],
        "semver": {
          "vulnerable": [
            "<1.2.4"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "1.2.4"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "word-wrap",
        "references": [
          {
            "url": "https://github.com/jonschlinkert/word-wrap/commit/420dce9a2412b21881202b73a3c34f0edc53cb2e",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/jonschlinkert/word-wrap/pull/41",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/jonschlinkert/word-wrap/blob/master/index.js%23L39",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.587261Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.864734Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:08.463618Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.587261Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.864734Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the usage of an insecure regular expression within the `result` variable.\r\n\r\n**Note:**\r\n\r\nThe regex is vulnerable on its own, but the vulnerable function is not reachable as shipped in the package.\r\n\r\n\r\n## PoC\r\n```js\r\nconst wrap = require(\"word-wrap\");\r\n\r\nfor (let i = 0; i <= 10; i++) {\r\nconst attack = \"a\" + \"t\".repeat(i * 10_00000);\r\nconst start = performance.now();\r\nwrap(\r\nattack,\r\n{ trim: true },\r\n);\r\nconsole.log(`${attack.length} characters: ${performance.now() - start}ms`);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `word-wrap` to version 1.2.4 or higher.\n## References\n- [GitHub Commit](https://github.com/jonschlinkert/word-wrap/commit/420dce9a2412b21881202b73a3c34f0edc53cb2e)\n- [GitHub PR](https://github.com/jonschlinkert/word-wrap/pull/41)\n- [Vulnerable Code](https://github.com/jonschlinkert/word-wrap/blob/master/index.js#L39)\n",
        "epssDetails": {
          "percentile": "0.49905",
          "probability": "0.00133",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-26115"
          ],
          "CWE": [
            "CWE-1333"
          ],
          "GHSA": [
            "GHSA-j8xg-fqg3-53r7"
          ]
        },
        "packageName": "word-wrap",
        "proprietary": true,
        "creationTime": "2022-11-28T14:29:41.016778Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-11-28T13:29:26Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-03-22T15:02:56.710165Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.864734Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-search2@1.1.1",
          "cogent@0.4.3",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "degenerator@1.0.4",
          "escodegen@1.14.1",
          "optionator@0.8.3",
          "word-wrap@1.2.3"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "word-wrap",
        "version": "1.2.3"
      },
      {
        "id": "SNYK-JS-WORDWRAP-3149973",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Carter Snook"
        ],
        "semver": {
          "vulnerable": [
            "<1.2.4"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "1.2.4"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "word-wrap",
        "references": [
          {
            "url": "https://github.com/jonschlinkert/word-wrap/commit/420dce9a2412b21881202b73a3c34f0edc53cb2e",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/jonschlinkert/word-wrap/pull/41",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/jonschlinkert/word-wrap/blob/master/index.js%23L39",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.587261Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.864734Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:08.463618Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.587261Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.864734Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the usage of an insecure regular expression within the `result` variable.\r\n\r\n**Note:**\r\n\r\nThe regex is vulnerable on its own, but the vulnerable function is not reachable as shipped in the package.\r\n\r\n\r\n## PoC\r\n```js\r\nconst wrap = require(\"word-wrap\");\r\n\r\nfor (let i = 0; i <= 10; i++) {\r\nconst attack = \"a\" + \"t\".repeat(i * 10_00000);\r\nconst start = performance.now();\r\nwrap(\r\nattack,\r\n{ trim: true },\r\n);\r\nconsole.log(`${attack.length} characters: ${performance.now() - start}ms`);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `word-wrap` to version 1.2.4 or higher.\n## References\n- [GitHub Commit](https://github.com/jonschlinkert/word-wrap/commit/420dce9a2412b21881202b73a3c34f0edc53cb2e)\n- [GitHub PR](https://github.com/jonschlinkert/word-wrap/pull/41)\n- [Vulnerable Code](https://github.com/jonschlinkert/word-wrap/blob/master/index.js#L39)\n",
        "epssDetails": {
          "percentile": "0.49905",
          "probability": "0.00133",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-26115"
          ],
          "CWE": [
            "CWE-1333"
          ],
          "GHSA": [
            "GHSA-j8xg-fqg3-53r7"
          ]
        },
        "packageName": "word-wrap",
        "proprietary": true,
        "creationTime": "2022-11-28T14:29:41.016778Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-11-28T13:29:26Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-03-22T15:02:56.710165Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.864734Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "degenerator@1.0.4",
          "escodegen@1.14.1",
          "optionator@0.8.3",
          "word-wrap@1.2.3"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "word-wrap",
        "version": "1.2.3"
      },
      {
        "id": "SNYK-JS-WORDWRAP-3149973",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Carter Snook"
        ],
        "semver": {
          "vulnerable": [
            "<1.2.4"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "1.2.4"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "word-wrap",
        "references": [
          {
            "url": "https://github.com/jonschlinkert/word-wrap/commit/420dce9a2412b21881202b73a3c34f0edc53cb2e",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/jonschlinkert/word-wrap/pull/41",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/jonschlinkert/word-wrap/blob/master/index.js%23L39",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.587261Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.864734Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:08.463618Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.587261Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.864734Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the usage of an insecure regular expression within the `result` variable.\r\n\r\n**Note:**\r\n\r\nThe regex is vulnerable on its own, but the vulnerable function is not reachable as shipped in the package.\r\n\r\n\r\n## PoC\r\n```js\r\nconst wrap = require(\"word-wrap\");\r\n\r\nfor (let i = 0; i <= 10; i++) {\r\nconst attack = \"a\" + \"t\".repeat(i * 10_00000);\r\nconst start = performance.now();\r\nwrap(\r\nattack,\r\n{ trim: true },\r\n);\r\nconsole.log(`${attack.length} characters: ${performance.now() - start}ms`);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `word-wrap` to version 1.2.4 or higher.\n## References\n- [GitHub Commit](https://github.com/jonschlinkert/word-wrap/commit/420dce9a2412b21881202b73a3c34f0edc53cb2e)\n- [GitHub PR](https://github.com/jonschlinkert/word-wrap/pull/41)\n- [Vulnerable Code](https://github.com/jonschlinkert/word-wrap/blob/master/index.js#L39)\n",
        "epssDetails": {
          "percentile": "0.49905",
          "probability": "0.00133",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-26115"
          ],
          "CWE": [
            "CWE-1333"
          ],
          "GHSA": [
            "GHSA-j8xg-fqg3-53r7"
          ]
        },
        "packageName": "word-wrap",
        "proprietary": true,
        "creationTime": "2022-11-28T14:29:41.016778Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-11-28T13:29:26Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-03-22T15:02:56.710165Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.864734Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "degenerator@1.0.4",
          "escodegen@1.14.1",
          "optionator@0.8.3",
          "word-wrap@1.2.3"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "word-wrap",
        "version": "1.2.3"
      },
      {
        "id": "SNYK-JS-WORDWRAP-3149973",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Carter Snook"
        ],
        "semver": {
          "vulnerable": [
            "<1.2.4"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "1.2.4"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "word-wrap",
        "references": [
          {
            "url": "https://github.com/jonschlinkert/word-wrap/commit/420dce9a2412b21881202b73a3c34f0edc53cb2e",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/jonschlinkert/word-wrap/pull/41",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/jonschlinkert/word-wrap/blob/master/index.js%23L39",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.587261Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.864734Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:08.463618Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.587261Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.864734Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the usage of an insecure regular expression within the `result` variable.\r\n\r\n**Note:**\r\n\r\nThe regex is vulnerable on its own, but the vulnerable function is not reachable as shipped in the package.\r\n\r\n\r\n## PoC\r\n```js\r\nconst wrap = require(\"word-wrap\");\r\n\r\nfor (let i = 0; i <= 10; i++) {\r\nconst attack = \"a\" + \"t\".repeat(i * 10_00000);\r\nconst start = performance.now();\r\nwrap(\r\nattack,\r\n{ trim: true },\r\n);\r\nconsole.log(`${attack.length} characters: ${performance.now() - start}ms`);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `word-wrap` to version 1.2.4 or higher.\n## References\n- [GitHub Commit](https://github.com/jonschlinkert/word-wrap/commit/420dce9a2412b21881202b73a3c34f0edc53cb2e)\n- [GitHub PR](https://github.com/jonschlinkert/word-wrap/pull/41)\n- [Vulnerable Code](https://github.com/jonschlinkert/word-wrap/blob/master/index.js#L39)\n",
        "epssDetails": {
          "percentile": "0.49905",
          "probability": "0.00133",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-26115"
          ],
          "CWE": [
            "CWE-1333"
          ],
          "GHSA": [
            "GHSA-j8xg-fqg3-53r7"
          ]
        },
        "packageName": "word-wrap",
        "proprietary": true,
        "creationTime": "2022-11-28T14:29:41.016778Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-11-28T13:29:26Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-03-22T15:02:56.710165Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.864734Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "degenerator@1.0.4",
          "escodegen@1.14.1",
          "optionator@0.8.3",
          "word-wrap@1.2.3"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "word-wrap",
        "version": "1.2.3"
      },
      {
        "id": "SNYK-JS-WORDWRAP-3149973",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Carter Snook"
        ],
        "semver": {
          "vulnerable": [
            "<1.2.4"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "1.2.4"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "word-wrap",
        "references": [
          {
            "url": "https://github.com/jonschlinkert/word-wrap/commit/420dce9a2412b21881202b73a3c34f0edc53cb2e",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/jonschlinkert/word-wrap/pull/41",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/jonschlinkert/word-wrap/blob/master/index.js%23L39",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.587261Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.864734Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:08.463618Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.587261Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.864734Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the usage of an insecure regular expression within the `result` variable.\r\n\r\n**Note:**\r\n\r\nThe regex is vulnerable on its own, but the vulnerable function is not reachable as shipped in the package.\r\n\r\n\r\n## PoC\r\n```js\r\nconst wrap = require(\"word-wrap\");\r\n\r\nfor (let i = 0; i <= 10; i++) {\r\nconst attack = \"a\" + \"t\".repeat(i * 10_00000);\r\nconst start = performance.now();\r\nwrap(\r\nattack,\r\n{ trim: true },\r\n);\r\nconsole.log(`${attack.length} characters: ${performance.now() - start}ms`);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `word-wrap` to version 1.2.4 or higher.\n## References\n- [GitHub Commit](https://github.com/jonschlinkert/word-wrap/commit/420dce9a2412b21881202b73a3c34f0edc53cb2e)\n- [GitHub PR](https://github.com/jonschlinkert/word-wrap/pull/41)\n- [Vulnerable Code](https://github.com/jonschlinkert/word-wrap/blob/master/index.js#L39)\n",
        "epssDetails": {
          "percentile": "0.49905",
          "probability": "0.00133",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-26115"
          ],
          "CWE": [
            "CWE-1333"
          ],
          "GHSA": [
            "GHSA-j8xg-fqg3-53r7"
          ]
        },
        "packageName": "word-wrap",
        "proprietary": true,
        "creationTime": "2022-11-28T14:29:41.016778Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-11-28T13:29:26Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-03-22T15:02:56.710165Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.864734Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "degenerator@1.0.4",
          "escodegen@1.14.1",
          "optionator@0.8.3",
          "word-wrap@1.2.3"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "word-wrap",
        "version": "1.2.3"
      },
      {
        "id": "SNYK-JS-WORDWRAP-3149973",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Carter Snook"
        ],
        "semver": {
          "vulnerable": [
            "<1.2.4"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "1.2.4"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "word-wrap",
        "references": [
          {
            "url": "https://github.com/jonschlinkert/word-wrap/commit/420dce9a2412b21881202b73a3c34f0edc53cb2e",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/jonschlinkert/word-wrap/pull/41",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/jonschlinkert/word-wrap/blob/master/index.js%23L39",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:22.587261Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:54:01.864734Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:08.463618Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:22.587261Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:01.864734Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the usage of an insecure regular expression within the `result` variable.\r\n\r\n**Note:**\r\n\r\nThe regex is vulnerable on its own, but the vulnerable function is not reachable as shipped in the package.\r\n\r\n\r\n## PoC\r\n```js\r\nconst wrap = require(\"word-wrap\");\r\n\r\nfor (let i = 0; i <= 10; i++) {\r\nconst attack = \"a\" + \"t\".repeat(i * 10_00000);\r\nconst start = performance.now();\r\nwrap(\r\nattack,\r\n{ trim: true },\r\n);\r\nconsole.log(`${attack.length} characters: ${performance.now() - start}ms`);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `word-wrap` to version 1.2.4 or higher.\n## References\n- [GitHub Commit](https://github.com/jonschlinkert/word-wrap/commit/420dce9a2412b21881202b73a3c34f0edc53cb2e)\n- [GitHub PR](https://github.com/jonschlinkert/word-wrap/pull/41)\n- [Vulnerable Code](https://github.com/jonschlinkert/word-wrap/blob/master/index.js#L39)\n",
        "epssDetails": {
          "percentile": "0.49905",
          "probability": "0.00133",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-26115"
          ],
          "CWE": [
            "CWE-1333"
          ],
          "GHSA": [
            "GHSA-j8xg-fqg3-53r7"
          ]
        },
        "packageName": "word-wrap",
        "proprietary": true,
        "creationTime": "2022-11-28T14:29:41.016778Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-11-28T13:29:26Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-03-22T15:02:56.710165Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:01.864734Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "degenerator@1.0.4",
          "escodegen@1.14.1",
          "optionator@0.8.3",
          "word-wrap@1.2.3"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "word-wrap",
        "version": "1.2.3"
      },
      {
        "id": "SNYK-JS-Y18N-1021887",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
        "credit": [
          "Beomjin Lee"
        ],
        "semver": {
          "vulnerable": [
            "<3.2.2",
            ">=4.0.0 <4.0.1",
            ">=5.0.0 <5.0.5"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "3.2.2",
          "4.0.1",
          "5.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "y18n",
        "references": [
          {
            "url": "https://github.com/yargs/y18n/commit/a9ac604abf756dec9687be3843e2c93bfe581f25",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/yargs/y18n/issues/96",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/yargs/y18n/pull/108",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:49:06.991056Z"
          },
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:49:37.366008Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:53:50.044917Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:04:41.906642Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:06.991056Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "SUSE",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:37.366008Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:50.044917Z"
          }
        ],
        "description": "## Overview\n[y18n](https://www.npmjs.com/package/y18n) is a the bare-bones internationalization library used by yargs\n\nAffected versions of this package are vulnerable to Prototype Pollution due to improper sanitization.\r\n## PoC by po6ix:\r\n```js\r\nconst y18n = require('y18n')();\r\n \r\ny18n.setLocale('__proto__');\r\ny18n.updateLocale({polluted: true});\r\n\r\nconsole.log(polluted); // true\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `y18n` to version 3.2.2, 4.0.1, 5.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/yargs/y18n/commit/a9ac604abf756dec9687be3843e2c93bfe581f25)\n- [GitHub Issue](https://github.com/yargs/y18n/issues/96)\n- [GitHub PR](https://github.com/yargs/y18n/pull/108)\n",
        "epssDetails": {
          "percentile": "0.96903",
          "probability": "0.27668",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2020-7774"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "GHSA": [
            "GHSA-c4w7-xm78-47vh"
          ]
        },
        "packageName": "y18n",
        "proprietary": true,
        "creationTime": "2020-10-25T14:27:16.715665Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-10-25T14:24:22Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-11-10T15:27:28Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:50.044917Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "defs@1.1.1",
          "yargs@3.27.0",
          "y18n@3.2.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "y18n",
        "version": "3.2.1"
      },
      {
        "id": "SNYK-JS-Y18N-1021887",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
        "credit": [
          "Beomjin Lee"
        ],
        "semver": {
          "vulnerable": [
            "<3.2.2",
            ">=4.0.0 <4.0.1",
            ">=5.0.0 <5.0.5"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "3.2.2",
          "4.0.1",
          "5.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "y18n",
        "references": [
          {
            "url": "https://github.com/yargs/y18n/commit/a9ac604abf756dec9687be3843e2c93bfe581f25",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/yargs/y18n/issues/96",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/yargs/y18n/pull/108",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:49:06.991056Z"
          },
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:49:37.366008Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:53:50.044917Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:04:41.906642Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:06.991056Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "SUSE",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:37.366008Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:50.044917Z"
          }
        ],
        "description": "## Overview\n[y18n](https://www.npmjs.com/package/y18n) is a the bare-bones internationalization library used by yargs\n\nAffected versions of this package are vulnerable to Prototype Pollution due to improper sanitization.\r\n## PoC by po6ix:\r\n```js\r\nconst y18n = require('y18n')();\r\n \r\ny18n.setLocale('__proto__');\r\ny18n.updateLocale({polluted: true});\r\n\r\nconsole.log(polluted); // true\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `y18n` to version 3.2.2, 4.0.1, 5.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/yargs/y18n/commit/a9ac604abf756dec9687be3843e2c93bfe581f25)\n- [GitHub Issue](https://github.com/yargs/y18n/issues/96)\n- [GitHub PR](https://github.com/yargs/y18n/pull/108)\n",
        "epssDetails": {
          "percentile": "0.96903",
          "probability": "0.27668",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2020-7774"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "GHSA": [
            "GHSA-c4w7-xm78-47vh"
          ]
        },
        "packageName": "y18n",
        "proprietary": true,
        "creationTime": "2020-10-25T14:27:16.715665Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-10-25T14:24:22Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-11-10T15:27:28Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:50.044917Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-search2@1.1.1",
          "cogent@0.4.3",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "defs@1.1.1",
          "yargs@3.27.0",
          "y18n@3.2.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "y18n",
        "version": "3.2.1"
      },
      {
        "id": "SNYK-JS-Y18N-1021887",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
        "credit": [
          "Beomjin Lee"
        ],
        "semver": {
          "vulnerable": [
            "<3.2.2",
            ">=4.0.0 <4.0.1",
            ">=5.0.0 <5.0.5"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "3.2.2",
          "4.0.1",
          "5.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "y18n",
        "references": [
          {
            "url": "https://github.com/yargs/y18n/commit/a9ac604abf756dec9687be3843e2c93bfe581f25",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/yargs/y18n/issues/96",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/yargs/y18n/pull/108",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:49:06.991056Z"
          },
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:49:37.366008Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:53:50.044917Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:04:41.906642Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:06.991056Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "SUSE",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:37.366008Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:50.044917Z"
          }
        ],
        "description": "## Overview\n[y18n](https://www.npmjs.com/package/y18n) is a the bare-bones internationalization library used by yargs\n\nAffected versions of this package are vulnerable to Prototype Pollution due to improper sanitization.\r\n## PoC by po6ix:\r\n```js\r\nconst y18n = require('y18n')();\r\n \r\ny18n.setLocale('__proto__');\r\ny18n.updateLocale({polluted: true});\r\n\r\nconsole.log(polluted); // true\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `y18n` to version 3.2.2, 4.0.1, 5.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/yargs/y18n/commit/a9ac604abf756dec9687be3843e2c93bfe581f25)\n- [GitHub Issue](https://github.com/yargs/y18n/issues/96)\n- [GitHub PR](https://github.com/yargs/y18n/pull/108)\n",
        "epssDetails": {
          "percentile": "0.96903",
          "probability": "0.27668",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2020-7774"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "GHSA": [
            "GHSA-c4w7-xm78-47vh"
          ]
        },
        "packageName": "y18n",
        "proprietary": true,
        "creationTime": "2020-10-25T14:27:16.715665Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-10-25T14:24:22Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-11-10T15:27:28Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:50.044917Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "defs@1.1.1",
          "yargs@3.27.0",
          "y18n@3.2.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "y18n",
        "version": "3.2.1"
      },
      {
        "id": "SNYK-JS-Y18N-1021887",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
        "credit": [
          "Beomjin Lee"
        ],
        "semver": {
          "vulnerable": [
            "<3.2.2",
            ">=4.0.0 <4.0.1",
            ">=5.0.0 <5.0.5"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "3.2.2",
          "4.0.1",
          "5.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "y18n",
        "references": [
          {
            "url": "https://github.com/yargs/y18n/commit/a9ac604abf756dec9687be3843e2c93bfe581f25",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/yargs/y18n/issues/96",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/yargs/y18n/pull/108",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:49:06.991056Z"
          },
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:49:37.366008Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:53:50.044917Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:04:41.906642Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:06.991056Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "SUSE",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:37.366008Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:50.044917Z"
          }
        ],
        "description": "## Overview\n[y18n](https://www.npmjs.com/package/y18n) is a the bare-bones internationalization library used by yargs\n\nAffected versions of this package are vulnerable to Prototype Pollution due to improper sanitization.\r\n## PoC by po6ix:\r\n```js\r\nconst y18n = require('y18n')();\r\n \r\ny18n.setLocale('__proto__');\r\ny18n.updateLocale({polluted: true});\r\n\r\nconsole.log(polluted); // true\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `y18n` to version 3.2.2, 4.0.1, 5.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/yargs/y18n/commit/a9ac604abf756dec9687be3843e2c93bfe581f25)\n- [GitHub Issue](https://github.com/yargs/y18n/issues/96)\n- [GitHub PR](https://github.com/yargs/y18n/pull/108)\n",
        "epssDetails": {
          "percentile": "0.96903",
          "probability": "0.27668",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2020-7774"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "GHSA": [
            "GHSA-c4w7-xm78-47vh"
          ]
        },
        "packageName": "y18n",
        "proprietary": true,
        "creationTime": "2020-10-25T14:27:16.715665Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-10-25T14:24:22Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-11-10T15:27:28Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:50.044917Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "defs@1.1.1",
          "yargs@3.27.0",
          "y18n@3.2.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "y18n",
        "version": "3.2.1"
      },
      {
        "id": "SNYK-JS-Y18N-1021887",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
        "credit": [
          "Beomjin Lee"
        ],
        "semver": {
          "vulnerable": [
            "<3.2.2",
            ">=4.0.0 <4.0.1",
            ">=5.0.0 <5.0.5"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "3.2.2",
          "4.0.1",
          "5.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "y18n",
        "references": [
          {
            "url": "https://github.com/yargs/y18n/commit/a9ac604abf756dec9687be3843e2c93bfe581f25",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/yargs/y18n/issues/96",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/yargs/y18n/pull/108",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:49:06.991056Z"
          },
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:49:37.366008Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:53:50.044917Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:04:41.906642Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:06.991056Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "SUSE",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:37.366008Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:50.044917Z"
          }
        ],
        "description": "## Overview\n[y18n](https://www.npmjs.com/package/y18n) is a the bare-bones internationalization library used by yargs\n\nAffected versions of this package are vulnerable to Prototype Pollution due to improper sanitization.\r\n## PoC by po6ix:\r\n```js\r\nconst y18n = require('y18n')();\r\n \r\ny18n.setLocale('__proto__');\r\ny18n.updateLocale({polluted: true});\r\n\r\nconsole.log(polluted); // true\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `y18n` to version 3.2.2, 4.0.1, 5.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/yargs/y18n/commit/a9ac604abf756dec9687be3843e2c93bfe581f25)\n- [GitHub Issue](https://github.com/yargs/y18n/issues/96)\n- [GitHub PR](https://github.com/yargs/y18n/pull/108)\n",
        "epssDetails": {
          "percentile": "0.96903",
          "probability": "0.27668",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2020-7774"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "GHSA": [
            "GHSA-c4w7-xm78-47vh"
          ]
        },
        "packageName": "y18n",
        "proprietary": true,
        "creationTime": "2020-10-25T14:27:16.715665Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-10-25T14:24:22Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-11-10T15:27:28Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:50.044917Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "defs@1.1.1",
          "yargs@3.27.0",
          "y18n@3.2.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "y18n",
        "version": "3.2.1"
      },
      {
        "id": "SNYK-JS-Y18N-1021887",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
        "credit": [
          "Beomjin Lee"
        ],
        "semver": {
          "vulnerable": [
            "<3.2.2",
            ">=4.0.0 <4.0.1",
            ">=5.0.0 <5.0.5"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "3.2.2",
          "4.0.1",
          "5.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "y18n",
        "references": [
          {
            "url": "https://github.com/yargs/y18n/commit/a9ac604abf756dec9687be3843e2c93bfe581f25",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/yargs/y18n/issues/96",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/yargs/y18n/pull/108",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:49:06.991056Z"
          },
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:49:37.366008Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:53:50.044917Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:04:41.906642Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:06.991056Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "SUSE",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:37.366008Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:50.044917Z"
          }
        ],
        "description": "## Overview\n[y18n](https://www.npmjs.com/package/y18n) is a the bare-bones internationalization library used by yargs\n\nAffected versions of this package are vulnerable to Prototype Pollution due to improper sanitization.\r\n## PoC by po6ix:\r\n```js\r\nconst y18n = require('y18n')();\r\n \r\ny18n.setLocale('__proto__');\r\ny18n.updateLocale({polluted: true});\r\n\r\nconsole.log(polluted); // true\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `y18n` to version 3.2.2, 4.0.1, 5.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/yargs/y18n/commit/a9ac604abf756dec9687be3843e2c93bfe581f25)\n- [GitHub Issue](https://github.com/yargs/y18n/issues/96)\n- [GitHub PR](https://github.com/yargs/y18n/pull/108)\n",
        "epssDetails": {
          "percentile": "0.96903",
          "probability": "0.27668",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2020-7774"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "GHSA": [
            "GHSA-c4w7-xm78-47vh"
          ]
        },
        "packageName": "y18n",
        "proprietary": true,
        "creationTime": "2020-10-25T14:27:16.715665Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-10-25T14:24:22Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-11-10T15:27:28Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:50.044917Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "defs@1.1.1",
          "yargs@3.27.0",
          "y18n@3.2.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "y18n",
        "version": "3.2.1"
      },
      {
        "id": "SNYK-JS-Y18N-1021887",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
        "credit": [
          "Beomjin Lee"
        ],
        "semver": {
          "vulnerable": [
            "<3.2.2",
            ">=4.0.0 <4.0.1",
            ">=5.0.0 <5.0.5"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "3.2.2",
          "4.0.1",
          "5.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "y18n",
        "references": [
          {
            "url": "https://github.com/yargs/y18n/commit/a9ac604abf756dec9687be3843e2c93bfe581f25",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/yargs/y18n/issues/96",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/yargs/y18n/pull/108",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:49:06.991056Z"
          },
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:49:37.366008Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:53:50.044917Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:04:41.906642Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:06.991056Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "SUSE",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:37.366008Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:50.044917Z"
          }
        ],
        "description": "## Overview\n[y18n](https://www.npmjs.com/package/y18n) is a the bare-bones internationalization library used by yargs\n\nAffected versions of this package are vulnerable to Prototype Pollution due to improper sanitization.\r\n## PoC by po6ix:\r\n```js\r\nconst y18n = require('y18n')();\r\n \r\ny18n.setLocale('__proto__');\r\ny18n.updateLocale({polluted: true});\r\n\r\nconsole.log(polluted); // true\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `y18n` to version 3.2.2, 4.0.1, 5.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/yargs/y18n/commit/a9ac604abf756dec9687be3843e2c93bfe581f25)\n- [GitHub Issue](https://github.com/yargs/y18n/issues/96)\n- [GitHub PR](https://github.com/yargs/y18n/pull/108)\n",
        "epssDetails": {
          "percentile": "0.96903",
          "probability": "0.27668",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2020-7774"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "GHSA": [
            "GHSA-c4w7-xm78-47vh"
          ]
        },
        "packageName": "y18n",
        "proprietary": true,
        "creationTime": "2020-10-25T14:27:16.715665Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-10-25T14:24:22Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-11-10T15:27:28Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:50.044917Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "pac-resolver@1.2.6",
          "regenerator@0.8.46",
          "defs@1.1.1",
          "yargs@3.27.0",
          "y18n@3.2.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "y18n",
        "version": "3.2.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-build@1.2.2",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-consoler@2.0.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-remotes@1.2.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-search2@1.1.1",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-watcher@1.0.3",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-build@1.2.2",
          "component-builder@1.2.1",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-consoler@2.0.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-remotes@1.2.0",
          "component-consoler@2.0.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-consoler@2.0.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-consoler@2.0.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-search2@1.1.1",
          "component-consoler@2.0.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-consoler@2.0.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-remotes@1.2.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-remotes@1.2.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-remotes@1.2.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-remotes@1.2.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-search2@1.1.1",
          "cogent@0.4.3",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-build@1.2.2",
          "component-builder@1.2.1",
          "component-manifest@1.0.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-remotes@1.2.0",
          "component-consoler@2.0.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-remotes@1.2.0",
          "component-consoler@2.0.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-remotes@1.2.0",
          "component-consoler@2.0.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-remotes@1.2.0",
          "component-consoler@2.0.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-remotes@1.2.0",
          "component-validator@1.1.1",
          "component-consoler@2.0.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-validator@1.1.1",
          "component-consoler@2.0.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "component-consoler@2.0.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "component-remotes@1.2.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "component-remotes@1.2.0",
          "component-consoler@2.0.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-remotes@1.2.0",
          "component-validator@1.1.1",
          "component-consoler@2.0.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-remotes@1.2.0",
          "component-validator@1.1.1",
          "component-consoler@2.0.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-remotes@1.2.0",
          "component-validator@1.1.1",
          "component-consoler@2.0.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-remotes@1.2.0",
          "component-validator@1.1.1",
          "component-consoler@2.0.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:debug:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            ">=1.0.0 <2.6.9",
            ">=3.0.0 <3.1.0",
            ">=3.2.0 <3.2.7",
            ">=4.0.0 <4.3.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.6.9",
          "3.1.0",
          "3.2.7",
          "4.3.1"
        ],
        "patches": [
          {
            "id": "patch:npm:debug:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
            ],
            "version": ">= 3.0.0 <=3.0.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.872397Z"
          },
          {
            "id": "patch:npm:debug:20170905:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.5.1 <2.6.9",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.873422Z"
          },
          {
            "id": "patch:npm:debug:20170905:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.4.0 <2.5.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.874399Z"
          },
          {
            "id": "patch:npm:debug:20170905:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
            ],
            "version": ">=2.0.0 <2.4.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.875363Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "className": null,
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "debug",
        "references": [
          {
            "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/debug/issues/501",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/visionmedia/debug/pull/504",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
            "title": "GitHub Release Notes 2.6.9"
          },
          {
            "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
            "title": "GitHub Release Notes 3.1.0"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:27.189371Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:57.132789Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.320399Z"
          }
        ],
        "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
        "epssDetails": {
          "percentile": "0.70002",
          "probability": "0.00296",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16137"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "534"
          ],
          "GHSA": [
            "GHSA-gxpj-cx7g-858c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-DEBUG-10762",
            "SNYK-JS-DEBUG-10762",
            "npm:debug:20170905"
          ]
        },
        "packageName": "debug",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              ">= 2.5.0 <2.6.9",
              ">=3.0.0 <3.1.0"
            ],
            "functionId": {
              "filePath": "src/node.js",
              "functionName": "exports.formatters.o"
            }
          },
          {
            "version": [
              ">=1.0.0 <2.5.0"
            ],
            "functionId": {
              "filePath": "node.js",
              "functionName": "exports.formatters.o"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-DEBUG-10762"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-26T03:55:05Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:47.320399Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "component-remotes@1.2.0",
          "component-validator@1.1.1",
          "component-consoler@2.0.0",
          "debug@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "debug",
        "version": "4.1.1"
      },
      {
        "id": "npm:extend:20180424",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.2",
            ">=3.0.0 <3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.0.2",
          "3.0.2"
        ],
        "patches": [
          {
            "id": "patch:npm:extend:20180424:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/extend/20180424/extend_20180424_0_0_0e68e71d93507fcc391e398bc84abd0666b28190.patch"
            ],
            "version": ">=3.0.0 <3.0.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.727650Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "module.exports"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "extend",
        "references": [
          {
            "url": "https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/justmoon/node-extend/pull/48%23issuecomment-398261612",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/381185",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:34.732461Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "description": "## Overview\n[extend](https://www.npmjs.com/package/extend) is a port of the classic extend() method from jQuery.\n\nAffected versions of this package are vulnerable to Prototype Pollution. Utilities function can be tricked into modifying the prototype of \"Object\" when the attacker control part of the structure passed to these function. This can let an attacker add or modify existing property that will exist on all object.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `extend` to version 2.0.2, 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190)\n- [GitHub PR](https://github.com/justmoon/node-extend/pull/48#issuecomment-398261612)\n- [HackerOne Report](https://hackerone.com/reports/381185)\n",
        "epssDetails": {
          "percentile": "0.74109",
          "probability": "0.00390",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-16492"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "NSP": [
            "996"
          ],
          "GHSA": [
            "GHSA-qrmc-fj45-qfc2"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-EXTEND-12179",
            "SNYK-JS-EXTEND-12179",
            "npm:extend:20180424"
          ]
        },
        "packageName": "extend",
        "proprietary": false,
        "creationTime": "2018-07-23T17:51:10.908000Z",
        "functions_new": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "module.exports"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-EXTEND-12179"
        ],
        "disclosureTime": "2018-04-24T17:51:10Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-07-23T13:46:08Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:02.573245Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "superagent@0.17.0",
          "extend@1.2.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "extend",
        "version": "1.2.1"
      },
      {
        "id": "npm:extend:20180424",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.2",
            ">=3.0.0 <3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.0.2",
          "3.0.2"
        ],
        "patches": [
          {
            "id": "patch:npm:extend:20180424:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/extend/20180424/extend_20180424_0_0_0e68e71d93507fcc391e398bc84abd0666b28190.patch"
            ],
            "version": ">=3.0.0 <3.0.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.727650Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "module.exports"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "extend",
        "references": [
          {
            "url": "https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/justmoon/node-extend/pull/48%23issuecomment-398261612",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/381185",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:34.732461Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "description": "## Overview\n[extend](https://www.npmjs.com/package/extend) is a port of the classic extend() method from jQuery.\n\nAffected versions of this package are vulnerable to Prototype Pollution. Utilities function can be tricked into modifying the prototype of \"Object\" when the attacker control part of the structure passed to these function. This can let an attacker add or modify existing property that will exist on all object.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `extend` to version 2.0.2, 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190)\n- [GitHub PR](https://github.com/justmoon/node-extend/pull/48#issuecomment-398261612)\n- [HackerOne Report](https://hackerone.com/reports/381185)\n",
        "epssDetails": {
          "percentile": "0.74109",
          "probability": "0.00390",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-16492"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "NSP": [
            "996"
          ],
          "GHSA": [
            "GHSA-qrmc-fj45-qfc2"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-EXTEND-12179",
            "SNYK-JS-EXTEND-12179",
            "npm:extend:20180424"
          ]
        },
        "packageName": "extend",
        "proprietary": false,
        "creationTime": "2018-07-23T17:51:10.908000Z",
        "functions_new": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "module.exports"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-EXTEND-12179"
        ],
        "disclosureTime": "2018-04-24T17:51:10Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-07-23T13:46:08Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:02.573245Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "extend@1.2.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "extend",
        "version": "1.2.1"
      },
      {
        "id": "npm:extend:20180424",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.2",
            ">=3.0.0 <3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.0.2",
          "3.0.2"
        ],
        "patches": [
          {
            "id": "patch:npm:extend:20180424:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/extend/20180424/extend_20180424_0_0_0e68e71d93507fcc391e398bc84abd0666b28190.patch"
            ],
            "version": ">=3.0.0 <3.0.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.727650Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "module.exports"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "extend",
        "references": [
          {
            "url": "https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/justmoon/node-extend/pull/48%23issuecomment-398261612",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/381185",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:34.732461Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "description": "## Overview\n[extend](https://www.npmjs.com/package/extend) is a port of the classic extend() method from jQuery.\n\nAffected versions of this package are vulnerable to Prototype Pollution. Utilities function can be tricked into modifying the prototype of \"Object\" when the attacker control part of the structure passed to these function. This can let an attacker add or modify existing property that will exist on all object.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `extend` to version 2.0.2, 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190)\n- [GitHub PR](https://github.com/justmoon/node-extend/pull/48#issuecomment-398261612)\n- [HackerOne Report](https://hackerone.com/reports/381185)\n",
        "epssDetails": {
          "percentile": "0.74109",
          "probability": "0.00390",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-16492"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "NSP": [
            "996"
          ],
          "GHSA": [
            "GHSA-qrmc-fj45-qfc2"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-EXTEND-12179",
            "SNYK-JS-EXTEND-12179",
            "npm:extend:20180424"
          ]
        },
        "packageName": "extend",
        "proprietary": false,
        "creationTime": "2018-07-23T17:51:10.908000Z",
        "functions_new": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "module.exports"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-EXTEND-12179"
        ],
        "disclosureTime": "2018-04-24T17:51:10Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-07-23T13:46:08Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:02.573245Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-search2@1.1.1",
          "cogent@0.4.3",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "extend@1.2.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "extend",
        "version": "1.2.1"
      },
      {
        "id": "npm:extend:20180424",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.2",
            ">=3.0.0 <3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.0.2",
          "3.0.2"
        ],
        "patches": [
          {
            "id": "patch:npm:extend:20180424:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/extend/20180424/extend_20180424_0_0_0e68e71d93507fcc391e398bc84abd0666b28190.patch"
            ],
            "version": ">=3.0.0 <3.0.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.727650Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "module.exports"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "extend",
        "references": [
          {
            "url": "https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/justmoon/node-extend/pull/48%23issuecomment-398261612",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/381185",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:34.732461Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "description": "## Overview\n[extend](https://www.npmjs.com/package/extend) is a port of the classic extend() method from jQuery.\n\nAffected versions of this package are vulnerable to Prototype Pollution. Utilities function can be tricked into modifying the prototype of \"Object\" when the attacker control part of the structure passed to these function. This can let an attacker add or modify existing property that will exist on all object.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `extend` to version 2.0.2, 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190)\n- [GitHub PR](https://github.com/justmoon/node-extend/pull/48#issuecomment-398261612)\n- [HackerOne Report](https://hackerone.com/reports/381185)\n",
        "epssDetails": {
          "percentile": "0.74109",
          "probability": "0.00390",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-16492"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "NSP": [
            "996"
          ],
          "GHSA": [
            "GHSA-qrmc-fj45-qfc2"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-EXTEND-12179",
            "SNYK-JS-EXTEND-12179",
            "npm:extend:20180424"
          ]
        },
        "packageName": "extend",
        "proprietary": false,
        "creationTime": "2018-07-23T17:51:10.908000Z",
        "functions_new": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "module.exports"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-EXTEND-12179"
        ],
        "disclosureTime": "2018-04-24T17:51:10Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-07-23T13:46:08Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:02.573245Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "socks-proxy-agent@1.0.2",
          "extend@1.2.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "extend",
        "version": "1.2.1"
      },
      {
        "id": "npm:extend:20180424",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.2",
            ">=3.0.0 <3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.0.2",
          "3.0.2"
        ],
        "patches": [
          {
            "id": "patch:npm:extend:20180424:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/extend/20180424/extend_20180424_0_0_0e68e71d93507fcc391e398bc84abd0666b28190.patch"
            ],
            "version": ">=3.0.0 <3.0.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.727650Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "module.exports"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "extend",
        "references": [
          {
            "url": "https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/justmoon/node-extend/pull/48%23issuecomment-398261612",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/381185",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:34.732461Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "description": "## Overview\n[extend](https://www.npmjs.com/package/extend) is a port of the classic extend() method from jQuery.\n\nAffected versions of this package are vulnerable to Prototype Pollution. Utilities function can be tricked into modifying the prototype of \"Object\" when the attacker control part of the structure passed to these function. This can let an attacker add or modify existing property that will exist on all object.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `extend` to version 2.0.2, 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190)\n- [GitHub PR](https://github.com/justmoon/node-extend/pull/48#issuecomment-398261612)\n- [HackerOne Report](https://hackerone.com/reports/381185)\n",
        "epssDetails": {
          "percentile": "0.74109",
          "probability": "0.00390",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-16492"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "NSP": [
            "996"
          ],
          "GHSA": [
            "GHSA-qrmc-fj45-qfc2"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-EXTEND-12179",
            "SNYK-JS-EXTEND-12179",
            "npm:extend:20180424"
          ]
        },
        "packageName": "extend",
        "proprietary": false,
        "creationTime": "2018-07-23T17:51:10.908000Z",
        "functions_new": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "module.exports"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-EXTEND-12179"
        ],
        "disclosureTime": "2018-04-24T17:51:10Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-07-23T13:46:08Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:02.573245Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-search2@1.1.1",
          "cogent@0.4.3",
          "proxy-agent@1.1.1",
          "socks-proxy-agent@1.0.2",
          "extend@1.2.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "extend",
        "version": "1.2.1"
      },
      {
        "id": "npm:extend:20180424",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.2",
            ">=3.0.0 <3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.0.2",
          "3.0.2"
        ],
        "patches": [
          {
            "id": "patch:npm:extend:20180424:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/extend/20180424/extend_20180424_0_0_0e68e71d93507fcc391e398bc84abd0666b28190.patch"
            ],
            "version": ">=3.0.0 <3.0.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.727650Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "module.exports"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "extend",
        "references": [
          {
            "url": "https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/justmoon/node-extend/pull/48%23issuecomment-398261612",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/381185",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:34.732461Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "description": "## Overview\n[extend](https://www.npmjs.com/package/extend) is a port of the classic extend() method from jQuery.\n\nAffected versions of this package are vulnerable to Prototype Pollution. Utilities function can be tricked into modifying the prototype of \"Object\" when the attacker control part of the structure passed to these function. This can let an attacker add or modify existing property that will exist on all object.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `extend` to version 2.0.2, 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190)\n- [GitHub PR](https://github.com/justmoon/node-extend/pull/48#issuecomment-398261612)\n- [HackerOne Report](https://hackerone.com/reports/381185)\n",
        "epssDetails": {
          "percentile": "0.74109",
          "probability": "0.00390",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-16492"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "NSP": [
            "996"
          ],
          "GHSA": [
            "GHSA-qrmc-fj45-qfc2"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-EXTEND-12179",
            "SNYK-JS-EXTEND-12179",
            "npm:extend:20180424"
          ]
        },
        "packageName": "extend",
        "proprietary": false,
        "creationTime": "2018-07-23T17:51:10.908000Z",
        "functions_new": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "module.exports"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-EXTEND-12179"
        ],
        "disclosureTime": "2018-04-24T17:51:10Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-07-23T13:46:08Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:02.573245Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "extend@1.2.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "extend",
        "version": "1.2.1"
      },
      {
        "id": "npm:extend:20180424",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.2",
            ">=3.0.0 <3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.0.2",
          "3.0.2"
        ],
        "patches": [
          {
            "id": "patch:npm:extend:20180424:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/extend/20180424/extend_20180424_0_0_0e68e71d93507fcc391e398bc84abd0666b28190.patch"
            ],
            "version": ">=3.0.0 <3.0.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.727650Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "module.exports"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "extend",
        "references": [
          {
            "url": "https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/justmoon/node-extend/pull/48%23issuecomment-398261612",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/381185",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:34.732461Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "description": "## Overview\n[extend](https://www.npmjs.com/package/extend) is a port of the classic extend() method from jQuery.\n\nAffected versions of this package are vulnerable to Prototype Pollution. Utilities function can be tricked into modifying the prototype of \"Object\" when the attacker control part of the structure passed to these function. This can let an attacker add or modify existing property that will exist on all object.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `extend` to version 2.0.2, 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190)\n- [GitHub PR](https://github.com/justmoon/node-extend/pull/48#issuecomment-398261612)\n- [HackerOne Report](https://hackerone.com/reports/381185)\n",
        "epssDetails": {
          "percentile": "0.74109",
          "probability": "0.00390",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-16492"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "NSP": [
            "996"
          ],
          "GHSA": [
            "GHSA-qrmc-fj45-qfc2"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-EXTEND-12179",
            "SNYK-JS-EXTEND-12179",
            "npm:extend:20180424"
          ]
        },
        "packageName": "extend",
        "proprietary": false,
        "creationTime": "2018-07-23T17:51:10.908000Z",
        "functions_new": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "module.exports"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-EXTEND-12179"
        ],
        "disclosureTime": "2018-04-24T17:51:10Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-07-23T13:46:08Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:02.573245Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "extend@1.2.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "extend",
        "version": "1.2.1"
      },
      {
        "id": "npm:extend:20180424",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.2",
            ">=3.0.0 <3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.0.2",
          "3.0.2"
        ],
        "patches": [
          {
            "id": "patch:npm:extend:20180424:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/extend/20180424/extend_20180424_0_0_0e68e71d93507fcc391e398bc84abd0666b28190.patch"
            ],
            "version": ">=3.0.0 <3.0.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.727650Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "module.exports"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "extend",
        "references": [
          {
            "url": "https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/justmoon/node-extend/pull/48%23issuecomment-398261612",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/381185",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:34.732461Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "description": "## Overview\n[extend](https://www.npmjs.com/package/extend) is a port of the classic extend() method from jQuery.\n\nAffected versions of this package are vulnerable to Prototype Pollution. Utilities function can be tricked into modifying the prototype of \"Object\" when the attacker control part of the structure passed to these function. This can let an attacker add or modify existing property that will exist on all object.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `extend` to version 2.0.2, 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190)\n- [GitHub PR](https://github.com/justmoon/node-extend/pull/48#issuecomment-398261612)\n- [HackerOne Report](https://hackerone.com/reports/381185)\n",
        "epssDetails": {
          "percentile": "0.74109",
          "probability": "0.00390",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-16492"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "NSP": [
            "996"
          ],
          "GHSA": [
            "GHSA-qrmc-fj45-qfc2"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-EXTEND-12179",
            "SNYK-JS-EXTEND-12179",
            "npm:extend:20180424"
          ]
        },
        "packageName": "extend",
        "proprietary": false,
        "creationTime": "2018-07-23T17:51:10.908000Z",
        "functions_new": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "module.exports"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-EXTEND-12179"
        ],
        "disclosureTime": "2018-04-24T17:51:10Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-07-23T13:46:08Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:02.573245Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "extend@1.2.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "extend",
        "version": "1.2.1"
      },
      {
        "id": "npm:extend:20180424",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.2",
            ">=3.0.0 <3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.0.2",
          "3.0.2"
        ],
        "patches": [
          {
            "id": "patch:npm:extend:20180424:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/extend/20180424/extend_20180424_0_0_0e68e71d93507fcc391e398bc84abd0666b28190.patch"
            ],
            "version": ">=3.0.0 <3.0.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.727650Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "module.exports"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "extend",
        "references": [
          {
            "url": "https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/justmoon/node-extend/pull/48%23issuecomment-398261612",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/381185",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:34.732461Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "description": "## Overview\n[extend](https://www.npmjs.com/package/extend) is a port of the classic extend() method from jQuery.\n\nAffected versions of this package are vulnerable to Prototype Pollution. Utilities function can be tricked into modifying the prototype of \"Object\" when the attacker control part of the structure passed to these function. This can let an attacker add or modify existing property that will exist on all object.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `extend` to version 2.0.2, 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190)\n- [GitHub PR](https://github.com/justmoon/node-extend/pull/48#issuecomment-398261612)\n- [HackerOne Report](https://hackerone.com/reports/381185)\n",
        "epssDetails": {
          "percentile": "0.74109",
          "probability": "0.00390",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-16492"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "NSP": [
            "996"
          ],
          "GHSA": [
            "GHSA-qrmc-fj45-qfc2"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-EXTEND-12179",
            "SNYK-JS-EXTEND-12179",
            "npm:extend:20180424"
          ]
        },
        "packageName": "extend",
        "proprietary": false,
        "creationTime": "2018-07-23T17:51:10.908000Z",
        "functions_new": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "module.exports"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-EXTEND-12179"
        ],
        "disclosureTime": "2018-04-24T17:51:10Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-07-23T13:46:08Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:02.573245Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "extend@1.2.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "extend",
        "version": "1.2.1"
      },
      {
        "id": "npm:extend:20180424",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.2",
            ">=3.0.0 <3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.0.2",
          "3.0.2"
        ],
        "patches": [
          {
            "id": "patch:npm:extend:20180424:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/extend/20180424/extend_20180424_0_0_0e68e71d93507fcc391e398bc84abd0666b28190.patch"
            ],
            "version": ">=3.0.0 <3.0.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.727650Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "module.exports"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "extend",
        "references": [
          {
            "url": "https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/justmoon/node-extend/pull/48%23issuecomment-398261612",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/381185",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:34.732461Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "description": "## Overview\n[extend](https://www.npmjs.com/package/extend) is a port of the classic extend() method from jQuery.\n\nAffected versions of this package are vulnerable to Prototype Pollution. Utilities function can be tricked into modifying the prototype of \"Object\" when the attacker control part of the structure passed to these function. This can let an attacker add or modify existing property that will exist on all object.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `extend` to version 2.0.2, 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190)\n- [GitHub PR](https://github.com/justmoon/node-extend/pull/48#issuecomment-398261612)\n- [HackerOne Report](https://hackerone.com/reports/381185)\n",
        "epssDetails": {
          "percentile": "0.74109",
          "probability": "0.00390",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-16492"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "NSP": [
            "996"
          ],
          "GHSA": [
            "GHSA-qrmc-fj45-qfc2"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-EXTEND-12179",
            "SNYK-JS-EXTEND-12179",
            "npm:extend:20180424"
          ]
        },
        "packageName": "extend",
        "proprietary": false,
        "creationTime": "2018-07-23T17:51:10.908000Z",
        "functions_new": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "module.exports"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-EXTEND-12179"
        ],
        "disclosureTime": "2018-04-24T17:51:10Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-07-23T13:46:08Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:02.573245Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "socks-proxy-agent@1.0.2",
          "extend@1.2.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "extend",
        "version": "1.2.1"
      },
      {
        "id": "npm:extend:20180424",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.2",
            ">=3.0.0 <3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.0.2",
          "3.0.2"
        ],
        "patches": [
          {
            "id": "patch:npm:extend:20180424:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/extend/20180424/extend_20180424_0_0_0e68e71d93507fcc391e398bc84abd0666b28190.patch"
            ],
            "version": ">=3.0.0 <3.0.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.727650Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "module.exports"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "extend",
        "references": [
          {
            "url": "https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/justmoon/node-extend/pull/48%23issuecomment-398261612",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/381185",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:34.732461Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "description": "## Overview\n[extend](https://www.npmjs.com/package/extend) is a port of the classic extend() method from jQuery.\n\nAffected versions of this package are vulnerable to Prototype Pollution. Utilities function can be tricked into modifying the prototype of \"Object\" when the attacker control part of the structure passed to these function. This can let an attacker add or modify existing property that will exist on all object.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `extend` to version 2.0.2, 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190)\n- [GitHub PR](https://github.com/justmoon/node-extend/pull/48#issuecomment-398261612)\n- [HackerOne Report](https://hackerone.com/reports/381185)\n",
        "epssDetails": {
          "percentile": "0.74109",
          "probability": "0.00390",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-16492"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "NSP": [
            "996"
          ],
          "GHSA": [
            "GHSA-qrmc-fj45-qfc2"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-EXTEND-12179",
            "SNYK-JS-EXTEND-12179",
            "npm:extend:20180424"
          ]
        },
        "packageName": "extend",
        "proprietary": false,
        "creationTime": "2018-07-23T17:51:10.908000Z",
        "functions_new": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "module.exports"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-EXTEND-12179"
        ],
        "disclosureTime": "2018-04-24T17:51:10Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-07-23T13:46:08Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:02.573245Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "socks-proxy-agent@1.0.2",
          "extend@1.2.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "extend",
        "version": "1.2.1"
      },
      {
        "id": "npm:extend:20180424",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.2",
            ">=3.0.0 <3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.0.2",
          "3.0.2"
        ],
        "patches": [
          {
            "id": "patch:npm:extend:20180424:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/extend/20180424/extend_20180424_0_0_0e68e71d93507fcc391e398bc84abd0666b28190.patch"
            ],
            "version": ">=3.0.0 <3.0.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.727650Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "module.exports"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "extend",
        "references": [
          {
            "url": "https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/justmoon/node-extend/pull/48%23issuecomment-398261612",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/381185",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:34.732461Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "description": "## Overview\n[extend](https://www.npmjs.com/package/extend) is a port of the classic extend() method from jQuery.\n\nAffected versions of this package are vulnerable to Prototype Pollution. Utilities function can be tricked into modifying the prototype of \"Object\" when the attacker control part of the structure passed to these function. This can let an attacker add or modify existing property that will exist on all object.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `extend` to version 2.0.2, 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190)\n- [GitHub PR](https://github.com/justmoon/node-extend/pull/48#issuecomment-398261612)\n- [HackerOne Report](https://hackerone.com/reports/381185)\n",
        "epssDetails": {
          "percentile": "0.74109",
          "probability": "0.00390",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-16492"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "NSP": [
            "996"
          ],
          "GHSA": [
            "GHSA-qrmc-fj45-qfc2"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-EXTEND-12179",
            "SNYK-JS-EXTEND-12179",
            "npm:extend:20180424"
          ]
        },
        "packageName": "extend",
        "proprietary": false,
        "creationTime": "2018-07-23T17:51:10.908000Z",
        "functions_new": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "module.exports"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-EXTEND-12179"
        ],
        "disclosureTime": "2018-04-24T17:51:10Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-07-23T13:46:08Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:02.573245Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "socks-proxy-agent@1.0.2",
          "extend@1.2.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "extend",
        "version": "1.2.1"
      },
      {
        "id": "npm:extend:20180424",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.2",
            ">=3.0.0 <3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.0.2",
          "3.0.2"
        ],
        "patches": [
          {
            "id": "patch:npm:extend:20180424:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/extend/20180424/extend_20180424_0_0_0e68e71d93507fcc391e398bc84abd0666b28190.patch"
            ],
            "version": ">=3.0.0 <3.0.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.727650Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "module.exports"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "extend",
        "references": [
          {
            "url": "https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/justmoon/node-extend/pull/48%23issuecomment-398261612",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/381185",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:34.732461Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "description": "## Overview\n[extend](https://www.npmjs.com/package/extend) is a port of the classic extend() method from jQuery.\n\nAffected versions of this package are vulnerable to Prototype Pollution. Utilities function can be tricked into modifying the prototype of \"Object\" when the attacker control part of the structure passed to these function. This can let an attacker add or modify existing property that will exist on all object.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `extend` to version 2.0.2, 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190)\n- [GitHub PR](https://github.com/justmoon/node-extend/pull/48#issuecomment-398261612)\n- [HackerOne Report](https://hackerone.com/reports/381185)\n",
        "epssDetails": {
          "percentile": "0.74109",
          "probability": "0.00390",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-16492"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "NSP": [
            "996"
          ],
          "GHSA": [
            "GHSA-qrmc-fj45-qfc2"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-EXTEND-12179",
            "SNYK-JS-EXTEND-12179",
            "npm:extend:20180424"
          ]
        },
        "packageName": "extend",
        "proprietary": false,
        "creationTime": "2018-07-23T17:51:10.908000Z",
        "functions_new": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "module.exports"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-EXTEND-12179"
        ],
        "disclosureTime": "2018-04-24T17:51:10Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-07-23T13:46:08Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:02.573245Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "socks-proxy-agent@1.0.2",
          "extend@1.2.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "extend",
        "version": "1.2.1"
      },
      {
        "id": "npm:extend:20180424",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.2",
            ">=3.0.0 <3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.0.2",
          "3.0.2"
        ],
        "patches": [
          {
            "id": "patch:npm:extend:20180424:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/extend/20180424/extend_20180424_0_0_0e68e71d93507fcc391e398bc84abd0666b28190.patch"
            ],
            "version": ">=3.0.0 <3.0.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.727650Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "module.exports"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "extend",
        "references": [
          {
            "url": "https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/justmoon/node-extend/pull/48%23issuecomment-398261612",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/381185",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:34.732461Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "description": "## Overview\n[extend](https://www.npmjs.com/package/extend) is a port of the classic extend() method from jQuery.\n\nAffected versions of this package are vulnerable to Prototype Pollution. Utilities function can be tricked into modifying the prototype of \"Object\" when the attacker control part of the structure passed to these function. This can let an attacker add or modify existing property that will exist on all object.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `extend` to version 2.0.2, 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190)\n- [GitHub PR](https://github.com/justmoon/node-extend/pull/48#issuecomment-398261612)\n- [HackerOne Report](https://hackerone.com/reports/381185)\n",
        "epssDetails": {
          "percentile": "0.74109",
          "probability": "0.00390",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-16492"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "NSP": [
            "996"
          ],
          "GHSA": [
            "GHSA-qrmc-fj45-qfc2"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-EXTEND-12179",
            "SNYK-JS-EXTEND-12179",
            "npm:extend:20180424"
          ]
        },
        "packageName": "extend",
        "proprietary": false,
        "creationTime": "2018-07-23T17:51:10.908000Z",
        "functions_new": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "module.exports"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-EXTEND-12179"
        ],
        "disclosureTime": "2018-04-24T17:51:10Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-07-23T13:46:08Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:02.573245Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "pac-proxy-agent@0.2.0",
          "extend@1.2.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "extend",
        "version": "1.2.1"
      },
      {
        "id": "npm:extend:20180424",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.2",
            ">=3.0.0 <3.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.0.2",
          "3.0.2"
        ],
        "patches": [
          {
            "id": "patch:npm:extend:20180424:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/extend/20180424/extend_20180424_0_0_0e68e71d93507fcc391e398bc84abd0666b28190.patch"
            ],
            "version": ">=3.0.0 <3.0.2",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.727650Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "module.exports"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "extend",
        "references": [
          {
            "url": "https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/justmoon/node-extend/pull/48%23issuecomment-398261612",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/381185",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:34.732461Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:47:54.158156Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:02.573245Z"
          }
        ],
        "description": "## Overview\n[extend](https://www.npmjs.com/package/extend) is a port of the classic extend() method from jQuery.\n\nAffected versions of this package are vulnerable to Prototype Pollution. Utilities function can be tricked into modifying the prototype of \"Object\" when the attacker control part of the structure passed to these function. This can let an attacker add or modify existing property that will exist on all object.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `extend` to version 2.0.2, 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190)\n- [GitHub PR](https://github.com/justmoon/node-extend/pull/48#issuecomment-398261612)\n- [HackerOne Report](https://hackerone.com/reports/381185)\n",
        "epssDetails": {
          "percentile": "0.74109",
          "probability": "0.00390",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-16492"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "NSP": [
            "996"
          ],
          "GHSA": [
            "GHSA-qrmc-fj45-qfc2"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-EXTEND-12179",
            "SNYK-JS-EXTEND-12179",
            "npm:extend:20180424"
          ]
        },
        "packageName": "extend",
        "proprietary": false,
        "creationTime": "2018-07-23T17:51:10.908000Z",
        "functions_new": [
          {
            "version": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "module.exports"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-EXTEND-12179"
        ],
        "disclosureTime": "2018-04-24T17:51:10Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-07-23T13:46:08Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:02.573245Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "socks-proxy-agent@1.0.2",
          "extend@1.2.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "extend",
        "version": "1.2.1"
      },
      {
        "id": "npm:http-proxy-agent:20180406",
        "title": "Uninitialized Memory Exposure",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
        "credit": [
          "ChALkeR"
        ],
        "semver": {
          "vulnerable": [
            "<2.1.0"
          ]
        },
        "exploit": "Functional",
        "fixedIn": [
          "2.1.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "http-proxy-agent",
        "references": [
          {
            "url": "https://hackerone.com/reports/321631",
            "title": "HackerOne Report"
          },
          {
            "url": "https://github.com/TooTallNate/node-http-proxy-agent/blob/2.0.0/index.js%23L80",
            "title": "Vulenrable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:47:22.687401Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:51:19.528519Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:57.860782Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:47:22.687401Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:51:19.528519Z"
          }
        ],
        "description": "## Overview\r\n[http-proxy-agent](https://www.npmjs.com/package/http-proxy-agent) provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in http module.\r\n\r\nAffected versions of this package are vulnerable to Uninitialized Memory Exposure and Denial of Service (DoS) attacks due to passing unsanitized options to Buffer(arg).\r\n\r\n## Uninitialized memory Exposre PoC by ChALKer\r\n```js\r\n// listen with: nc -l -p 8080\r\n\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxy = {\r\n  protocol: 'http:',\r\n  host: \"127.0.0.1\",\r\n  port: 8080\r\n};\r\n\r\nproxy.auth = 500; // a number as 'auth'\r\nvar opts = url.parse('https://example.com/');\r\nvar agent = new HttpsProxyAgent(proxy);\r\nopts.agent = agent;\r\nhttps.get(opts);\r\n```\r\n## Details\r\nThe Buffer class on Node.js is a mutable array of binary data, and can be initialized with a string, array or number.\r\n```js\r\nconst buf1 = new Buffer([1,2,3]);\r\n// creates a buffer containing [01, 02, 03]\r\nconst buf2 = new Buffer('test');\r\n// creates a buffer containing ASCII bytes [74, 65, 73, 74]\r\nconst buf3 = new Buffer(10);\r\n// creates a buffer of length 10\r\n```\r\n\r\nThe first two variants simply create a binary representation of the value it received. The last one, however, pre-allocates a buffer of the specified size, making it a useful buffer, especially when reading data from a stream.\r\nWhen using the number constructor of Buffer, it will allocate the memory, but will not fill it with zeros. Instead, the allocated buffer will hold whatever was in memory at the time. If the buffer is not `zeroed` by using `buf.fill(0)`, it may leak sensitive information like keys, source code, and system info.\r\n\r\n\r\n## Remediation\r\nUpgrade `https-proxy-agent` to version 2.1.0 or higher.\r\n**Note** This is vulnerable only for Node <=4\r\n\r\n## References\r\n- [HackerOne Report](https://hackerone.com/reports/321631)",
        "epssDetails": {
          "percentile": "0.62404",
          "probability": "0.00235",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2019-10196"
          ],
          "CWE": [
            "CWE-399",
            "CWE-665"
          ],
          "NSP": [
            "607"
          ],
          "GHSA": [
            "GHSA-8w57-jfpm-945m"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-HTTPPROXYAGENT-12115",
            "SNYK-JS-HTTPPROXYAGENT-12115",
            "npm:http-proxy-agent:20180406"
          ]
        },
        "packageName": "http-proxy-agent",
        "proprietary": false,
        "creationTime": "2018-03-03T08:09:56.416000Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-HTTPPROXYAGENT-12115"
        ],
        "disclosureTime": "2018-04-06T08:09:56Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Functional",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-04-09T15:17:27Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.528519Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "http-proxy-agent@0.2.7"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "http-proxy-agent",
        "version": "0.2.7"
      },
      {
        "id": "npm:http-proxy-agent:20180406",
        "title": "Uninitialized Memory Exposure",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
        "credit": [
          "ChALkeR"
        ],
        "semver": {
          "vulnerable": [
            "<2.1.0"
          ]
        },
        "exploit": "Functional",
        "fixedIn": [
          "2.1.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "http-proxy-agent",
        "references": [
          {
            "url": "https://hackerone.com/reports/321631",
            "title": "HackerOne Report"
          },
          {
            "url": "https://github.com/TooTallNate/node-http-proxy-agent/blob/2.0.0/index.js%23L80",
            "title": "Vulenrable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:47:22.687401Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:51:19.528519Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:57.860782Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:47:22.687401Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:51:19.528519Z"
          }
        ],
        "description": "## Overview\r\n[http-proxy-agent](https://www.npmjs.com/package/http-proxy-agent) provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in http module.\r\n\r\nAffected versions of this package are vulnerable to Uninitialized Memory Exposure and Denial of Service (DoS) attacks due to passing unsanitized options to Buffer(arg).\r\n\r\n## Uninitialized memory Exposre PoC by ChALKer\r\n```js\r\n// listen with: nc -l -p 8080\r\n\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxy = {\r\n  protocol: 'http:',\r\n  host: \"127.0.0.1\",\r\n  port: 8080\r\n};\r\n\r\nproxy.auth = 500; // a number as 'auth'\r\nvar opts = url.parse('https://example.com/');\r\nvar agent = new HttpsProxyAgent(proxy);\r\nopts.agent = agent;\r\nhttps.get(opts);\r\n```\r\n## Details\r\nThe Buffer class on Node.js is a mutable array of binary data, and can be initialized with a string, array or number.\r\n```js\r\nconst buf1 = new Buffer([1,2,3]);\r\n// creates a buffer containing [01, 02, 03]\r\nconst buf2 = new Buffer('test');\r\n// creates a buffer containing ASCII bytes [74, 65, 73, 74]\r\nconst buf3 = new Buffer(10);\r\n// creates a buffer of length 10\r\n```\r\n\r\nThe first two variants simply create a binary representation of the value it received. The last one, however, pre-allocates a buffer of the specified size, making it a useful buffer, especially when reading data from a stream.\r\nWhen using the number constructor of Buffer, it will allocate the memory, but will not fill it with zeros. Instead, the allocated buffer will hold whatever was in memory at the time. If the buffer is not `zeroed` by using `buf.fill(0)`, it may leak sensitive information like keys, source code, and system info.\r\n\r\n\r\n## Remediation\r\nUpgrade `https-proxy-agent` to version 2.1.0 or higher.\r\n**Note** This is vulnerable only for Node <=4\r\n\r\n## References\r\n- [HackerOne Report](https://hackerone.com/reports/321631)",
        "epssDetails": {
          "percentile": "0.62404",
          "probability": "0.00235",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2019-10196"
          ],
          "CWE": [
            "CWE-399",
            "CWE-665"
          ],
          "NSP": [
            "607"
          ],
          "GHSA": [
            "GHSA-8w57-jfpm-945m"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-HTTPPROXYAGENT-12115",
            "SNYK-JS-HTTPPROXYAGENT-12115",
            "npm:http-proxy-agent:20180406"
          ]
        },
        "packageName": "http-proxy-agent",
        "proprietary": false,
        "creationTime": "2018-03-03T08:09:56.416000Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-HTTPPROXYAGENT-12115"
        ],
        "disclosureTime": "2018-04-06T08:09:56Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Functional",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-04-09T15:17:27Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.528519Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-search2@1.1.1",
          "cogent@0.4.3",
          "proxy-agent@1.1.1",
          "http-proxy-agent@0.2.7"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "http-proxy-agent",
        "version": "0.2.7"
      },
      {
        "id": "npm:http-proxy-agent:20180406",
        "title": "Uninitialized Memory Exposure",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
        "credit": [
          "ChALkeR"
        ],
        "semver": {
          "vulnerable": [
            "<2.1.0"
          ]
        },
        "exploit": "Functional",
        "fixedIn": [
          "2.1.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "http-proxy-agent",
        "references": [
          {
            "url": "https://hackerone.com/reports/321631",
            "title": "HackerOne Report"
          },
          {
            "url": "https://github.com/TooTallNate/node-http-proxy-agent/blob/2.0.0/index.js%23L80",
            "title": "Vulenrable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:47:22.687401Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:51:19.528519Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:57.860782Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:47:22.687401Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:51:19.528519Z"
          }
        ],
        "description": "## Overview\r\n[http-proxy-agent](https://www.npmjs.com/package/http-proxy-agent) provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in http module.\r\n\r\nAffected versions of this package are vulnerable to Uninitialized Memory Exposure and Denial of Service (DoS) attacks due to passing unsanitized options to Buffer(arg).\r\n\r\n## Uninitialized memory Exposre PoC by ChALKer\r\n```js\r\n// listen with: nc -l -p 8080\r\n\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxy = {\r\n  protocol: 'http:',\r\n  host: \"127.0.0.1\",\r\n  port: 8080\r\n};\r\n\r\nproxy.auth = 500; // a number as 'auth'\r\nvar opts = url.parse('https://example.com/');\r\nvar agent = new HttpsProxyAgent(proxy);\r\nopts.agent = agent;\r\nhttps.get(opts);\r\n```\r\n## Details\r\nThe Buffer class on Node.js is a mutable array of binary data, and can be initialized with a string, array or number.\r\n```js\r\nconst buf1 = new Buffer([1,2,3]);\r\n// creates a buffer containing [01, 02, 03]\r\nconst buf2 = new Buffer('test');\r\n// creates a buffer containing ASCII bytes [74, 65, 73, 74]\r\nconst buf3 = new Buffer(10);\r\n// creates a buffer of length 10\r\n```\r\n\r\nThe first two variants simply create a binary representation of the value it received. The last one, however, pre-allocates a buffer of the specified size, making it a useful buffer, especially when reading data from a stream.\r\nWhen using the number constructor of Buffer, it will allocate the memory, but will not fill it with zeros. Instead, the allocated buffer will hold whatever was in memory at the time. If the buffer is not `zeroed` by using `buf.fill(0)`, it may leak sensitive information like keys, source code, and system info.\r\n\r\n\r\n## Remediation\r\nUpgrade `https-proxy-agent` to version 2.1.0 or higher.\r\n**Note** This is vulnerable only for Node <=4\r\n\r\n## References\r\n- [HackerOne Report](https://hackerone.com/reports/321631)",
        "epssDetails": {
          "percentile": "0.62404",
          "probability": "0.00235",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2019-10196"
          ],
          "CWE": [
            "CWE-399",
            "CWE-665"
          ],
          "NSP": [
            "607"
          ],
          "GHSA": [
            "GHSA-8w57-jfpm-945m"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-HTTPPROXYAGENT-12115",
            "SNYK-JS-HTTPPROXYAGENT-12115",
            "npm:http-proxy-agent:20180406"
          ]
        },
        "packageName": "http-proxy-agent",
        "proprietary": false,
        "creationTime": "2018-03-03T08:09:56.416000Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-HTTPPROXYAGENT-12115"
        ],
        "disclosureTime": "2018-04-06T08:09:56Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Functional",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-04-09T15:17:27Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.528519Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-outdated2@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "http-proxy-agent@0.2.7"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "http-proxy-agent",
        "version": "0.2.7"
      },
      {
        "id": "npm:http-proxy-agent:20180406",
        "title": "Uninitialized Memory Exposure",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
        "credit": [
          "ChALkeR"
        ],
        "semver": {
          "vulnerable": [
            "<2.1.0"
          ]
        },
        "exploit": "Functional",
        "fixedIn": [
          "2.1.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "http-proxy-agent",
        "references": [
          {
            "url": "https://hackerone.com/reports/321631",
            "title": "HackerOne Report"
          },
          {
            "url": "https://github.com/TooTallNate/node-http-proxy-agent/blob/2.0.0/index.js%23L80",
            "title": "Vulenrable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:47:22.687401Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:51:19.528519Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:57.860782Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:47:22.687401Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:51:19.528519Z"
          }
        ],
        "description": "## Overview\r\n[http-proxy-agent](https://www.npmjs.com/package/http-proxy-agent) provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in http module.\r\n\r\nAffected versions of this package are vulnerable to Uninitialized Memory Exposure and Denial of Service (DoS) attacks due to passing unsanitized options to Buffer(arg).\r\n\r\n## Uninitialized memory Exposre PoC by ChALKer\r\n```js\r\n// listen with: nc -l -p 8080\r\n\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxy = {\r\n  protocol: 'http:',\r\n  host: \"127.0.0.1\",\r\n  port: 8080\r\n};\r\n\r\nproxy.auth = 500; // a number as 'auth'\r\nvar opts = url.parse('https://example.com/');\r\nvar agent = new HttpsProxyAgent(proxy);\r\nopts.agent = agent;\r\nhttps.get(opts);\r\n```\r\n## Details\r\nThe Buffer class on Node.js is a mutable array of binary data, and can be initialized with a string, array or number.\r\n```js\r\nconst buf1 = new Buffer([1,2,3]);\r\n// creates a buffer containing [01, 02, 03]\r\nconst buf2 = new Buffer('test');\r\n// creates a buffer containing ASCII bytes [74, 65, 73, 74]\r\nconst buf3 = new Buffer(10);\r\n// creates a buffer of length 10\r\n```\r\n\r\nThe first two variants simply create a binary representation of the value it received. The last one, however, pre-allocates a buffer of the specified size, making it a useful buffer, especially when reading data from a stream.\r\nWhen using the number constructor of Buffer, it will allocate the memory, but will not fill it with zeros. Instead, the allocated buffer will hold whatever was in memory at the time. If the buffer is not `zeroed` by using `buf.fill(0)`, it may leak sensitive information like keys, source code, and system info.\r\n\r\n\r\n## Remediation\r\nUpgrade `https-proxy-agent` to version 2.1.0 or higher.\r\n**Note** This is vulnerable only for Node <=4\r\n\r\n## References\r\n- [HackerOne Report](https://hackerone.com/reports/321631)",
        "epssDetails": {
          "percentile": "0.62404",
          "probability": "0.00235",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2019-10196"
          ],
          "CWE": [
            "CWE-399",
            "CWE-665"
          ],
          "NSP": [
            "607"
          ],
          "GHSA": [
            "GHSA-8w57-jfpm-945m"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-HTTPPROXYAGENT-12115",
            "SNYK-JS-HTTPPROXYAGENT-12115",
            "npm:http-proxy-agent:20180406"
          ]
        },
        "packageName": "http-proxy-agent",
        "proprietary": false,
        "creationTime": "2018-03-03T08:09:56.416000Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-HTTPPROXYAGENT-12115"
        ],
        "disclosureTime": "2018-04-06T08:09:56Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Functional",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-04-09T15:17:27Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.528519Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-pin@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "http-proxy-agent@0.2.7"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "http-proxy-agent",
        "version": "0.2.7"
      },
      {
        "id": "npm:http-proxy-agent:20180406",
        "title": "Uninitialized Memory Exposure",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
        "credit": [
          "ChALkeR"
        ],
        "semver": {
          "vulnerable": [
            "<2.1.0"
          ]
        },
        "exploit": "Functional",
        "fixedIn": [
          "2.1.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "http-proxy-agent",
        "references": [
          {
            "url": "https://hackerone.com/reports/321631",
            "title": "HackerOne Report"
          },
          {
            "url": "https://github.com/TooTallNate/node-http-proxy-agent/blob/2.0.0/index.js%23L80",
            "title": "Vulenrable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:47:22.687401Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:51:19.528519Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:57.860782Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:47:22.687401Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:51:19.528519Z"
          }
        ],
        "description": "## Overview\r\n[http-proxy-agent](https://www.npmjs.com/package/http-proxy-agent) provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in http module.\r\n\r\nAffected versions of this package are vulnerable to Uninitialized Memory Exposure and Denial of Service (DoS) attacks due to passing unsanitized options to Buffer(arg).\r\n\r\n## Uninitialized memory Exposre PoC by ChALKer\r\n```js\r\n// listen with: nc -l -p 8080\r\n\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxy = {\r\n  protocol: 'http:',\r\n  host: \"127.0.0.1\",\r\n  port: 8080\r\n};\r\n\r\nproxy.auth = 500; // a number as 'auth'\r\nvar opts = url.parse('https://example.com/');\r\nvar agent = new HttpsProxyAgent(proxy);\r\nopts.agent = agent;\r\nhttps.get(opts);\r\n```\r\n## Details\r\nThe Buffer class on Node.js is a mutable array of binary data, and can be initialized with a string, array or number.\r\n```js\r\nconst buf1 = new Buffer([1,2,3]);\r\n// creates a buffer containing [01, 02, 03]\r\nconst buf2 = new Buffer('test');\r\n// creates a buffer containing ASCII bytes [74, 65, 73, 74]\r\nconst buf3 = new Buffer(10);\r\n// creates a buffer of length 10\r\n```\r\n\r\nThe first two variants simply create a binary representation of the value it received. The last one, however, pre-allocates a buffer of the specified size, making it a useful buffer, especially when reading data from a stream.\r\nWhen using the number constructor of Buffer, it will allocate the memory, but will not fill it with zeros. Instead, the allocated buffer will hold whatever was in memory at the time. If the buffer is not `zeroed` by using `buf.fill(0)`, it may leak sensitive information like keys, source code, and system info.\r\n\r\n\r\n## Remediation\r\nUpgrade `https-proxy-agent` to version 2.1.0 or higher.\r\n**Note** This is vulnerable only for Node <=4\r\n\r\n## References\r\n- [HackerOne Report](https://hackerone.com/reports/321631)",
        "epssDetails": {
          "percentile": "0.62404",
          "probability": "0.00235",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2019-10196"
          ],
          "CWE": [
            "CWE-399",
            "CWE-665"
          ],
          "NSP": [
            "607"
          ],
          "GHSA": [
            "GHSA-8w57-jfpm-945m"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-HTTPPROXYAGENT-12115",
            "SNYK-JS-HTTPPROXYAGENT-12115",
            "npm:http-proxy-agent:20180406"
          ]
        },
        "packageName": "http-proxy-agent",
        "proprietary": false,
        "creationTime": "2018-03-03T08:09:56.416000Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-HTTPPROXYAGENT-12115"
        ],
        "disclosureTime": "2018-04-06T08:09:56Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Functional",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-04-09T15:17:27Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.528519Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "http-proxy-agent@0.2.7"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "http-proxy-agent",
        "version": "0.2.7"
      },
      {
        "id": "npm:http-proxy-agent:20180406",
        "title": "Uninitialized Memory Exposure",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
        "credit": [
          "ChALkeR"
        ],
        "semver": {
          "vulnerable": [
            "<2.1.0"
          ]
        },
        "exploit": "Functional",
        "fixedIn": [
          "2.1.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "http-proxy-agent",
        "references": [
          {
            "url": "https://hackerone.com/reports/321631",
            "title": "HackerOne Report"
          },
          {
            "url": "https://github.com/TooTallNate/node-http-proxy-agent/blob/2.0.0/index.js%23L80",
            "title": "Vulenrable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:47:22.687401Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:51:19.528519Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:57.860782Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:47:22.687401Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:51:19.528519Z"
          }
        ],
        "description": "## Overview\r\n[http-proxy-agent](https://www.npmjs.com/package/http-proxy-agent) provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in http module.\r\n\r\nAffected versions of this package are vulnerable to Uninitialized Memory Exposure and Denial of Service (DoS) attacks due to passing unsanitized options to Buffer(arg).\r\n\r\n## Uninitialized memory Exposre PoC by ChALKer\r\n```js\r\n// listen with: nc -l -p 8080\r\n\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxy = {\r\n  protocol: 'http:',\r\n  host: \"127.0.0.1\",\r\n  port: 8080\r\n};\r\n\r\nproxy.auth = 500; // a number as 'auth'\r\nvar opts = url.parse('https://example.com/');\r\nvar agent = new HttpsProxyAgent(proxy);\r\nopts.agent = agent;\r\nhttps.get(opts);\r\n```\r\n## Details\r\nThe Buffer class on Node.js is a mutable array of binary data, and can be initialized with a string, array or number.\r\n```js\r\nconst buf1 = new Buffer([1,2,3]);\r\n// creates a buffer containing [01, 02, 03]\r\nconst buf2 = new Buffer('test');\r\n// creates a buffer containing ASCII bytes [74, 65, 73, 74]\r\nconst buf3 = new Buffer(10);\r\n// creates a buffer of length 10\r\n```\r\n\r\nThe first two variants simply create a binary representation of the value it received. The last one, however, pre-allocates a buffer of the specified size, making it a useful buffer, especially when reading data from a stream.\r\nWhen using the number constructor of Buffer, it will allocate the memory, but will not fill it with zeros. Instead, the allocated buffer will hold whatever was in memory at the time. If the buffer is not `zeroed` by using `buf.fill(0)`, it may leak sensitive information like keys, source code, and system info.\r\n\r\n\r\n## Remediation\r\nUpgrade `https-proxy-agent` to version 2.1.0 or higher.\r\n**Note** This is vulnerable only for Node <=4\r\n\r\n## References\r\n- [HackerOne Report](https://hackerone.com/reports/321631)",
        "epssDetails": {
          "percentile": "0.62404",
          "probability": "0.00235",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2019-10196"
          ],
          "CWE": [
            "CWE-399",
            "CWE-665"
          ],
          "NSP": [
            "607"
          ],
          "GHSA": [
            "GHSA-8w57-jfpm-945m"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-HTTPPROXYAGENT-12115",
            "SNYK-JS-HTTPPROXYAGENT-12115",
            "npm:http-proxy-agent:20180406"
          ]
        },
        "packageName": "http-proxy-agent",
        "proprietary": false,
        "creationTime": "2018-03-03T08:09:56.416000Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-HTTPPROXYAGENT-12115"
        ],
        "disclosureTime": "2018-04-06T08:09:56Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Functional",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-04-09T15:17:27Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.528519Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-updater@1.0.5",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "http-proxy-agent@0.2.7"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "http-proxy-agent",
        "version": "0.2.7"
      },
      {
        "id": "npm:http-proxy-agent:20180406",
        "title": "Uninitialized Memory Exposure",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
        "credit": [
          "ChALkeR"
        ],
        "semver": {
          "vulnerable": [
            "<2.1.0"
          ]
        },
        "exploit": "Functional",
        "fixedIn": [
          "2.1.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "http-proxy-agent",
        "references": [
          {
            "url": "https://hackerone.com/reports/321631",
            "title": "HackerOne Report"
          },
          {
            "url": "https://github.com/TooTallNate/node-http-proxy-agent/blob/2.0.0/index.js%23L80",
            "title": "Vulenrable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:47:22.687401Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2024-03-11T09:51:19.528519Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:57.860782Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:47:22.687401Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:51:19.528519Z"
          }
        ],
        "description": "## Overview\r\n[http-proxy-agent](https://www.npmjs.com/package/http-proxy-agent) provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in http module.\r\n\r\nAffected versions of this package are vulnerable to Uninitialized Memory Exposure and Denial of Service (DoS) attacks due to passing unsanitized options to Buffer(arg).\r\n\r\n## Uninitialized memory Exposre PoC by ChALKer\r\n```js\r\n// listen with: nc -l -p 8080\r\n\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxy = {\r\n  protocol: 'http:',\r\n  host: \"127.0.0.1\",\r\n  port: 8080\r\n};\r\n\r\nproxy.auth = 500; // a number as 'auth'\r\nvar opts = url.parse('https://example.com/');\r\nvar agent = new HttpsProxyAgent(proxy);\r\nopts.agent = agent;\r\nhttps.get(opts);\r\n```\r\n## Details\r\nThe Buffer class on Node.js is a mutable array of binary data, and can be initialized with a string, array or number.\r\n```js\r\nconst buf1 = new Buffer([1,2,3]);\r\n// creates a buffer containing [01, 02, 03]\r\nconst buf2 = new Buffer('test');\r\n// creates a buffer containing ASCII bytes [74, 65, 73, 74]\r\nconst buf3 = new Buffer(10);\r\n// creates a buffer of length 10\r\n```\r\n\r\nThe first two variants simply create a binary representation of the value it received. The last one, however, pre-allocates a buffer of the specified size, making it a useful buffer, especially when reading data from a stream.\r\nWhen using the number constructor of Buffer, it will allocate the memory, but will not fill it with zeros. Instead, the allocated buffer will hold whatever was in memory at the time. If the buffer is not `zeroed` by using `buf.fill(0)`, it may leak sensitive information like keys, source code, and system info.\r\n\r\n\r\n## Remediation\r\nUpgrade `https-proxy-agent` to version 2.1.0 or higher.\r\n**Note** This is vulnerable only for Node <=4\r\n\r\n## References\r\n- [HackerOne Report](https://hackerone.com/reports/321631)",
        "epssDetails": {
          "percentile": "0.62404",
          "probability": "0.00235",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2019-10196"
          ],
          "CWE": [
            "CWE-399",
            "CWE-665"
          ],
          "NSP": [
            "607"
          ],
          "GHSA": [
            "GHSA-8w57-jfpm-945m"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-HTTPPROXYAGENT-12115",
            "SNYK-JS-HTTPPROXYAGENT-12115",
            "npm:http-proxy-agent:20180406"
          ]
        },
        "packageName": "http-proxy-agent",
        "proprietary": false,
        "creationTime": "2018-03-03T08:09:56.416000Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-HTTPPROXYAGENT-12115"
        ],
        "disclosureTime": "2018-04-06T08:09:56Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Functional",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-04-09T15:17:27Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:19.528519Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "component-resolver@1.3.0",
          "component-downloader@1.2.0",
          "component-remotes@1.2.0",
          "cogent@*",
          "proxy-agent@1.1.1",
          "http-proxy-agent@0.2.7"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "http-proxy-agent",
        "version": "0.2.7"
      },
      {
        "id": "npm:mime:20170907",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            "<1.4.1",
            ">=2.0.0 <2.0.3"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "1.4.1",
          "2.0.3"
        ],
        "patches": [
          {
            "id": "patch:npm:mime:20170907:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/mime/20170907/mime_20170907_0_0_855d0c4b8b22e4a80b9401a81f2872058eae274d.patch"
            ],
            "version": "=1.2.11 || =1.3.4",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.877450Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">=2.0.0 <2.0.3"
            ],
            "functionId": {
              "filePath": "Mime.js",
              "className": null,
              "functionName": "Mime.prototype.getType"
            }
          },
          {
            "version": [
              ">=1.2.6 <1.4.1"
            ],
            "functionId": {
              "filePath": "mime.js",
              "className": null,
              "functionName": "Mime.prototype.lookup"
            }
          },
          {
            "version": [
              "<1.2.6"
            ],
            "functionId": {
              "filePath": "mime.js",
              "className": null,
              "functionName": "mime.module.exports.lookup"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "mime",
        "references": [
          {
            "url": "https://github.com/broofa/node-mime/commit/1df903fdeb9ae7eaa048795b8d580ce2c98f40b0",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/broofa/node-mime/commit/855d0c4b8b22e4a80b9401a81f2872058eae274d",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/broofa/node-mime/issues/167",
            "title": "GitHub Issue"
          },
          {
            "url": "https://www.npmjs.com/advisories/535",
            "title": "NPM Security Advisory"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:47:01.954784Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:48.285535Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:58:13.405203Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:47:01.954784Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:48.285535Z"
          }
        ],
        "description": "## Overview\n[mime](https://www.npmjs.com/package/mime) is a comprehensive, compact MIME type module.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). It uses regex the following regex `/.*[\\.\\/\\\\]/` in its lookup, which can cause a slowdown of 2 seconds for 50k characters.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `mime` to version 1.4.1, 2.0.3 or higher.\n## References\n- [GitHub Commit](https://github.com/broofa/node-mime/commit/1df903fdeb9ae7eaa048795b8d580ce2c98f40b0)\n- [GitHub Commit](https://github.com/broofa/node-mime/commit/855d0c4b8b22e4a80b9401a81f2872058eae274d)\n- [GitHub Issue](https://github.com/broofa/node-mime/issues/167)\n- [NPM Security Advisory](https://www.npmjs.com/advisories/535)\n",
        "epssDetails": {
          "percentile": "0.49240",
          "probability": "0.00129",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16138"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "535"
          ],
          "GHSA": [
            "GHSA-wrvr-8mpx-r7pp"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-MIME-10788",
            "SNYK-JS-MIME-10788",
            "npm:mime:20170907"
          ]
        },
        "packageName": "mime",
        "proprietary": false,
        "creationTime": "2017-09-26T05:48:40.307000Z",
        "functions_new": [
          {
            "version": [
              ">=2.0.0 <2.0.3"
            ],
            "functionId": {
              "filePath": "Mime.js",
              "functionName": "Mime.prototype.getType"
            }
          },
          {
            "version": [
              ">=1.2.6 <1.4.1"
            ],
            "functionId": {
              "filePath": "mime.js",
              "functionName": "Mime.prototype.lookup"
            }
          },
          {
            "version": [
              "<1.2.6"
            ],
            "functionId": {
              "filePath": "mime.js",
              "functionName": "mime.module.exports.lookup"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-MIME-10788"
        ],
        "disclosureTime": "2017-09-07T21:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-27T05:48:40Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:48.285535Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "superagent@0.17.0",
          "mime@1.2.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "mime",
        "version": "1.2.5"
      },
      {
        "id": "npm:superagent:20170807",
        "title": "Denial of Service (DoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Dennis Appelt"
        ],
        "semver": {
          "vulnerable": [
            "<3.7.0"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.7.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">=3.4.0 <3.7.0"
            ],
            "functionId": {
              "filePath": "lib/node/index.js",
              "className": null,
              "functionName": "Request.prototype._end"
            }
          },
          {
            "version": [
              "<3.4.0"
            ],
            "functionId": {
              "filePath": "lib/node/index.js",
              "className": null,
              "functionName": "Request.prototype.end"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "superagent",
        "references": [
          {
            "url": "https://github.com/visionmedia/superagent/issues/1259",
            "title": "GitHub Issue"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 5.9,
            "modificationTime": "2024-03-11T09:47:03.378255Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:58:19.722707Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.9,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:47:03.378255Z"
          }
        ],
        "description": "## Overview\n[superagent](https://www.npmjs.com/package/superagent) is a Small progressive client-side HTTP request library, and Node.js module with the same API, supporting many high-level HTTP client features.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). It uncompresses responses in memory, and a malicious user may send a specially crafted zip file which will then unzip in the server and cause excessive CPU consumption. This is also known as a `Zip Bomb`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `superagent` to version 3.7.0 or higher.\n## References\n- [GitHub Issue](https://github.com/visionmedia/superagent/issues/1259)\n",
        "epssDetails": {
          "percentile": "0.42533",
          "probability": "0.00098",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16129"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "479"
          ],
          "GHSA": [
            "GHSA-8225-6cvr-8pqp"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SUPERAGENT-10789",
            "SNYK-JS-SUPERAGENT-10789",
            "npm:superagent:20170807"
          ]
        },
        "packageName": "superagent",
        "proprietary": false,
        "creationTime": "2017-09-27T11:38:25.465000Z",
        "functions_new": [
          {
            "version": [
              ">=3.4.0 <3.7.0"
            ],
            "functionId": {
              "filePath": "lib/node/index.js",
              "functionName": "Request.prototype._end"
            }
          },
          {
            "version": [
              "<3.4.0"
            ],
            "functionId": {
              "filePath": "lib/node/index.js",
              "functionName": "Request.prototype.end"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-SUPERAGENT-10789"
        ],
        "disclosureTime": "2017-08-06T21:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-09-27T11:38:25Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:47:03.378255Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "superagent@0.17.0"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "superagent",
        "version": "0.17.0"
      },
      {
        "id": "npm:superagent:20181108",
        "title": "Information Exposure",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
        "credit": [
          "pszabop"
        ],
        "semver": {
          "vulnerable": [
            "<3.8.1"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.8.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "superagent",
        "references": [
          {
            "url": "https://github.com/visionmedia/superagent/commit/087edaf15cac51f69ae6346c431f40627aff0ff4",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/visionmedia/superagent/issues/1309",
            "title": "GitHub Issue"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:58:04.682355Z"
          }
        ],
        "description": "## Overview\n[superagent](https://www.npmjs.com/package/superagent) is a Small progressive client-side HTTP request library, and Node.js module with the same API, supporting many high-level HTTP client features.\n\nAffected versions of this package are vulnerable to Information Exposure due to sending the contents of Authorization to third parties.\n## Remediation\nUpgrade `superagent` to version 3.8.1 or higher.\n## References\n- [GitHub Commit](https://github.com/visionmedia/superagent/commit/087edaf15cac51f69ae6346c431f40627aff0ff4)\n- [GitHub Issue](https://github.com/visionmedia/superagent/issues/1309)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-200"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SUPERAGENT-12185",
            "SNYK-JS-SUPERAGENT-12185",
            "npm:superagent:20181108"
          ]
        },
        "packageName": "superagent",
        "proprietary": false,
        "creationTime": "2018-11-08T19:42:02Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-SUPERAGENT-12185"
        ],
        "disclosureTime": "2018-11-08T19:42:02Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-07-31T13:43:37Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T13:58:04.682355Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "next-gen-gui@1.0.0",
          "component@1.1.0",
          "superagent@0.17.0"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "superagent",
        "version": "0.17.0"
      }
    ],
    "ok": false,
    "dependencyCount": 245,
    "org": "refoo0",
    "policy": "# Snyk (https://snyk.io) policy file, patches or ignores known vulnerabilities.\nversion: v1.25.1\nignore: {}\npatch: {}\n",
    "isPrivate": true,
    "licensesPolicy": {
      "severities": {},
      "orgLicenseRules": {
        "AGPL-1.0": {
          "licenseType": "AGPL-1.0",
          "severity": "high",
          "instructions": ""
        },
        "AGPL-3.0": {
          "licenseType": "AGPL-3.0",
          "severity": "high",
          "instructions": ""
        },
        "Artistic-1.0": {
          "licenseType": "Artistic-1.0",
          "severity": "medium",
          "instructions": ""
        },
        "Artistic-2.0": {
          "licenseType": "Artistic-2.0",
          "severity": "medium",
          "instructions": ""
        },
        "CDDL-1.0": {
          "licenseType": "CDDL-1.0",
          "severity": "medium",
          "instructions": ""
        },
        "CPOL-1.02": {
          "licenseType": "CPOL-1.02",
          "severity": "high",
          "instructions": ""
        },
        "EPL-1.0": {
          "licenseType": "EPL-1.0",
          "severity": "medium",
          "instructions": ""
        },
        "GPL-2.0": {
          "licenseType": "GPL-2.0",
          "severity": "high",
          "instructions": ""
        },
        "GPL-3.0": {
          "licenseType": "GPL-3.0",
          "severity": "high",
          "instructions": ""
        },
        "LGPL-2.0": {
          "licenseType": "LGPL-2.0",
          "severity": "medium",
          "instructions": ""
        },
        "LGPL-2.1": {
          "licenseType": "LGPL-2.1",
          "severity": "medium",
          "instructions": ""
        },
        "LGPL-3.0": {
          "licenseType": "LGPL-3.0",
          "severity": "medium",
          "instructions": ""
        },
        "MPL-1.1": {
          "licenseType": "MPL-1.1",
          "severity": "medium",
          "instructions": ""
        },
        "MPL-2.0": {
          "licenseType": "MPL-2.0",
          "severity": "medium",
          "instructions": ""
        },
        "MS-RL": {
          "licenseType": "MS-RL",
          "severity": "medium",
          "instructions": ""
        },
        "SimPL-2.0": {
          "licenseType": "SimPL-2.0",
          "severity": "high",
          "instructions": ""
        }
      }
    },
    "packageManager": "npm",
    "ignoreSettings": {
      "adminOnly": false,
      "reasonRequired": false,
      "disregardFilesystemIgnores": false,
      "autoApproveIgnores": false
    },
    "summary": "251 vulnerable dependency paths",
    "remediation": {
      "unresolved": [
        {
          "id": "SNYK-JS-ADMZIP-1065796",
          "title": "Directory Traversal",
          "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
          "credit": [
            "cthackers"
          ],
          "semver": {
            "vulnerable": [
              "<0.5.2"
            ]
          },
          "exploit": "Not Defined",
          "fixedIn": [
            "0.5.2"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 7.4,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "adm-zip",
          "references": [
            {
              "url": "https://github.com/cthackers/adm-zip/commit/119dcad6599adccc77982feb14a0c7440fa63013",
              "title": "GitHub Commit"
            }
          ],
          "cvssDetails": [],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 7.4,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:04:23.541864Z"
            }
          ],
          "description": "## Overview\n[adm-zip](https://www.npmjs.com/package/adm-zip) is a JavaScript implementation for zip data compression for NodeJS.\n\nAffected versions of this package are vulnerable to Directory Traversal. It could extract files outside the target folder.\n\n## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```\n\n## Remediation\nUpgrade `adm-zip` to version 0.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/cthackers/adm-zip/commit/119dcad6599adccc77982feb14a0c7440fa63013)\n",
          "epssDetails": null,
          "identifiers": {
            "CVE": [],
            "CWE": [
              "CWE-22"
            ]
          },
          "packageName": "adm-zip",
          "proprietary": false,
          "creationTime": "2021-01-28T07:59:50.454879Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2021-01-28T07:59:22Z",
          "exploitDetails": {
            "sources": [],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Not Defined",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2021-02-15T17:04:18.109270Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-06T14:04:23.541864Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "decompress@0.2.5",
            "adm-zip@0.4.14"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "adm-zip",
          "version": "0.4.14",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-COMPONENTFLATTEN-548907",
          "title": "Prototype Pollution",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
          "credit": [
            "JHU System Security Lab"
          ],
          "semver": {
            "vulnerable": [
              "*"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "medium",
          "cvssScore": 6.3,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "component-flatten",
          "references": [
            {
              "url": "https://github.com/componentjs/flatten.js/blob/1.0.0/index.js",
              "title": "Vulnerable Code"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
              "cvssV3BaseScore": 6.3,
              "modificationTime": "2024-03-11T09:47:27.472998Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
              "assigner": "Snyk",
              "severity": "medium",
              "baseScore": 6.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T13:56:53.551152Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
              "assigner": "NVD",
              "severity": "medium",
              "baseScore": 6.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:47:27.472998Z"
            }
          ],
          "description": "## Overview\n[component-flatten](https://www.npmjs.com/package/component-flatten) is a module that flattens a resolved component tree.\r\n\r\n**Note:** This package is deprecated.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The `a` function could be tricked into adding or modifying properties of `Object.prototype` using a `__proto__` payload.\r\n\r\n### PoC by JHU System Security Lab\r\n```js\r\nvar a = require(\"component-flatten\");\r\nvar tree = {ref:\"toString\",name:\"__proto__\"};\r\na(tree);\r\nconsole.log({}.toString);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nThere is no fixed version for `component-flatten`.\n\n## References\n- [Vulnerable Code](https://github.com/componentjs/flatten.js/blob/1.0.0/index.js)\n",
          "epssDetails": {
            "percentile": "0.33271",
            "probability": "0.00072",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2019-10794"
            ],
            "CWE": [
              "CWE-1321"
            ]
          },
          "packageName": "component-flatten",
          "proprietary": true,
          "creationTime": "2020-02-17T15:39:51.556510Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2020-02-17T15:34:45Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2020-02-17T16:18:16.002442Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:47:27.472998Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 86,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-build@1.2.2",
            "component-builder@1.2.1",
            "component-flatten@1.0.1"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "component-flatten",
          "version": "1.0.1",
          "severityWithCritical": "medium"
        },
        {
          "id": "SNYK-JS-COOKIEJAR-3149984",
          "title": "Regular Expression Denial of Service (ReDoS)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
          "credit": [
            "Carter Snook"
          ],
          "semver": {
            "vulnerable": [
              "<2.1.4"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [
            "2.1.4"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "medium",
          "cvssScore": 5.3,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "cookiejar",
          "references": [
            {
              "url": "https://github.com/bmeck/node-cookiejar/pull/39/commits/eaa00021caf6ae09449dde826108153b578348e5",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/bmeck/node-cookiejar/pull/39",
              "title": "GitHub PR"
            },
            {
              "url": "https://github.com/bmeck/node-cookiejar/blob/master/cookiejar.js%23L73",
              "title": "Vulnerable Code"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "cvssV3BaseScore": 7.5,
              "modificationTime": "2024-03-11T09:49:38.324230Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "cvssV3BaseScore": 7.5,
              "modificationTime": "2024-03-11T09:53:53.970713Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
              "assigner": "Snyk",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:07:13.570557Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "NVD",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:49:38.324230Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "Red Hat",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:53:53.970713Z"
            }
          ],
          "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `Cookie.parse` function, which uses an insecure regular expression.\r\n\r\n## PoC\r\n\r\n```js\r\nconst { CookieJar } = require(\"cookiejar\");\r\n\r\nconst jar = new CookieJar();\r\n\r\nconst start = performance.now();\r\nconst attack = \"a\" + \"t\".repeat(50_000);\r\njar.setCookie(attack);\r\nconsole.log(`CookieJar.setCookie(): ${performance.now() - start}`);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `cookiejar` to version 2.1.4 or higher.\n## References\n- [GitHub Commit](https://github.com/bmeck/node-cookiejar/pull/39/commits/eaa00021caf6ae09449dde826108153b578348e5)\n- [GitHub PR](https://github.com/bmeck/node-cookiejar/pull/39)\n- [Vulnerable Code](https://github.com/bmeck/node-cookiejar/blob/master/cookiejar.js#L73)\n",
          "epssDetails": {
            "percentile": "0.75710",
            "probability": "0.00444",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2022-25901"
            ],
            "CWE": [
              "CWE-1333"
            ]
          },
          "packageName": "cookiejar",
          "proprietary": true,
          "creationTime": "2022-11-28T14:42:15.584171Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2022-11-28T14:39:11Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2022-12-27T12:34:16.450437Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:53:53.970713Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "superagent@0.17.0",
            "cookiejar@1.3.0"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "cookiejar",
          "version": "1.3.0",
          "severityWithCritical": "medium"
        },
        {
          "id": "SNYK-JS-DECOMPRESS-557358",
          "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
          "credit": [
            "Oscar Arnflo"
          ],
          "semver": {
            "vulnerable": [
              "<4.2.1"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [
            "4.2.1"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "medium",
          "cvssScore": 6.3,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "decompress",
          "references": [
            {
              "url": "https://github.com/kevva/decompress/pull/73",
              "title": "GitHub Fix PR"
            },
            {
              "url": "https://github.com/kevva/decompress/issues/71",
              "title": "GitHub Issue"
            },
            {
              "url": "https://github.com/kevva/decompress-tar/pull/12",
              "title": "GitHub PR decompress-tar"
            },
            {
              "url": "https://www.npmjs.com/advisories/1217",
              "title": "NPM Advisory"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "critical",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "cvssV3BaseScore": 9.8,
              "modificationTime": "2024-03-11T09:50:22.598107Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
              "assigner": "Snyk",
              "severity": "medium",
              "baseScore": 6.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:00:51.927791Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "assigner": "NVD",
              "severity": "critical",
              "baseScore": 9.8,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:50:22.598107Z"
            }
          ],
          "description": "## Overview\n[decompress](https://www.npmjs.com/package/decompress) is a package that can be used for extracting archives.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nUpgrade `decompress` to version 4.2.1 or higher.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
          "epssDetails": {
            "percentile": "0.79405",
            "probability": "0.00619",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2020-12265"
            ],
            "CWE": [
              "CWE-29"
            ],
            "NSP": [
              "1217"
            ],
            "GHSA": [
              "GHSA-qgfr-5hqp-vrw9"
            ]
          },
          "packageName": "decompress",
          "proprietary": false,
          "creationTime": "2020-02-27T10:34:55.291825Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2019-10-15T20:29:24Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2020-02-27T13:28:41Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:50:22.598107Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "decompress@0.2.5"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "decompress",
          "version": "0.2.5",
          "severityWithCritical": "medium"
        },
        {
          "id": "SNYK-JS-FSTREAM-174725",
          "title": "Arbitrary File Overwrite",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "credit": [
            "Max Justicz"
          ],
          "semver": {
            "vulnerable": [
              "<1.0.12"
            ]
          },
          "exploit": "Not Defined",
          "fixedIn": [
            "1.0.12"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 7.3,
          "functions": [
            {
              "version": [
                ">0.0.0 <1.0.12"
              ],
              "functionId": {
                "filePath": "lib/writer.js",
                "className": null,
                "functionName": "Writer.prototype._stat.statCb"
              }
            }
          ],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "fstream",
          "references": [
            {
              "url": "https://github.com/npm/fstream/commit/6a77d2fa6e1462693cf8e46f930da96ec1b0bb22",
              "title": "GitHub Commit"
            },
            {
              "url": "https://www.npmjs.com/advisories/886",
              "title": "NPM Security Advisory"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
              "cvssV3BaseScore": 7.5,
              "modificationTime": "2024-03-11T09:47:38.894809Z"
            },
            {
              "assigner": "SUSE",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
              "cvssV3BaseScore": 7.3,
              "modificationTime": "2024-03-11T09:49:57.537749Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
              "cvssV3BaseScore": 7.3,
              "modificationTime": "2024-03-11T09:53:56.945545Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 7.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:01:21.906448Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
              "assigner": "NVD",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.0",
              "modificationTime": "2024-03-11T09:47:38.894809Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
              "assigner": "SUSE",
              "severity": "high",
              "baseScore": 7.3,
              "cvssVersion": "3.0",
              "modificationTime": "2024-03-11T09:49:57.537749Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
              "assigner": "Red Hat",
              "severity": "high",
              "baseScore": 7.3,
              "cvssVersion": "3.0",
              "modificationTime": "2024-03-11T09:53:56.945545Z"
            }
          ],
          "description": "## Overview\n[fstream](https://www.npmjs.com/package/fstream) is a package that supports advanced FS Streaming for Node.\n\nAffected versions of this package are vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hardlink to a file that already exists in the system and a file that matches the hardlink will overwrite the system's file with the contents of the extracted file.\n## Remediation\nUpgrade `fstream` to version 1.0.12 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/fstream/commit/6a77d2fa6e1462693cf8e46f930da96ec1b0bb22)\n- [NPM Security Advisory](https://www.npmjs.com/advisories/886)\n",
          "epssDetails": {
            "percentile": "0.62734",
            "probability": "0.00239",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2019-13173"
            ],
            "CWE": [
              "CWE-59"
            ],
            "NSP": [
              "886"
            ],
            "GHSA": [
              "GHSA-xf7w-r453-m56c"
            ]
          },
          "packageName": "fstream",
          "proprietary": false,
          "creationTime": "2019-05-15T17:00:15.452305Z",
          "functions_new": [
            {
              "version": [
                ">0.0.0 <1.0.12"
              ],
              "functionId": {
                "filePath": "lib/writer.js",
                "functionName": "Writer.prototype._stat.statCb"
              }
            }
          ],
          "alternativeIds": [],
          "disclosureTime": "2019-05-15T14:22:26Z",
          "exploitDetails": {
            "sources": [],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Not Defined",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2019-05-15T17:00:42Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:53:56.945545Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "decompress@0.2.5",
            "tar@0.1.20",
            "fstream@0.1.31"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "fstream",
          "version": "0.1.31",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-GOT-2932019",
          "title": "Open Redirect",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
          "credit": [
            "Unknown"
          ],
          "semver": {
            "vulnerable": [
              "<11.8.5",
              ">=12.0.0 <12.1.0"
            ]
          },
          "exploit": "Not Defined",
          "fixedIn": [
            "11.8.5",
            "12.1.0"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "medium",
          "cvssScore": 5.4,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "got",
          "references": [
            {
              "url": "https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0",
              "title": "GitHub Diff"
            },
            {
              "url": "https://github.com/sindresorhus/got/pull/2047",
              "title": "GitHub PR"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "cvssV3BaseScore": 5.3,
              "modificationTime": "2024-03-11T09:49:40.538405Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "cvssV3BaseScore": 5.3,
              "modificationTime": "2024-03-11T09:53:59.174248Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
              "assigner": "Snyk",
              "severity": "medium",
              "baseScore": 5.4,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T13:55:26.874968Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "assigner": "NVD",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:49:40.538405Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "assigner": "Red Hat",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:53:59.174248Z"
            }
          ],
          "description": "## Overview\n\nAffected versions of this package are vulnerable to Open Redirect due to missing verification of requested URLs. It allowed a victim to be redirected to a UNIX socket.\n## Remediation\nUpgrade `got` to version 11.8.5, 12.1.0 or higher.\n## References\n- [GitHub Diff](https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0)\n- [GitHub PR](https://github.com/sindresorhus/got/pull/2047)\n",
          "epssDetails": {
            "percentile": "0.32713",
            "probability": "0.00071",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2022-33987"
            ],
            "CWE": [
              "CWE-601"
            ]
          },
          "packageName": "got",
          "proprietary": false,
          "creationTime": "2022-06-19T09:23:24.210132Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2022-06-19T08:33:16Z",
          "exploitDetails": {
            "sources": [],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Not Defined",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2022-06-19T15:33:44.269688Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:53:59.174248Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "decompress@0.2.5",
            "ext-name@1.0.1",
            "ext-list@0.2.0",
            "got@0.2.0"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "got",
          "version": "0.2.0",
          "severityWithCritical": "medium"
        },
        {
          "id": "SNYK-JS-HTTPSPROXYAGENT-469131",
          "title": "Man-in-the-Middle (MitM)",
          "CVSSv3": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
          "credit": [
            "Kris Adler"
          ],
          "semver": {
            "vulnerable": [
              "<2.2.3"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [
            "2.2.3"
          ],
          "patches": [
            {
              "id": "patch:SNYK-JS-HTTPSPROXYAGENT-469131:0",
              "urls": [
                "https://snyk-patches.s3.amazonaws.com/npm/https-proxy-agent/20190929/https-proxy-agent_0_0_20190929.patch"
              ],
              "version": "=2.2.1",
              "comments": [],
              "modificationTime": "2019-12-03T11:40:45.721480Z"
            },
            {
              "id": "patch:SNYK-JS-HTTPSPROXYAGENT-469131:1",
              "urls": [
                "https://snyk-patches.s3.amazonaws.com/npm/https-proxy-agent/20190929/https-proxy-agent_0_1_20190929.patch"
              ],
              "version": "=2.2.2",
              "comments": [],
              "modificationTime": "2019-12-03T11:40:45.723464Z"
            }
          ],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "medium",
          "cvssScore": 6.1,
          "functions": [
            {
              "version": [
                ">1.0.0 <2.2.3"
              ],
              "functionId": {
                "filePath": "index.js",
                "className": null,
                "functionName": "HttpsProxyAgent.prototype.callback"
              }
            },
            {
              "version": [
                ">0.2.0 <=1.0.0"
              ],
              "functionId": {
                "filePath": "https-proxy-agent.js",
                "className": null,
                "functionName": "connect"
              }
            },
            {
              "version": [
                "<=0.2.0"
              ],
              "functionId": {
                "filePath": "https-proxy-agent.js",
                "className": null,
                "functionName": "HttpsProxyAgent.prototype.createConnection"
              }
            }
          ],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "https-proxy-agent",
          "references": [
            {
              "url": "https://github.com/TooTallNate/node-https-proxy-agent/commit/36d8cf509f877fa44f4404fce57ebaf9410fe51b",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/TooTallNate/node-https-proxy-agent/pull/77",
              "title": "GitHub PR"
            },
            {
              "url": "https://hackerone.com/reports/541502",
              "title": "HackerOne Report"
            }
          ],
          "cvssDetails": [],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
              "assigner": "Snyk",
              "severity": "medium",
              "baseScore": 6.1,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T13:59:22.290989Z"
            }
          ],
          "description": "## Overview\n[https-proxy-agent](https://github.com/TooTallNate/node-https-proxy-agent#readme) is a module that provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in https module.\n\nAffected versions of this package are vulnerable to Man-in-the-Middle (MitM). When targeting a HTTP proxy, `https-proxy-agent` opens a socket to the proxy, and sends the proxy server a `CONNECT` request. If the proxy server responds with something other than a HTTP response `200`, `https-proxy-agent` incorrectly returns the socket without any TLS upgrade. This request data may contain basic auth credentials or other secrets, is sent over an unencrypted connection. A suitably positioned attacker could steal these secrets and impersonate the client.\r\n\r\n### PoC by Kris Adler\r\n\r\n```\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxyOpts = url.parse('http://127.0.0.1:80');\r\nvar opts = url.parse('https://www.google.com');\r\nvar agent = new HttpsProxyAgent(proxyOpts);\r\nopts.agent = agent;\r\nopts.auth = 'username:password';\r\nhttps.get(opts);\r\n```\n## Remediation\nUpgrade `https-proxy-agent` to version 2.2.3 or higher.\n## References\n- [GitHub Commit](https://github.com/TooTallNate/node-https-proxy-agent/commit/36d8cf509f877fa44f4404fce57ebaf9410fe51b)\n- [GitHub PR](https://github.com/TooTallNate/node-https-proxy-agent/pull/77)\n- [HackerOne Report](https://hackerone.com/reports/541502)\n",
          "epssDetails": null,
          "identifiers": {
            "CVE": [],
            "CWE": [
              "CWE-300"
            ],
            "NSP": [
              "1184"
            ]
          },
          "packageName": "https-proxy-agent",
          "proprietary": false,
          "creationTime": "2019-09-26T10:01:07.677036Z",
          "functions_new": [
            {
              "version": [
                ">1.0.0 <2.2.3"
              ],
              "functionId": {
                "filePath": "index.js",
                "functionName": "HttpsProxyAgent.prototype.callback"
              }
            },
            {
              "version": [
                ">0.2.0 <=1.0.0"
              ],
              "functionId": {
                "filePath": "https-proxy-agent.js",
                "functionName": "connect"
              }
            },
            {
              "version": [
                "<=0.2.0"
              ],
              "functionId": {
                "filePath": "https-proxy-agent.js",
                "functionName": "HttpsProxyAgent.prototype.createConnection"
              }
            }
          ],
          "alternativeIds": [],
          "disclosureTime": "2019-09-25T08:21:57Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2019-10-02T08:08:11Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-06T13:59:22.290989Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "component-remotes@1.2.0",
            "cogent@*",
            "proxy-agent@1.1.1",
            "https-proxy-agent@0.3.6"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "https-proxy-agent",
          "version": "0.3.6",
          "severityWithCritical": "medium"
        },
        {
          "id": "npm:https-proxy-agent:20180402",
          "title": "Uninitialized Memory Exposure",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H/E:F/RL:O/RC:C",
          "credit": [
            "ChALkeR"
          ],
          "semver": {
            "vulnerable": [
              "<2.2.0"
            ]
          },
          "exploit": "Functional",
          "fixedIn": [
            "2.2.0"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 8.2,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "https-proxy-agent",
          "references": [
            {
              "url": "https://hackerone.com/reports/319532",
              "title": "HackerOne Report"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "critical",
              "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
              "cvssV3BaseScore": 9.1,
              "modificationTime": "2024-03-11T09:48:31.334077Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H",
              "cvssV3BaseScore": 8.2,
              "modificationTime": "2024-03-11T09:51:22.137646Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H/E:F/RL:O/RC:C",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 8.2,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T13:55:24.959535Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
              "assigner": "NVD",
              "severity": "critical",
              "baseScore": 9.1,
              "cvssVersion": "3.0",
              "modificationTime": "2024-03-11T09:48:31.334077Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H",
              "assigner": "Red Hat",
              "severity": "high",
              "baseScore": 8.2,
              "cvssVersion": "3.0",
              "modificationTime": "2024-03-11T09:51:22.137646Z"
            }
          ],
          "description": "## Overview\r\n[`https-proxy-agent`](https://www.npmjs.com/package/https-proxy-agent) provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in https module.\r\n\r\nAffected versions of this package are vulnerable to Uninitialized Memory Exposure and Denial of Service (DoS) attacks due to passing unsanitized options to Buffer(arg).\r\n\r\n**Note:**\r\nCVE-2018-3739 is a duplicate of CVE-2018-3736.\r\n\r\n\r\n## Uninitialized memory Exposre PoC by ChALKer\r\n```js\r\n// listen with: nc -l -p 8080\r\n\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxy = {\r\n  protocol: 'http:',\r\n  host: \"127.0.0.1\",\r\n  port: 8080\r\n};\r\n\r\nproxy.auth = 500; // a number as 'auth'\r\nvar opts = url.parse('https://example.com/');\r\nvar agent = new HttpsProxyAgent(proxy);\r\nopts.agent = agent;\r\nhttps.get(opts);\r\n```\r\n\r\n## Details\r\nThe Buffer class on Node.js is a mutable array of binary data, and can be initialized with a string, array or number.\r\n```js\r\nconst buf1 = new Buffer([1,2,3]);\r\n// creates a buffer containing [01, 02, 03]\r\nconst buf2 = new Buffer('test');\r\n// creates a buffer containing ASCII bytes [74, 65, 73, 74]\r\nconst buf3 = new Buffer(10);\r\n// creates a buffer of length 10\r\n```\r\n\r\nThe first two variants simply create a binary representation of the value it received. The last one, however, pre-allocates a buffer of the specified size, making it a useful buffer, especially when reading data from a stream.\r\nWhen using the number constructor of Buffer, it will allocate the memory, but will not fill it with zeros. Instead, the allocated buffer will hold whatever was in memory at the time. If the buffer is not `zeroed` by using `buf.fill(0)`, it may leak sensitive information like keys, source code, and system info.\r\n\r\n\r\n## Remediation\r\nUpgrade `https-proxy-agent` to version 2.2.0 or higher.\r\n**Note** This is vulnerable only for Node <=4\r\n\r\n## References\r\n- [HackerOne Report](https://hackerone.com/reports/319532)",
          "epssDetails": {
            "percentile": "0.80201",
            "probability": "0.00659",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2018-3739"
            ],
            "CWE": [
              "CWE-399"
            ],
            "NSP": [
              "593"
            ],
            "GHSA": [
              "GHSA-8g7p-74h8-hg48",
              "GHSA-qrg3-f6h6-vq8q"
            ],
            "ALTERNATIVE": [
              "SNYK-JS-HTTPSPROXYAGENT-12113",
              "SNYK-JS-HTTPSPROXYAGENT-12113",
              "npm:https-proxy-agent:20180402"
            ]
          },
          "packageName": "https-proxy-agent",
          "proprietary": false,
          "creationTime": "2018-02-25T06:36:33.413000Z",
          "functions_new": [],
          "alternativeIds": [
            "SNYK-JS-HTTPSPROXYAGENT-12113"
          ],
          "disclosureTime": "2018-04-02T06:36:33Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Functional",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2018-04-08T12:56:16Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:51:22.137646Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "component-remotes@1.2.0",
            "cogent@*",
            "proxy-agent@1.1.1",
            "https-proxy-agent@0.3.6"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "https-proxy-agent",
          "version": "0.3.6",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-INFLIGHT-6095116",
          "title": "Missing Release of Resource after Effective Lifetime",
          "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
          "credit": [
            "jkomyno"
          ],
          "semver": {
            "vulnerable": [
              "*"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "medium",
          "cvssScore": 6.2,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "inflight",
          "references": [
            {
              "url": "https://github.com/isaacs/inflight/issues/5",
              "title": "GitHub Issue"
            },
            {
              "url": "https://github.com/logdna/logdna-agent/pull/157",
              "title": "GitHub PR"
            }
          ],
          "cvssDetails": [],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
              "assigner": "Snyk",
              "severity": "medium",
              "baseScore": 6.2,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-13T12:24:01.140165Z"
            }
          ],
          "description": "## Overview\n\nAffected versions of this package are vulnerable to Missing Release of Resource after Effective Lifetime via the `makeres` function due to improperly deleting keys from the `reqs` object after execution of callbacks. This behavior causes the keys to remain in the `reqs` object, which leads to resource exhaustion.\r\n\r\nExploiting this vulnerability results in crashing the `node` process or in the application crash.\r\n\r\n**Note:**\r\nThis library is not maintained, and currently, there is no fix for this issue. To overcome this vulnerability, several dependent packages have eliminated the use of this library.\r\n\r\nTo trigger the memory leak, an attacker would need to have the ability to execute or influence the asynchronous operations that use the inflight module within the application. This typically requires access to the internal workings of the server or application, which is not commonly exposed to remote users. Therefore, “Attack vector” is marked as “Local”.\n## PoC\n```js\r\nconst inflight = require('inflight');\r\n\r\nfunction testInflight() {\r\n  let i = 0;\r\n  function scheduleNext() {\r\n    let key = `key-${i++}`;\r\n    const callback = () => {\r\n    };\r\n    for (let j = 0; j < 1000000; j++) {\r\n      inflight(key, callback);\r\n    }\r\n\r\n    setImmediate(scheduleNext);\r\n  }\r\n\r\n\r\n  if (i % 100 === 0) {\r\n    console.log(process.memoryUsage());\r\n  }\r\n\r\n  scheduleNext();\r\n}\r\n\r\ntestInflight();\r\n```\n## Remediation\nThere is no fixed version for `inflight`.\n\n## References\n- [GitHub Issue](https://github.com/isaacs/inflight/issues/5)\n- [GitHub PR](https://github.com/logdna/logdna-agent/pull/157)\n",
          "epssDetails": null,
          "identifiers": {
            "CVE": [],
            "CWE": [
              "CWE-772"
            ]
          },
          "packageName": "inflight",
          "proprietary": false,
          "creationTime": "2023-11-30T12:51:43.483198Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2023-11-28T12:47:27Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2023-11-30T12:52:55.469185Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-13T12:24:01.140165Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "component-remotes@1.2.0",
            "cogent@*",
            "proxy-agent@1.1.1",
            "pac-proxy-agent@0.2.0",
            "pac-resolver@1.2.6",
            "regenerator@0.8.46",
            "commoner@0.10.8",
            "glob@5.0.15",
            "inflight@1.0.6"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "inflight",
          "version": "1.0.6",
          "severityWithCritical": "medium"
        },
        {
          "id": "SNYK-JS-IP-6240864",
          "title": "Server-side Request Forgery (SSRF)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L/E:P",
          "credit": [
            "Emre Durmaz"
          ],
          "semver": {
            "vulnerable": [
              "<1.1.9",
              ">=2.0.0 <2.0.1"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [
            "1.1.9",
            "2.0.1"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 8.6,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "ip",
          "references": [
            {
              "url": "https://github.com/indutny/node-ip/commit/32f468f1245574785ec080705737a579be1223aa",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/indutny/node-ip/commit/6a3ada9b471b09d5f0f5be264911ab564bf67894",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/indutny/node-ip/issues/128",
              "title": "GitHub Issue"
            },
            {
              "url": "https://github.com/indutny/node-ip/pull/138",
              "title": "GitHub PR"
            },
            {
              "url": "https://cosmosofcyberspace.github.io/npm_ip_cve/npm_ip_cve.html",
              "title": "Vulnerability Report"
            },
            {
              "url": "https://github.com/indutny/node-ip/blob/v1.1.8/lib/ip.js%23L327",
              "title": "Vulnerable Code"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "critical",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "cvssV3BaseScore": 9.8,
              "modificationTime": "2024-03-11T09:52:08.996534Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "critical",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "cvssV3BaseScore": 9.8,
              "modificationTime": "2024-03-11T09:52:45.251658Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L/E:P",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 8.6,
              "cvssVersion": "3.1",
              "modificationTime": "2024-07-12T15:25:03.508760Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "assigner": "NVD",
              "severity": "critical",
              "baseScore": 9.8,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:52:08.996534Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "assigner": "Red Hat",
              "severity": "critical",
              "baseScore": 9.8,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:52:45.251658Z"
            }
          ],
          "description": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF) via the `isPublic` function, by failing to identify hex-encoded `0x7f.1` as equivalent to the private addess `127.0.0.1`. An attacker can expose sensitive information, interact with internal services, or exploit other vulnerabilities within the network by exploiting this vulnerability.\n## PoC\n```js\r\nvar ip = require('ip');\r\n\r\nconsole.log(ip.isPublic(\"0x7f.1\"));\r\n//This returns true. It should be false because 0x7f.1 == 127.0.0.1 == 0177.1\r\n```\n## Remediation\nUpgrade `ip` to version 1.1.9, 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/indutny/node-ip/commit/32f468f1245574785ec080705737a579be1223aa)\n- [GitHub Commit](https://github.com/indutny/node-ip/commit/6a3ada9b471b09d5f0f5be264911ab564bf67894)\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/128)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/138)\n- [Vulnerability Report](https://cosmosofcyberspace.github.io/npm_ip_cve/npm_ip_cve.html)\n- [Vulnerable Code](https://github.com/indutny/node-ip/blob/v1.1.8/lib/ip.js#L327)\n",
          "epssDetails": {
            "percentile": "0.37400",
            "probability": "0.00084",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2023-42282"
            ],
            "CWE": [
              "CWE-918"
            ]
          },
          "packageName": "ip",
          "proprietary": false,
          "creationTime": "2024-02-09T14:56:36.815086Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2024-02-08T17:45:02Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2024-02-11T07:37:52.680399Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-07-12T15:25:03.508760Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "component-remotes@1.2.0",
            "cogent@*",
            "proxy-agent@1.1.1",
            "socks-proxy-agent@1.0.2",
            "socks@1.1.10",
            "ip@1.1.5"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "ip",
          "version": "1.1.5",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-IP-7148531",
          "title": "Server-Side Request Forgery (SSRF)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
          "credit": [
            "ouuan"
          ],
          "semver": {
            "vulnerable": [
              "*"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "medium",
          "cvssScore": 6.5,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "ip",
          "references": [
            {
              "url": "https://github.com/indutny/node-ip/pull/144/commits/934fadee0080b9d201df95a3f7eead6c46e94017",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/indutny/node-ip/pull/144/commits/94f82bd4f2bace0c228bbbfe70073a71536fcbdf",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/indutny/node-ip/pull/144/commits/aeea96e445164c72607a9043e37bcc7bc8786ec9",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/indutny/node-ip/issues/150",
              "title": "GitHub Issue"
            },
            {
              "url": "https://github.com/indutny/node-ip/pull/143",
              "title": "GitHub PR"
            },
            {
              "url": "https://github.com/indutny/node-ip/pull/144",
              "title": "GitHub PR"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "Red Hat",
              "severity": "critical",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "cvssV3BaseScore": 9.8,
              "modificationTime": "2024-06-03T15:17:37.353649Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
              "assigner": "Snyk",
              "severity": "medium",
              "baseScore": 6.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-06-06T12:41:40.856637Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "assigner": "Red Hat",
              "severity": "critical",
              "baseScore": 9.8,
              "cvssVersion": "3.1",
              "modificationTime": "2024-06-03T15:17:37.353649Z"
            }
          ],
          "description": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-Side Request Forgery (SSRF) via the `isPublic` function, which identifies some private IP addresses as public addresses due to improper parsing of the input.\r\nAn attacker can manipulate a system that uses `isLoopback()`, `isPrivate()` and `isPublic` functions to guard outgoing network requests to treat certain IP addresses as globally routable by supplying specially crafted IP addresses.\r\n\r\n**Note**\r\n\r\nThis vulnerability derived from an incomplete fix for [CVE-2023-42282](https://security.snyk.io/vuln/SNYK-JS-IP-6240864)\n## Remediation\nThere is no fixed version for `ip`.\n\n## References\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/934fadee0080b9d201df95a3f7eead6c46e94017)\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/94f82bd4f2bace0c228bbbfe70073a71536fcbdf)\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/aeea96e445164c72607a9043e37bcc7bc8786ec9)\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/150)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/143)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/144)\n",
          "epssDetails": null,
          "identifiers": {
            "CVE": [
              "CVE-2024-29415"
            ],
            "CWE": [
              "CWE-918"
            ]
          },
          "packageName": "ip",
          "proprietary": false,
          "creationTime": "2024-05-28T07:31:24.271080Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2024-05-27T20:40:21Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2024-05-28T08:06:24.160153Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-06-06T12:41:40.856637Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "component-remotes@1.2.0",
            "cogent@*",
            "proxy-agent@1.1.1",
            "socks-proxy-agent@1.0.2",
            "socks@1.1.10",
            "ip@1.1.5"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "ip",
          "version": "1.1.5",
          "severityWithCritical": "medium"
        },
        {
          "id": "SNYK-JS-MINIMATCH-1019388",
          "title": "Regular Expression Denial of Service (ReDoS)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "credit": [
            "Nick Starke"
          ],
          "semver": {
            "vulnerable": [
              "<3.0.2"
            ]
          },
          "exploit": "Not Defined",
          "fixedIn": [
            "3.0.2"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 7.5,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "minimatch",
          "references": [
            {
              "url": "https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955",
              "title": "GitHub Commit"
            }
          ],
          "cvssDetails": [],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T13:59:33.493589Z"
            }
          ],
          "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via complicated and illegal regexes.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/6944abf9e0694bd22fd9dad293faa40c2bc8a955)\n",
          "epssDetails": null,
          "identifiers": {
            "CVE": [],
            "CWE": [
              "CWE-400"
            ],
            "NSP": [
              "118"
            ]
          },
          "packageName": "minimatch",
          "proprietary": false,
          "creationTime": "2020-10-19T15:28:02.803289Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2016-06-20T16:00:06Z",
          "exploitDetails": {
            "sources": [],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Not Defined",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2016-06-20T16:00:06Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-06T13:59:33.493589Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-build@1.2.2",
            "component-builder@1.2.1",
            "component-manifest@1.0.0",
            "unglob@0.1.2",
            "minimatch@0.2.14"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "minimatch",
          "version": "0.2.14",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-MINIMATCH-3050818",
          "title": "Regular Expression Denial of Service (ReDoS)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "credit": [
            "Unknown"
          ],
          "semver": {
            "vulnerable": [
              "<3.0.5"
            ]
          },
          "exploit": "Not Defined",
          "fixedIn": [
            "3.0.5"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "medium",
          "cvssScore": 5.3,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "minimatch",
          "references": [
            {
              "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
              "title": "GitHub Commit"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "cvssV3BaseScore": 7.5,
              "modificationTime": "2024-03-11T09:52:01.021508Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "cvssV3BaseScore": 7.5,
              "modificationTime": "2024-03-11T09:53:57.267409Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "assigner": "Snyk",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:01:37.823356Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "NVD",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:52:01.021508Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "Red Hat",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:53:57.267409Z"
            }
          ],
          "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
          "epssDetails": {
            "percentile": "0.56315",
            "probability": "0.00179",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2022-3517"
            ],
            "CWE": [
              "CWE-1333"
            ]
          },
          "packageName": "minimatch",
          "proprietary": false,
          "creationTime": "2022-10-18T06:10:47.980262Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2022-10-18T06:00:25Z",
          "exploitDetails": {
            "sources": [],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Not Defined",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2022-10-18T06:29:18.078950Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:53:57.267409Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "component-remotes@1.2.0",
            "cogent@*",
            "proxy-agent@1.1.1",
            "pac-proxy-agent@0.2.0",
            "pac-resolver@1.2.6",
            "regenerator@0.8.46",
            "commoner@0.10.8",
            "glob@5.0.15",
            "minimatch@3.0.4"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "minimatch",
          "version": "3.0.4",
          "severityWithCritical": "medium"
        },
        {
          "id": "SNYK-JS-MINIMIST-2429795",
          "title": "Prototype Pollution",
          "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
          "credit": [
            "Unknown"
          ],
          "semver": {
            "vulnerable": [
              "<0.2.4",
              ">=1.2.0 <1.2.6"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [
            "0.2.4",
            "1.2.6"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "low",
          "cvssScore": 3.7,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "minimist",
          "references": [
            {
              "url": "https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703",
              "title": "Fix Commit"
            },
            {
              "url": "https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d",
              "title": "Fix Commit"
            },
            {
              "url": "https://github.com/minimistjs/minimist/blob/master/index.js%23L69",
              "title": "Vulnerable Code"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "SUSE",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
              "cvssV3BaseScore": 5.6,
              "modificationTime": "2024-03-11T09:49:28.176331Z"
            },
            {
              "assigner": "NVD",
              "severity": "critical",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "cvssV3BaseScore": 9.8,
              "modificationTime": "2024-03-11T09:49:30.625120Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "critical",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "cvssV3BaseScore": 9.8,
              "modificationTime": "2024-03-11T09:54:01.114274Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
              "assigner": "Snyk",
              "severity": "low",
              "baseScore": 3.7,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:05:10.320008Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
              "assigner": "SUSE",
              "severity": "medium",
              "baseScore": 5.6,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:49:28.176331Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "assigner": "NVD",
              "severity": "critical",
              "baseScore": 9.8,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:49:30.625120Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "assigner": "Red Hat",
              "severity": "critical",
              "baseScore": 9.8,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:54:01.114274Z"
            }
          ],
          "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution due to a missing handler to `Function.prototype`.\r\n\r\n**Notes:** \r\n\r\n- This vulnerability is a bypass to [CVE-2020-7598](https://security.snyk.io/vuln/SNYK-JS-MINIMIST-559764)\r\n\r\n- The reason for the different CVSS between CVE-2021-44906 to CVE-2020-7598, is that CVE-2020-7598 can pollute objects, while CVE-2021-44906 can pollute only function.\r\n\r\n\r\n## PoC by Snyk\r\n```js\r\nrequire('minimist')('--_.constructor.constructor.prototype.foo bar'.split(' '));\r\nconsole.log((function(){}).foo); // bar\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.4, 1.2.6 or higher.\n## References\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703)\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d)\n- [Vulnerable Code](https://github.com/minimistjs/minimist/blob/master/index.js#L69)\n",
          "epssDetails": {
            "percentile": "0.92837",
            "probability": "0.04607",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2021-44906"
            ],
            "CWE": [
              "CWE-1321"
            ],
            "SNYK": [
              "SNYK-JS-MINIMIST-559764"
            ]
          },
          "packageName": "minimist",
          "proprietary": false,
          "creationTime": "2022-03-18T13:02:08.840039Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2022-03-18T12:24:05Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2022-03-21T12:09:35Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:54:01.114274Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "component-remotes@1.2.0",
            "cogent@*",
            "proxy-agent@1.1.1",
            "pac-proxy-agent@0.2.0",
            "pac-resolver@1.2.6",
            "regenerator@0.8.46",
            "commoner@0.10.8",
            "mkdirp@0.5.5",
            "minimist@1.2.5"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "minimist",
          "version": "1.2.5",
          "severityWithCritical": "low"
        },
        {
          "id": "SNYK-JS-NETMASK-1089716",
          "title": "Server-side Request Forgery (SSRF)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
          "credit": [
            "Unknown"
          ],
          "semver": {
            "vulnerable": [
              "<2.0.1"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [
            "2.0.1"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 7.7,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "netmask",
          "references": [
            {
              "url": "https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md",
              "title": "PoC"
            },
            {
              "url": "https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/",
              "title": "Researcher Report"
            },
            {
              "url": "https://github.com/projectdiscovery/nuclei-templates/blob/main/http/cves/2021/CVE-2021-28918.yaml",
              "title": "Nuclei Templates"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "critical",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
              "cvssV3BaseScore": 9.1,
              "modificationTime": "2024-03-11T09:48:13.711068Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 7.7,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:09:41.794951Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
              "assigner": "NVD",
              "severity": "critical",
              "baseScore": 9.1,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:48:13.711068Z"
            }
          ],
          "description": "## Overview\n[netmask](https://www.npmjs.org/package/netmask) is a library to parse IPv4 CIDR blocks.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF). It incorrectly evaluates individual IPv4 octets that contain octal strings as left-stripped integers, leading to an inordinate attack surface on hundreds of thousands of projects that rely on `netmask` to filter or evaluate IPv4 block ranges, both inbound and outbound.\r\n\r\nFor example, a remote unauthenticated attacker can request local resources using input data `0177.0.0.1` (`127.0.0.1`), which `netmask` evaluates as the public IP `177.0.0.1`.\r\nContrastingly, a remote authenticated or unauthenticated attacker can input the data `0127.0.0.01` (`87.0.0.1`) as localhost, yet the input data is a public IP and can potentially cause local and remote file inclusion (LFI/RFI).\r\nA remote authenticated or unauthenticated attacker can bypass packages that rely on `netmask` to filter IP address blocks to reach intranets, VPNs, containers, adjacent VPC instances, or LAN hosts, using input data such as `012.0.0.1` (`10.0.0.1`), which `netmask` evaluates as `12.0.0.1` (public).\n\n\n **NOTE:** This vulnerability has also been identified as: [CVE-2021-29418](https://security.snyk.io/vuln/SNYK-JS-NETMASK-6056519)\n\n## Remediation\nUpgrade `netmask` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4)\n- [PoC](https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md)\n- [Researcher Report](https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/)\n- [Nuclei Templates](https://github.com/projectdiscovery/nuclei-templates/blob/main/http/cves/2021/CVE-2021-28918.yaml)\n",
          "epssDetails": {
            "percentile": "0.95735",
            "probability": "0.13134",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2021-28918"
            ],
            "CWE": [
              "CWE-20",
              "CWE-918"
            ],
            "GHSA": [
              "GHSA-pch5-whg9-qr2r"
            ]
          },
          "packageName": "netmask",
          "proprietary": false,
          "creationTime": "2021-03-30T09:49:33.483598Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2021-03-29T21:32:05Z",
          "exploitDetails": {
            "sources": [
              "Nuclei Templates",
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2021-03-30T14:57:04Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-10-14T14:55:05.812035Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "component-remotes@1.2.0",
            "cogent@*",
            "proxy-agent@1.1.1",
            "pac-proxy-agent@0.2.0",
            "pac-resolver@1.2.6",
            "netmask@1.0.6"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "netmask",
          "version": "1.0.6",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-NETMASK-6056519",
          "title": "Server-side Request Forgery (SSRF)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
          "credit": [
            "Unknown"
          ],
          "semver": {
            "vulnerable": [
              "<2.0.1"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [
            "2.0.1"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 7.7,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "netmask",
          "references": [
            {
              "url": "https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md",
              "title": "PoC"
            },
            {
              "url": "https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/",
              "title": "Researcher Report"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "cvssV3BaseScore": 5.3,
              "modificationTime": "2024-03-11T09:48:36.307470Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L/E:P",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 7.7,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:09:41.785682Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "assigner": "NVD",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:48:36.307470Z"
            }
          ],
          "description": "## Overview\n[netmask](https://www.npmjs.org/package/netmask) is a library to parse IPv4 CIDR blocks.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF). It incorrectly evaluates individual IPv4 octets that contain octal strings as left-stripped integers, leading to an inordinate attack surface on hundreds of thousands of projects that rely on `netmask` to filter or evaluate IPv4 block ranges, both inbound and outbound.\r\n\r\nFor example, a remote unauthenticated attacker can request local resources using input data `0177.0.0.1` (`127.0.0.1`), which `netmask` evaluates as the public IP `177.0.0.1`.\r\nContrastingly, a remote authenticated or unauthenticated attacker can input the data `0127.0.0.01` (`87.0.0.1`) as localhost, yet the input data is a public IP and can potentially cause local and remote file inclusion (LFI/RFI).\r\nA remote authenticated or unauthenticated attacker can bypass packages that rely on `netmask` to filter IP address blocks to reach intranets, VPNs, containers, adjacent VPC instances, or LAN hosts, using input data such as `012.0.0.1` (`10.0.0.1`), which `netmask` evaluates as `12.0.0.1` (public).\n\n\n **NOTE:** This vulnerability has also been identified as: [CVE-2021-28918](https://security.snyk.io/vuln/SNYK-JS-NETMASK-1089716)\n\n## Remediation\nUpgrade `netmask` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/rs/node-netmask/commit/3f19a056c4eb808ea4a29f234274c67bc5a848f4)\n- [PoC](https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-011.md)\n- [Researcher Report](https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/)\n",
          "epssDetails": {
            "percentile": "0.45836",
            "probability": "0.00111",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2021-29418"
            ],
            "CWE": [
              "CWE-20",
              "CWE-918"
            ],
            "GHSA": [
              "GHSA-pch5-whg9-qr2r"
            ]
          },
          "packageName": "netmask",
          "proprietary": false,
          "creationTime": "2023-11-14T13:41:50.864766Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2021-03-29T21:32:05Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2021-03-30T14:57:04Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:48:36.307470Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "component-remotes@1.2.0",
            "cogent@*",
            "proxy-agent@1.1.1",
            "pac-proxy-agent@0.2.0",
            "pac-resolver@1.2.6",
            "netmask@1.0.6"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "netmask",
          "version": "1.0.6",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-PACRESOLVER-1564857",
          "title": "Remote Code Execution (RCE)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
          "credit": [
            "Tim Perry"
          ],
          "semver": {
            "vulnerable": [
              "<5.0.0"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [
            "5.0.0"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 8.1,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "pac-resolver",
          "references": [
            {
              "url": "https://github.com/TooTallNate/node-degenerator/commit/ccc3445354135398b6eb1a04c7d27c13b833f2d5",
              "title": "GitHub Commit #1"
            },
            {
              "url": "https://github.com/TooTallNate/node-degenerator/commit/9d25bb67d957bc2e5425fea7bf7a58b3fc64ff9e",
              "title": "GitHub Commit #2"
            },
            {
              "url": "https://github.com/TooTallNate/node-pac-resolver/releases/tag/5.0.0",
              "title": "Github Release"
            },
            {
              "url": "https://httptoolkit.tech/blog/npm-pac-proxy-agent-vulnerability/",
              "title": "Researcher Blog"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "critical",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "cvssV3BaseScore": 9.8,
              "modificationTime": "2024-03-11T09:50:25.992772Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 8.1,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T13:56:10.573012Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "assigner": "NVD",
              "severity": "critical",
              "baseScore": 9.8,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:50:25.992772Z"
            }
          ],
          "description": "## Overview\n\nAffected versions of this package are vulnerable to Remote Code Execution (RCE). This can occur when used with untrusted input, due to unsafe PAC file handling.\r\n\r\nIn order to exploit this vulnerability in practice, this either requires an attacker on your local network, a specific vulnerable configuration, or some second vulnerability that allows an attacker to set your config values.\r\n\r\n**NOTE:** The fix for this vulnerability is applied in the `node-degenerator` library, a dependency is written by the same maintainer. \r\n\r\n\r\n### PoC\r\n```js\r\nconst pac = require('pac-resolver');\r\n\r\n// Should keep running forever (if not vulnerable):\r\nsetInterval(() => {\r\n    console.log(\"Still running\");\r\n}, 1000);\r\n\r\n// Parsing a malicious PAC file unexpectedly executes unsandboxed code:\r\npac(`\r\n    // Real PAC config:\r\n    function FindProxyForURL(url, host) {\r\n        return \"DIRECT\";\r\n    }\r\n\r\n    // But also run arbitrary code:\r\n    var f = this.constructor.constructor(\\`\r\n        // Running outside the sandbox:\r\n        console.log('Read env vars:', process.env);\r\n        console.log('!!! PAC file is running arbitrary code !!!');\r\n        console.log('Can read & could exfiltrate env vars ^');\r\n        console.log('Can kill parsing process, like so:');\r\n        process.exit(100); // Kill the vulnerable process\r\n        // etc etc\r\n    \\`);\r\n\r\n    f();\r\n\r\n```\n## Remediation\nUpgrade `pac-resolver` to version 5.0.0 or higher.\n## References\n- [GitHub Commit #1](https://github.com/TooTallNate/node-degenerator/commit/ccc3445354135398b6eb1a04c7d27c13b833f2d5)\n- [GitHub Commit #2](https://github.com/TooTallNate/node-degenerator/commit/9d25bb67d957bc2e5425fea7bf7a58b3fc64ff9e)\n- [Github Release](https://github.com/TooTallNate/node-pac-resolver/releases/tag/5.0.0)\n- [Researcher Blog](https://httptoolkit.tech/blog/npm-pac-proxy-agent-vulnerability/)\n",
          "epssDetails": {
            "percentile": "0.75323",
            "probability": "0.00433",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2021-23406"
            ],
            "CWE": [
              "CWE-94"
            ]
          },
          "packageName": "pac-resolver",
          "proprietary": true,
          "creationTime": "2021-08-15T12:18:11.115775Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2021-05-30T13:37:37Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2021-08-22T13:26:31Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:50:25.992772Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "component-remotes@1.2.0",
            "cogent@*",
            "proxy-agent@1.1.1",
            "pac-proxy-agent@0.2.0",
            "pac-resolver@1.2.6"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "pac-resolver",
          "version": "1.2.6",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-POSTCSS-1255640",
          "title": "Regular Expression Denial of Service (ReDoS)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
          "credit": [
            "Yeting Li"
          ],
          "semver": {
            "vulnerable": [
              ">=8.0.0 <8.2.13",
              "<7.0.36"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [
            "8.2.13",
            "7.0.36"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "medium",
          "cvssScore": 5.3,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "postcss",
          "references": [
            {
              "url": "https://github.com/postcss/postcss/commit/2b1d04c867995e55124e0a165b7c6622c1735956",
              "title": "GitHub Commit"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "cvssV3BaseScore": 7.5,
              "modificationTime": "2024-03-11T09:51:39.227175Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "cvssV3BaseScore": 5.3,
              "modificationTime": "2024-03-11T09:53:48.848594Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
              "assigner": "Snyk",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:04:56.506991Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "NVD",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:51:39.227175Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "assigner": "Red Hat",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:53:48.848594Z"
            }
          ],
          "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via `getAnnotationURL()` and `loadAnnotation()` in `lib/previous-map.js`. The vulnerable regexes are caused mainly by the sub-pattern `\\/\\*\\s*# sourceMappingURL=(.*)`.\r\n\r\n### PoC\r\n```\r\nvar postcss = require(\"postcss\")\r\nfunction build_attack(n) {\r\n    var ret = \"a{}\"\r\n    for (var i = 0; i < n; i++) {\r\n        ret += \"/*# sourceMappingURL=\"\r\n    }\r\n    return ret + \"!\";\r\n}\r\n\r\n// postcss.parse('a{}/*# sourceMappingURL=a.css.map */')\r\nfor(var i = 1; i <= 500000; i++) {\r\n    if (i % 1000 == 0) {\r\n        var time = Date.now();\r\n        var attack_str = build_attack(i)\r\n        try{\r\n            postcss.parse(attack_str)\r\n            var time_cost = Date.now() - time;\r\n            console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\");\r\n            }\r\n        catch(e){\r\n        var time_cost = Date.now() - time;\r\n        console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\");\r\n        }\r\n    }\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `postcss` to version 8.2.13, 7.0.36 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/2b1d04c867995e55124e0a165b7c6622c1735956)\n",
          "epssDetails": {
            "percentile": "0.59208",
            "probability": "0.00204",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2021-23382"
            ],
            "CWE": [
              "CWE-400"
            ]
          },
          "packageName": "postcss",
          "proprietary": true,
          "creationTime": "2021-04-26T15:22:41.908415Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2021-04-26T15:09:50Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2021-04-26T16:18:39Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:53:48.848594Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-build@1.2.2",
            "builder-autoprefixer@1.0.4",
            "autoprefixer-core@3.1.2",
            "postcss@2.2.6"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "postcss",
          "version": "2.2.6",
          "severityWithCritical": "medium"
        },
        {
          "id": "SNYK-JS-POSTCSS-5926692",
          "title": "Improper Input Validation",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "credit": [
            "Unknown"
          ],
          "semver": {
            "vulnerable": [
              "<8.4.31"
            ]
          },
          "exploit": "Not Defined",
          "fixedIn": [
            "8.4.31"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "medium",
          "cvssScore": 5.3,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "postcss",
          "references": [
            {
              "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/postcss/postcss/pull/1890",
              "title": "GitHub PR"
            },
            {
              "url": "https://github.com/postcss/postcss/releases/tag/8.4.31",
              "title": "GitHub Release"
            },
            {
              "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js%23L25",
              "title": "Vulnerable Code"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "Red Hat",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "cvssV3BaseScore": 5.3,
              "modificationTime": "2024-11-26T13:40:04.334293Z"
            },
            {
              "assigner": "NVD",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "cvssV3BaseScore": 5.3,
              "modificationTime": "2024-03-11T09:53:40.363646Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "assigner": "Snyk",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:09:22.228973Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "assigner": "Red Hat",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-11-26T13:40:04.334293Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "assigner": "NVD",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:53:40.363646Z"
            }
          ],
          "description": "## Overview\n[postcss](https://www.npmjs.com/package/postcss) is a PostCSS is a tool for transforming styles with JS plugins.\n\nAffected versions of this package are vulnerable to Improper Input Validation when parsing external Cascading Style Sheets (CSS) with linters using PostCSS. An attacker can cause discrepancies by injecting malicious CSS rules, such as `@font-face{ font:(\\r/*);}`.\r\nThis vulnerability is because of an insecure regular expression usage in the `RE_BAD_BRACKET` variable.\n## Remediation\nUpgrade `postcss` to version 8.4.31 or higher.\n## References\n- [GitHub Commit](https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5)\n- [GitHub PR](https://github.com/postcss/postcss/pull/1890)\n- [GitHub Release](https://github.com/postcss/postcss/releases/tag/8.4.31)\n- [Vulnerable Code](https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25)\n",
          "epssDetails": {
            "percentile": "0.41218",
            "probability": "0.00093",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2023-44270"
            ],
            "CWE": [
              "CWE-20"
            ]
          },
          "packageName": "postcss",
          "proprietary": false,
          "creationTime": "2023-10-01T10:42:55.486681Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2023-09-29T22:46:45Z",
          "exploitDetails": {
            "sources": [],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Not Defined",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2023-10-01T11:23:35.354495Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-11-26T13:40:04.334293Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-build@1.2.2",
            "builder-autoprefixer@1.0.4",
            "autoprefixer-core@3.1.2",
            "postcss@2.2.6"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "postcss",
          "version": "2.2.6",
          "severityWithCritical": "medium"
        },
        {
          "id": "SNYK-JS-QS-3153490",
          "title": "Prototype Poisoning",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
          "credit": [
            "BRAUN Nathanael",
            "BRISSAUD Johan"
          ],
          "semver": {
            "vulnerable": [
              "<6.2.4",
              ">=6.3.0 <6.3.3",
              ">=6.4.0 <6.4.1",
              ">=6.5.0 <6.5.3",
              ">=6.6.0 <6.6.1",
              ">=6.7.0 <6.7.3",
              ">=6.8.0 <6.8.3",
              ">=6.9.0 <6.9.7",
              ">=6.10.0 <6.10.3"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [
            "6.2.4",
            "6.3.3",
            "6.4.1",
            "6.5.3",
            "6.6.1",
            "6.7.3",
            "6.8.3",
            "6.9.7",
            "6.10.3"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 7.5,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "qs",
          "references": [
            {
              "url": "https://github.com/ljharb/qs/pull/428",
              "title": "GitHub PR"
            },
            {
              "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2150323",
              "title": "RedHat Bugzilla Bug"
            },
            {
              "url": "https://github.com/n8tz/CVE-2022-24999",
              "title": "Researcher Advisory"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "cvssV3BaseScore": 7.5,
              "modificationTime": "2024-03-11T09:52:48.801266Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "cvssV3BaseScore": 7.5,
              "modificationTime": "2024-03-11T09:53:59.571489Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:06:01.312784Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "NVD",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:52:48.801266Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "Red Hat",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:53:59.571489Z"
            }
          ],
          "description": "## Overview\n[qs](https://www.npmjs.com/package/qs) is a querystring parser that supports nesting and arrays, with a depth limit.\n\nAffected versions of this package are vulnerable to Prototype Poisoning which allows attackers to cause a Node process to hang, processing an Array object whose prototype has been replaced by one with an excessive length value.\r\n\r\n**Note:** In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](https://security.snyk.io/vuln/SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `qs` to version 6.2.4, 6.3.3, 6.4.1, 6.5.3, 6.6.1, 6.7.3, 6.8.3, 6.9.7, 6.10.3 or higher.\n## References\n- [GitHub PR](https://github.com/ljharb/qs/pull/428)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=2150323)\n- [Researcher Advisory](https://github.com/n8tz/CVE-2022-24999)\n",
          "epssDetails": {
            "percentile": "0.89100",
            "probability": "0.01947",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2022-24999"
            ],
            "CWE": [
              "CWE-1321"
            ]
          },
          "packageName": "qs",
          "proprietary": false,
          "creationTime": "2022-12-04T11:01:47.782869Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2022-11-26T00:00:00Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2022-12-04T12:24:32.307833Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:53:59.571489Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "tiny-lr-fork@0.0.5",
            "qs@0.5.6"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "qs",
          "version": "0.5.6",
          "severityWithCritical": "high"
        },
        {
          "id": "npm:qs:20140806",
          "title": "Denial of Service (DoS)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "credit": [
            "Dustin Shiver"
          ],
          "semver": {
            "vulnerable": [
              "<1.0.0"
            ]
          },
          "exploit": "Not Defined",
          "fixedIn": [
            "1.0.0"
          ],
          "patches": [
            {
              "id": "patch:npm:qs:20140806:1",
              "urls": [
                "https://snyk-patches.s3.amazonaws.com/npm/qs/20140806/qs_20140806_0_1_snyk_npm.patch"
              ],
              "version": "=0.5.6",
              "comments": [],
              "modificationTime": "2019-12-03T11:40:45.728930Z"
            },
            {
              "id": "patch:npm:qs:20140806:0",
              "urls": [
                "https://snyk-patches.s3.amazonaws.com/npm/qs/20140806/qs_20140806_0_0_43a604b7847e56bba49d0ce3e222fe89569354d8_snyk.patch"
              ],
              "version": "<1.0.0 >=0.6.5",
              "comments": [],
              "modificationTime": "2019-12-03T11:40:45.741062Z"
            }
          ],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 7.5,
          "functions": [
            {
              "version": [
                "<1.0.0"
              ],
              "functionId": {
                "filePath": "index.js",
                "className": null,
                "functionName": "compact"
              }
            }
          ],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "qs",
          "references": [
            {
              "url": "https://github.com/tj/node-querystring/pull/114/commits/43a604b7847e56bba49d0ce3e222fe89569354d8",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/visionmedia/node-querystring/issues/104",
              "title": "GitHub Issue"
            },
            {
              "url": "https://nvd.nist.gov/vuln/detail/CVE-2014-7191",
              "title": "NVD"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "Red Hat",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
              "cvssV3BaseScore": 4.3,
              "modificationTime": "2024-03-11T09:48:53.430808Z"
            },
            {
              "assigner": "NVD",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "cvssV3BaseScore": 5.3,
              "modificationTime": "2024-03-11T09:52:39.103034Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T13:59:04.389055Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
              "assigner": "Red Hat",
              "severity": "medium",
              "baseScore": 4.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:48:53.430808Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "assigner": "NVD",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:52:39.103034Z"
            }
          ],
          "description": "## Overview\n\n[qs](https://www.npmjs.com/package/qs) is a querystring parser that supports nesting and arrays, with a depth limit.\n\n\nAffected versions of this package are vulnerable to Denial of Service (DoS).\nDuring parsing, the `qs` module may create a sparse area (an array where no elements are filled), and grow that array to the necessary size based on the indices used on it. An attacker can specify a high index value in a query string, thus making the server allocate a respectively big array. Truly large values can cause the server to run out of memory and cause it to crash - thus enabling a Denial-of-Service attack.\n\n## Remediation\n\nUpgrade `qs` to version 1.0.0 or higher.\n\n\n## Details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\r\n\r\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\r\n\r\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\r\n\r\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\r\n\r\nTwo common types of DoS vulnerabilities:\r\n\r\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\r\n\r\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](npm:ws:20171108)\n\n## References\n\n- [GitHub Commit](https://github.com/tj/node-querystring/pull/114/commits/43a604b7847e56bba49d0ce3e222fe89569354d8)\n\n- [GitHub Issue](https://github.com/visionmedia/node-querystring/issues/104)\n\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2014-7191)\n",
          "epssDetails": {
            "percentile": "0.93304",
            "probability": "0.05333",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2014-7191"
            ],
            "CWE": [
              "CWE-400"
            ],
            "NSP": [
              "29"
            ],
            "GHSA": [
              "GHSA-gqgv-6jq5-jjj9",
              "GHSA-jjv7-qpx3-h62q"
            ],
            "ALTERNATIVE": [
              "SNYK-JS-QS-10019",
              "SNYK-JS-QS-10019",
              "npm:qs:20140806"
            ]
          },
          "packageName": "qs",
          "proprietary": false,
          "creationTime": "2014-08-06T06:10:22Z",
          "functions_new": [
            {
              "version": [
                "<1.0.0"
              ],
              "functionId": {
                "filePath": "index.js",
                "functionName": "compact"
              }
            }
          ],
          "alternativeIds": [
            "SNYK-JS-QS-10019"
          ],
          "disclosureTime": "2014-08-06T06:10:22Z",
          "exploitDetails": {
            "sources": [],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Not Defined",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2014-08-06T06:10:22Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:52:39.103034Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "tiny-lr-fork@0.0.5",
            "qs@0.5.6"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": true,
          "isPinnable": false,
          "isRuntime": false,
          "name": "qs",
          "version": "0.5.6",
          "severityWithCritical": "high"
        },
        {
          "id": "npm:qs:20170213",
          "title": "Prototype Override Protection Bypass",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "credit": [
            "Snyk Security Research Team"
          ],
          "semver": {
            "vulnerable": [
              "<6.0.4",
              ">=6.1.0 <6.1.2",
              ">=6.2.0 <6.2.3",
              ">=6.3.0 <6.3.2"
            ]
          },
          "exploit": "Not Defined",
          "fixedIn": [
            "6.0.4",
            "6.1.2",
            "6.2.3",
            "6.3.2"
          ],
          "patches": [
            {
              "id": "patch:npm:qs:20170213:0",
              "urls": [
                "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/630_632.patch"
              ],
              "version": "=6.3.0",
              "comments": [],
              "modificationTime": "2019-12-03T11:40:45.855245Z"
            },
            {
              "id": "patch:npm:qs:20170213:1",
              "urls": [
                "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/631_632.patch"
              ],
              "version": "=6.3.1",
              "comments": [],
              "modificationTime": "2019-12-03T11:40:45.856271Z"
            },
            {
              "id": "patch:npm:qs:20170213:2",
              "urls": [
                "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/621_623.patch"
              ],
              "version": "=6.2.1",
              "comments": [],
              "modificationTime": "2019-12-03T11:40:45.857318Z"
            },
            {
              "id": "patch:npm:qs:20170213:3",
              "urls": [
                "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/622_623.patch"
              ],
              "version": "=6.2.2",
              "comments": [],
              "modificationTime": "2019-12-03T11:40:45.858334Z"
            },
            {
              "id": "patch:npm:qs:20170213:4",
              "urls": [
                "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/610_612.patch"
              ],
              "version": "=6.1.0",
              "comments": [],
              "modificationTime": "2019-12-03T11:40:45.859411Z"
            },
            {
              "id": "patch:npm:qs:20170213:5",
              "urls": [
                "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/611_612.patch"
              ],
              "version": "=6.1.1",
              "comments": [],
              "modificationTime": "2019-12-03T11:40:45.860523Z"
            },
            {
              "id": "patch:npm:qs:20170213:6",
              "urls": [
                "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/602_604.patch"
              ],
              "version": "=6.0.2",
              "comments": [],
              "modificationTime": "2019-12-03T11:40:45.861504Z"
            },
            {
              "id": "patch:npm:qs:20170213:7",
              "urls": [
                "https://snyk-patches.s3.amazonaws.com/npm/qs/20170213/603_604.patch"
              ],
              "version": "=6.0.3",
              "comments": [],
              "modificationTime": "2019-12-03T11:40:45.862615Z"
            }
          ],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 7.5,
          "functions": [
            {
              "version": [
                ">=6.2.0 <6.2.3",
                "6.3.0"
              ],
              "functionId": {
                "filePath": "lib/parse.js",
                "className": null,
                "functionName": "parseObject"
              }
            },
            {
              "version": [
                ">=6.3.1 <6.3.2"
              ],
              "functionId": {
                "filePath": "lib/parse.js",
                "className": null,
                "functionName": "parseObjectRecursive"
              }
            },
            {
              "version": [
                "<6.0.4"
              ],
              "functionId": {
                "filePath": "lib/parse.js",
                "className": null,
                "functionName": "internals.parseObject"
              }
            }
          ],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "qs",
          "references": [
            {
              "url": "https://github.com/ljharb/qs/commit/beade029171b8cef9cee0d03ebe577e2dd84976d",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/ljharb/qs/issues/200",
              "title": "GitHub Issue"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "cvssV3BaseScore": 7.5,
              "modificationTime": "2024-03-11T09:46:34.338137Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "cvssV3BaseScore": 5.3,
              "modificationTime": "2024-03-11T09:48:53.414157Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:03:33.996696Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "NVD",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.0",
              "modificationTime": "2024-03-11T09:46:34.338137Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "assigner": "Red Hat",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.0",
              "modificationTime": "2024-03-11T09:48:53.414157Z"
            }
          ],
          "description": "## Overview\n[qs](https://www.npmjs.com/package/qs) is a querystring parser that supports nesting and arrays, with a depth limit.\n\nAffected versions of this package are vulnerable to Prototype Override Protection Bypass. By default `qs` protects against attacks that attempt to overwrite an object's existing prototype properties, such as `toString()`, `hasOwnProperty()`,etc.\r\n\r\nFrom [`qs` documentation](https://github.com/ljharb/qs):\r\n> By default parameters that would overwrite properties on the object prototype are ignored, if you wish to keep the data from those fields either use plainObjects as mentioned above, or set allowPrototypes to true which will allow user input to overwrite those properties. WARNING It is generally a bad idea to enable this option as it can cause problems when attempting to use the properties that have been overwritten. Always be careful with this option.\r\n\r\nOverwriting these properties can impact application logic, potentially allowing attackers to work around security controls, modify data, make the application unstable and more.\r\n\r\nIn versions of the package affected by this vulnerability, it is possible to circumvent this protection and overwrite prototype properties and functions by prefixing the name of the parameter with `[` or `]`. e.g. `qs.parse(\"]=toString\")` will return `{toString = true}`, as a result, calling `toString()` on the object will throw an exception.\r\n\r\n**Example:**\r\n```js\r\nqs.parse('toString=foo', { allowPrototypes: false })\r\n// {}\r\n\r\nqs.parse(\"]=toString\", { allowPrototypes: false })\r\n// {toString = true} <== prototype overwritten\r\n```\r\n\r\nFor more information, you can check out our [blog](https://snyk.io/blog/high-severity-vulnerability-qs/).\r\n\r\n## Disclosure Timeline\r\n- February 13th, 2017 - Reported the issue to package owner.\r\n- February 13th, 2017 - Issue acknowledged by package owner.\r\n- February 16th, 2017 - Partial fix released in versions `6.0.3`, `6.1.1`, `6.2.2`, `6.3.1`.\r\n- March 6th, 2017     - Final fix released in versions `6.4.0`,`6.3.2`, `6.2.3`, `6.1.2` and `6.0.4`\n## Remediation\nUpgrade `qs` to version 6.0.4, 6.1.2, 6.2.3, 6.3.2 or higher.\n## References\n- [GitHub Commit](https://github.com/ljharb/qs/commit/beade029171b8cef9cee0d03ebe577e2dd84976d)\n- [GitHub Issue](https://github.com/ljharb/qs/issues/200)\n",
          "epssDetails": {
            "percentile": "0.48830",
            "probability": "0.00126",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2017-1000048"
            ],
            "CWE": [
              "CWE-20"
            ],
            "GHSA": [
              "GHSA-gqgv-6jq5-jjj9"
            ],
            "ALTERNATIVE": [
              "SNYK-JS-QS-10407",
              "SNYK-JS-QS-10407",
              "npm:qs:20170213"
            ]
          },
          "packageName": "qs",
          "proprietary": true,
          "creationTime": "2017-02-14T11:44:54.163000Z",
          "functions_new": [
            {
              "version": [
                ">=6.2.0 <6.2.3",
                "6.3.0"
              ],
              "functionId": {
                "filePath": "lib/parse.js",
                "functionName": "parseObject"
              }
            },
            {
              "version": [
                ">=6.3.1 <6.3.2"
              ],
              "functionId": {
                "filePath": "lib/parse.js",
                "functionName": "parseObjectRecursive"
              }
            },
            {
              "version": [
                "<6.0.4"
              ],
              "functionId": {
                "filePath": "lib/parse.js",
                "functionName": "internals.parseObject"
              }
            }
          ],
          "alternativeIds": [
            "SNYK-JS-QS-10407"
          ],
          "disclosureTime": "2017-02-13T00:00:00Z",
          "exploitDetails": {
            "sources": [],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Not Defined",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2017-03-01T10:00:54Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:48:53.414157Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "tiny-lr-fork@0.0.5",
            "qs@0.5.6"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "qs",
          "version": "0.5.6",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-SEMVER-3247795",
          "title": "Regular Expression Denial of Service (ReDoS)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
          "credit": [
            "Alessio Della Libera - Snyk Research Team"
          ],
          "semver": {
            "vulnerable": [
              "<5.7.2",
              ">=6.0.0 <6.3.1",
              ">=7.0.0 <7.5.2"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [
            "5.7.2",
            "6.3.1",
            "7.5.2"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 7.5,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "semver",
          "references": [
            {
              "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/npm/node-semver/pull/564",
              "title": "GitHub PR"
            },
            {
              "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
              "title": "Vulnerable Code"
            },
            {
              "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
              "title": "Vulnerable Code"
            },
            {
              "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
              "title": "Vulnerable Code"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "cvssV3BaseScore": 7.5,
              "modificationTime": "2024-03-11T09:53:22.600372Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "cvssV3BaseScore": 7.5,
              "modificationTime": "2024-03-11T09:54:01.668389Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:06:32.773457Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "NVD",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:53:22.600372Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "Red Hat",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:54:01.668389Z"
            }
          ],
          "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
          "epssDetails": {
            "percentile": "0.68629",
            "probability": "0.00270",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2022-25883"
            ],
            "CWE": [
              "CWE-1333"
            ]
          },
          "packageName": "semver",
          "proprietary": true,
          "creationTime": "2023-01-25T16:16:50.073158Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2023-01-25T16:00:59Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2023-06-20T15:39:58.313421Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:54:01.668389Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "component-remotes@1.2.0",
            "semver@2.3.2"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "semver",
          "version": "2.3.2",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-TAR-1536528",
          "title": "Arbitrary File Overwrite",
          "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
          "credit": [
            "ginkoid",
            "chen-robert"
          ],
          "semver": {
            "vulnerable": [
              "<3.2.3",
              ">=4.0.0 <4.4.15",
              ">=5.0.0 <5.0.7",
              ">=6.0.0 <6.1.2"
            ]
          },
          "exploit": "Not Defined",
          "fixedIn": [
            "3.2.3",
            "4.4.15",
            "5.0.7",
            "6.1.2"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 8.2,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "tar",
          "references": [
            {
              "url": "https://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20",
              "title": "GitHub Commit"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "cvssV3BaseScore": 8.1,
              "modificationTime": "2024-03-11T09:48:46.483638Z"
            },
            {
              "assigner": "SUSE",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "cvssV3BaseScore": 8.1,
              "modificationTime": "2024-03-11T09:49:33.954082Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "cvssV3BaseScore": 8.1,
              "modificationTime": "2024-03-11T09:53:56.383420Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 8.2,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:05:15.329322Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "assigner": "NVD",
              "severity": "high",
              "baseScore": 8.1,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:48:46.483638Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "assigner": "SUSE",
              "severity": "high",
              "baseScore": 8.1,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:49:33.954082Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "assigner": "Red Hat",
              "severity": "high",
              "baseScore": 8.1,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:53:56.383420Z"
            }
          ],
          "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Arbitrary File Overwrite. This is due to insufficient symlink protection.\r\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks.  Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created.\r\n\r\nThis logic is insufficient when extracting tar files that contain both a directory and a symlink with the same name as the directory. This order of operations results in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to `mkdir` for that directory are skipped.\r\nHowever, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it is possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location.\n## Remediation\nUpgrade `tar` to version 3.2.3, 4.4.15, 5.0.7, 6.1.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20)\n",
          "epssDetails": {
            "percentile": "0.80721",
            "probability": "0.00689",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2021-32803"
            ],
            "CWE": [
              "CWE-22"
            ],
            "NSP": [
              "1771"
            ],
            "GHSA": [
              "GHSA-r628-mhmh-qjhw"
            ]
          },
          "packageName": "tar",
          "proprietary": false,
          "creationTime": "2021-08-04T06:32:44.747650Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2021-08-04T06:13:39Z",
          "exploitDetails": {
            "sources": [],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Not Defined",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2021-08-04T07:24:54.942553Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:53:56.383420Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "decompress@0.2.5",
            "tar@0.1.20"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "tar",
          "version": "0.1.20",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-TAR-1536531",
          "title": "Arbitrary File Overwrite",
          "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
          "credit": [
            "ginkoid",
            "chen-robert"
          ],
          "semver": {
            "vulnerable": [
              "<3.2.2",
              ">=4.0.0 <4.4.14",
              ">=5.0.0 <5.0.6",
              ">=6.0.0 <6.1.1"
            ]
          },
          "exploit": "Not Defined",
          "fixedIn": [
            "3.2.2",
            "4.4.14",
            "5.0.6",
            "6.1.1"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 8.2,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "tar",
          "references": [
            {
              "url": "https://github.com/npm/node-tar/commit/1f036ca23f64a547bdd6c79c1a44bc62e8115da4",
              "title": "GitHub Commit"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "SUSE",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "cvssV3BaseScore": 8.1,
              "modificationTime": "2024-03-11T09:49:32.434806Z"
            },
            {
              "assigner": "NVD",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "cvssV3BaseScore": 8.1,
              "modificationTime": "2024-03-11T09:51:19.297627Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "cvssV3BaseScore": 8.1,
              "modificationTime": "2024-03-11T09:53:56.376638Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 8.2,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:02:25.215192Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "assigner": "SUSE",
              "severity": "high",
              "baseScore": 8.1,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:49:32.434806Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "assigner": "NVD",
              "severity": "high",
              "baseScore": 8.1,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:51:19.297627Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "assigner": "Red Hat",
              "severity": "high",
              "baseScore": 8.1,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:53:56.376638Z"
            }
          ],
          "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Arbitrary File Overwrite. This is due to insufficient absolute path sanitization.\r\n\r\n`node-tar` aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example, the path `/home/user/.bashrc` would turn into `home/user/.bashrc`.\r\n\r\nThis logic is insufficient when file paths contain repeated path roots such as `////home/user/.bashrc`. `node-tar` only strips a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) still resolves to an absolute path.\n## Remediation\nUpgrade `tar` to version 3.2.2, 4.4.14, 5.0.6, 6.1.1 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/1f036ca23f64a547bdd6c79c1a44bc62e8115da4)\n",
          "epssDetails": {
            "percentile": "0.80721",
            "probability": "0.00689",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2021-32804"
            ],
            "CWE": [
              "CWE-22"
            ],
            "NSP": [
              "1770"
            ],
            "GHSA": [
              "GHSA-3jfq-g458-7qm9"
            ]
          },
          "packageName": "tar",
          "proprietary": false,
          "creationTime": "2021-08-04T06:40:36.725155Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2021-08-04T06:33:52Z",
          "exploitDetails": {
            "sources": [],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Not Defined",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2021-08-04T07:24:55.599985Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:53:56.376638Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "decompress@0.2.5",
            "tar@0.1.20"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "tar",
          "version": "0.1.20",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-TAR-1536758",
          "title": "Regular Expression Denial of Service (ReDoS)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:U/RL:O/RC:R",
          "credit": [
            "@isaacs"
          ],
          "semver": {
            "vulnerable": [
              ">=6.0.0 <6.1.4",
              ">=5.0.0 <5.0.8",
              "<4.4.16"
            ]
          },
          "exploit": "Unproven",
          "fixedIn": [
            "6.1.4",
            "5.0.8",
            "4.4.16"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "low",
          "cvssScore": 3.7,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "tar",
          "references": [
            {
              "url": "https://github.com/npm/node-tar/commit/06cbde5935aa7643f578f874de84a7da2a74fe3a",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/npm/node-tar/commit/adf35115dbc6e7a479fe3c38f859baf6ffff7a7a",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/npm/node-tar/commit/d3d5a4e4560f18131e64fc62f5a281b238ef2ecf",
              "title": "GitHub Commit"
            }
          ],
          "cvssDetails": [],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:U/RL:O/RC:R",
              "assigner": "Snyk",
              "severity": "low",
              "baseScore": 3.7,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:02:38.479287Z"
            }
          ],
          "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). When stripping the trailing slash from `files` arguments, the  `f.replace(/\\/+$/, '')` performance of this function can exponentially degrade when `f` contains many `/` characters resulting in ReDoS. \r\n\r\nThis vulnerability is not likely to be exploitable as it requires that the untrusted input is being passed into the `tar.extract()` or `tar.list()` array of entries to parse/extract, which would be unusual.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `tar` to version 6.1.4, 5.0.8, 4.4.16 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/06cbde5935aa7643f578f874de84a7da2a74fe3a)\n- [GitHub Commit](https://github.com/npm/node-tar/commit/adf35115dbc6e7a479fe3c38f859baf6ffff7a7a)\n- [GitHub Commit](https://github.com/npm/node-tar/commit/d3d5a4e4560f18131e64fc62f5a281b238ef2ecf)\n",
          "epssDetails": null,
          "identifiers": {
            "CVE": [],
            "CWE": [
              "CWE-400"
            ]
          },
          "packageName": "tar",
          "proprietary": false,
          "creationTime": "2021-08-05T12:41:27.304655Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2021-08-05T12:38:55Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2021-08-05T14:33:10Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-06T14:02:38.479287Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "decompress@0.2.5",
            "tar@0.1.20"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "tar",
          "version": "0.1.20",
          "severityWithCritical": "low"
        },
        {
          "id": "SNYK-JS-TAR-1579147",
          "title": "Arbitrary File Write",
          "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:L",
          "credit": [
            "ginkoid",
            "chen-robert"
          ],
          "semver": {
            "vulnerable": [
              ">=6.0.0 <6.1.7",
              ">=5.0.0 <5.0.8",
              "<4.4.16"
            ]
          },
          "exploit": "Not Defined",
          "fixedIn": [
            "6.1.7",
            "5.0.8",
            "4.4.16"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 8.5,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "tar",
          "references": [
            {
              "url": "https://github.com/npm/node-tar/commit/53602669f58ddbeb3294d7196b3320aaaed22728",
              "title": "GitHub Commit"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
              "cvssV3BaseScore": 8.6,
              "modificationTime": "2024-03-11T09:44:31.001846Z"
            },
            {
              "assigner": "SUSE",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "cvssV3BaseScore": 8.1,
              "modificationTime": "2024-03-11T09:49:48.122765Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "cvssV3BaseScore": 8.1,
              "modificationTime": "2024-03-11T09:53:56.480623Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:L",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 8.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T13:57:17.557250Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
              "assigner": "NVD",
              "severity": "high",
              "baseScore": 8.6,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:44:31.001846Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "assigner": "SUSE",
              "severity": "high",
              "baseScore": 8.1,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:49:48.122765Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "assigner": "Red Hat",
              "severity": "high",
              "baseScore": 8.1,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:53:56.480623Z"
            }
          ],
          "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Arbitrary File Write. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\r\n\r\nThis logic was insufficient when extracting `tar` files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators. However, `\\` is a valid filename character on posix systems.\r\n\r\nBy first creating a directory, and then replacing that directory with a symlink, it is possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted `tar` file to symlink into an arbitrary location. This can lead to extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\r\n\r\nAdditionally, a similar confusion could arise on case-insensitive filesystems. If a `tar` archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but not from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created.\n## Remediation\nUpgrade `tar` to version 6.1.7, 5.0.8, 4.4.16 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/53602669f58ddbeb3294d7196b3320aaaed22728)\n",
          "epssDetails": {
            "percentile": "0.49503",
            "probability": "0.00130",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2021-37701"
            ],
            "CWE": [
              "CWE-22"
            ],
            "NSP": [
              "1779"
            ],
            "GHSA": [
              "GHSA-9r2w-394v-53qc"
            ]
          },
          "packageName": "tar",
          "proprietary": false,
          "creationTime": "2021-09-01T05:55:13.724747Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2021-09-01T05:45:02Z",
          "exploitDetails": {
            "sources": [],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Not Defined",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2021-09-01T07:55:13.009873Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:53:56.480623Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "decompress@0.2.5",
            "tar@0.1.20"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "tar",
          "version": "0.1.20",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-TAR-1579152",
          "title": "Arbitrary File Write",
          "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:L",
          "credit": [
            "ginkoid",
            "chen-robert",
            "JarLob"
          ],
          "semver": {
            "vulnerable": [
              ">=6.0.0 <6.1.9",
              ">=5.0.0 <5.0.10",
              "<4.4.18"
            ]
          },
          "exploit": "Not Defined",
          "fixedIn": [
            "6.1.9",
            "5.0.10",
            "4.4.18"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 8.5,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "tar",
          "references": [
            {
              "url": "https://github.com/npm/node-tar/commit/b6162c7fafe797f856564ef37f4b82747f051455",
              "title": "GitHub Commit"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
              "cvssV3BaseScore": 8.6,
              "modificationTime": "2024-03-11T09:48:12.366271Z"
            },
            {
              "assigner": "SUSE",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "cvssV3BaseScore": 8.1,
              "modificationTime": "2024-03-11T09:49:48.147412Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "cvssV3BaseScore": 8.1,
              "modificationTime": "2024-03-11T09:53:56.478384Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:L",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 8.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T13:57:17.026459Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
              "assigner": "NVD",
              "severity": "high",
              "baseScore": 8.6,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:48:12.366271Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "assigner": "SUSE",
              "severity": "high",
              "baseScore": 8.1,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:49:48.147412Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "assigner": "Red Hat",
              "severity": "high",
              "baseScore": 8.1,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:53:56.478384Z"
            }
          ],
          "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Arbitrary File Write. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\r\n\r\nThis logic is insufficient when extracting `tar` files that contain two directories and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts.\r\nA specially crafted `tar` archive can include directories with two forms of the path that resolve to the same file system entity, followed by a symbolic link with a name in the first form, lastly followed by a file using the second form. This leads to bypassing `node-tar` symlink checks on directories, essentially allowing an untrusted `tar` file to symlink into an arbitrary location and extracting arbitrary files into that location.\n## Remediation\nUpgrade `tar` to version 6.1.9, 5.0.10, 4.4.18 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/b6162c7fafe797f856564ef37f4b82747f051455)\n",
          "epssDetails": {
            "percentile": "0.49503",
            "probability": "0.00130",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2021-37712"
            ],
            "CWE": [
              "CWE-22"
            ],
            "NSP": [
              "1780"
            ],
            "GHSA": [
              "GHSA-qq89-hq3f-393p"
            ]
          },
          "packageName": "tar",
          "proprietary": false,
          "creationTime": "2021-09-01T06:04:41.432860Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2021-09-01T05:57:49Z",
          "exploitDetails": {
            "sources": [],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Not Defined",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2021-09-01T07:55:12.359155Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:53:56.478384Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "decompress@0.2.5",
            "tar@0.1.20"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "tar",
          "version": "0.1.20",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-TAR-1579155",
          "title": "Arbitrary File Write",
          "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:L",
          "credit": [
            "ginkoid",
            "chen-robert",
            "JarLob"
          ],
          "semver": {
            "vulnerable": [
              ">=6.0.0 <6.1.9",
              ">=5.0.0 <5.0.10",
              "<4.4.18"
            ]
          },
          "exploit": "Not Defined",
          "fixedIn": [
            "6.1.9",
            "5.0.10",
            "4.4.18"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": "This vulnerability is only applicable on Windows operating system"
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 8.5,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "tar",
          "references": [
            {
              "url": "https://github.com/npm/node-tar/commit/875a37e3ec031186fc6599f6807341f56c584598",
              "title": "GitHub Commit"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "SUSE",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
              "cvssV3BaseScore": 8.2,
              "modificationTime": "2024-03-11T09:49:48.495446Z"
            },
            {
              "assigner": "NVD",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
              "cvssV3BaseScore": 8.6,
              "modificationTime": "2024-03-11T09:50:59.993875Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:L",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 8.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:02:08.531854Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
              "assigner": "SUSE",
              "severity": "high",
              "baseScore": 8.2,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:49:48.495446Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
              "assigner": "NVD",
              "severity": "high",
              "baseScore": 8.6,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:50:59.993875Z"
            }
          ],
          "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Arbitrary File Write. `node-tar` aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory.\r\n\r\nThis logic is insufficient on Windows systems when extracting `tar` files that contain a path that is not an absolute path, but specify a drive letter different from the extraction target, such as `C:some\\path`. If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` resolves against the current working directory on the `C:` drive, rather than the extraction target directory.\r\n\r\nAdditionally, a `..` portion of the path can occur immediately after the drive letter, such as `C:../foo`, and is not properly sanitized by the logic that checks for `..` within the normalized and split portions of the path.\r\n\r\n**Note:** This only affects users of `node-tar` on Windows systems.\n## Remediation\nUpgrade `tar` to version 6.1.9, 5.0.10, 4.4.18 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/875a37e3ec031186fc6599f6807341f56c584598)\n",
          "epssDetails": {
            "percentile": "0.33828",
            "probability": "0.00074",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2021-37713"
            ],
            "CWE": [
              "CWE-22"
            ],
            "NSP": [
              "1781"
            ],
            "GHSA": [
              "GHSA-5955-9wpr-37jh"
            ]
          },
          "packageName": "tar",
          "proprietary": false,
          "creationTime": "2021-09-01T06:09:32.775270Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2021-09-01T06:05:10Z",
          "exploitDetails": {
            "sources": [],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Not Defined",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2021-09-01T07:55:11.707292Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:50:59.993875Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "decompress@0.2.5",
            "tar@0.1.20"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "tar",
          "version": "0.1.20",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-TAR-174125",
          "title": "Arbitrary File Overwrite",
          "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:O",
          "credit": [
            "Max Justicz"
          ],
          "semver": {
            "vulnerable": [
              "<2.2.2",
              ">=3.0.0 <4.4.2"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [
            "2.2.2",
            "4.4.2"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 8.1,
          "functions": [
            {
              "version": [
                ">=3.0.0 <4.4.2"
              ],
              "functionId": {
                "filePath": "lib/unpack.js",
                "className": null,
                "functionName": "Unpack.prototype.CHECKFS"
              }
            }
          ],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "tar",
          "references": [
            {
              "url": "https://github.com/npm/node-tar/commit/b0c58433c22f5e7fe8b1c76373f27e3f81dcd4c8",
              "title": "GitHub Commit"
            },
            {
              "url": "https://www.npmjs.com/advisories/803",
              "title": "NPM Security Advisory"
            },
            {
              "url": "https://hackerone.com/reports/344595",
              "title": "POC: HackerOne Report"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
              "cvssV3BaseScore": 7.5,
              "modificationTime": "2024-03-11T09:48:10.963551Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
              "cvssV3BaseScore": 8.8,
              "modificationTime": "2024-03-11T09:53:56.106758Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:O",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 8.1,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:01:05.070709Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
              "assigner": "NVD",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.0",
              "modificationTime": "2024-03-11T09:48:10.963551Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
              "assigner": "Red Hat",
              "severity": "high",
              "baseScore": 8.8,
              "cvssVersion": "3.0",
              "modificationTime": "2024-03-11T09:53:56.106758Z"
            }
          ],
          "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hard-link to a file that already exists in the system, and a file that matches the hard-link may overwrite system's files with the contents of the extracted file.\n## Remediation\nUpgrade `tar` to version 2.2.2, 4.4.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/b0c58433c22f5e7fe8b1c76373f27e3f81dcd4c8)\n- [NPM Security Advisory](https://www.npmjs.com/advisories/803)\n- [POC: HackerOne Report](https://hackerone.com/reports/344595)\n",
          "epssDetails": {
            "percentile": "0.73910",
            "probability": "0.00385",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2018-20834"
            ],
            "CWE": [
              "CWE-59"
            ],
            "NSP": [
              "803"
            ],
            "GHSA": [
              "GHSA-j44m-qm6p-hp7m"
            ]
          },
          "packageName": "tar",
          "proprietary": false,
          "creationTime": "2019-04-07T10:04:29.112428Z",
          "functions_new": [
            {
              "version": [
                ">=3.0.0 <4.4.2"
              ],
              "functionId": {
                "filePath": "lib/unpack.js",
                "functionName": "Unpack.prototype.CHECKFS"
              }
            }
          ],
          "alternativeIds": [],
          "disclosureTime": "2019-04-04T03:31:56Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2019-04-07T03:31:56Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:53:56.106758Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "decompress@0.2.5",
            "tar@0.1.20"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "tar",
          "version": "0.1.20",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-TAR-6476909",
          "title": "Uncontrolled Resource Consumption ('Resource Exhaustion')",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H/E:P",
          "credit": [
            "Mohamed Dief"
          ],
          "semver": {
            "vulnerable": [
              "<6.2.1"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [
            "6.2.1"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "medium",
          "cvssScore": 6.5,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "tar",
          "references": [
            {
              "url": "https://github.com/isaacs/node-tar/commit/fe8cd57da5686f8695415414bda49206a545f7f7",
              "title": "GitHub Commit"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "Red Hat",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
              "cvssV3BaseScore": 6.5,
              "modificationTime": "2024-06-20T13:34:25.566902Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H/E:P",
              "assigner": "Snyk",
              "severity": "medium",
              "baseScore": 6.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-29T11:51:08.899351Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
              "assigner": "Red Hat",
              "severity": "medium",
              "baseScore": 6.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-06-20T13:34:25.566902Z"
            }
          ],
          "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Uncontrolled Resource Consumption ('Resource Exhaustion') due to the lack of folders count validation during the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running the software and even crash the client within few seconds of running it using a path with too many sub-folders inside.\n## Remediation\nUpgrade `tar` to version 6.2.1 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/node-tar/commit/fe8cd57da5686f8695415414bda49206a545f7f7)\n",
          "epssDetails": {
            "percentile": "0.17556",
            "probability": "0.00045",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2024-28863"
            ],
            "CWE": [
              "CWE-400"
            ],
            "GHSA": [
              "GHSA-f5x3-32g6-xq36"
            ]
          },
          "packageName": "tar",
          "proprietary": false,
          "creationTime": "2024-03-22T12:56:33.802918Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2024-03-21T22:40:19Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2024-03-22T12:56:33.985087Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-06-20T13:34:25.566902Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "decompress@0.2.5",
            "tar@0.1.20"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "tar",
          "version": "0.1.20",
          "severityWithCritical": "medium"
        },
        {
          "id": "SNYK-JS-TMPL-1583443",
          "title": "Regular Expression Denial of Service (ReDoS)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C",
          "credit": [
            "Unknown"
          ],
          "semver": {
            "vulnerable": [
              "<1.0.5"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [
            "1.0.5"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 7.5,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "tmpl",
          "references": [
            {
              "url": "https://github.com/daaku/nodejs-tmpl/commit/4c654e4d1542f329ed561fd95ccd80f30c6872d6",
              "title": "GitHub Commit"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "cvssV3BaseScore": 7.5,
              "modificationTime": "2024-03-11T09:50:58.338243Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:05:05.778560Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "NVD",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:50:58.338243Z"
            }
          ],
          "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the main functionality.\r\n\r\n### PoC\r\n```\r\nvar tmpl = require(\"tmpl\")\r\nfor(var i = 1; i <= 1000; i++) {\r\n        var time = Date.now();\r\n        payload = \"hello, \" + \"{\".repeat(i*10000) + \"day\"\r\n        tmpl(payload, {day: \"tomorrow\"})\r\n        var time_taken = Date.now() - time;\r\n        console.log(\"payload length: \" + payload.length + \" - time taken: \" + time_taken + \"ms\")\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `tmpl` to version 1.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/daaku/nodejs-tmpl/commit/4c654e4d1542f329ed561fd95ccd80f30c6872d6)\n",
          "epssDetails": {
            "percentile": "0.47115",
            "probability": "0.00117",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2021-3777"
            ],
            "CWE": [
              "CWE-400"
            ]
          },
          "packageName": "tmpl",
          "proprietary": false,
          "creationTime": "2021-09-08T12:39:02.502663Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2021-09-08T11:19:47Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2021-09-15T18:40:54.502927Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:50:58.338243Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-watcher@1.0.3",
            "sane@0.8.1",
            "walker@1.0.7",
            "makeerror@1.0.11",
            "tmpl@1.0.4"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "tmpl",
          "version": "1.0.4",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-WORDWRAP-3149973",
          "title": "Regular Expression Denial of Service (ReDoS)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
          "credit": [
            "Carter Snook"
          ],
          "semver": {
            "vulnerable": [
              "<1.2.4"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [
            "1.2.4"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "low",
          "cvssScore": 3.7,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "word-wrap",
          "references": [
            {
              "url": "https://github.com/jonschlinkert/word-wrap/commit/420dce9a2412b21881202b73a3c34f0edc53cb2e",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/jonschlinkert/word-wrap/pull/41",
              "title": "GitHub PR"
            },
            {
              "url": "https://github.com/jonschlinkert/word-wrap/blob/master/index.js%23L39",
              "title": "Vulnerable Code"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "cvssV3BaseScore": 7.5,
              "modificationTime": "2024-03-11T09:53:22.587261Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "cvssV3BaseScore": 7.5,
              "modificationTime": "2024-03-11T09:54:01.864734Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
              "assigner": "Snyk",
              "severity": "low",
              "baseScore": 3.7,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:06:08.463618Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "NVD",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:53:22.587261Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "Red Hat",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:54:01.864734Z"
            }
          ],
          "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the usage of an insecure regular expression within the `result` variable.\r\n\r\n**Note:**\r\n\r\nThe regex is vulnerable on its own, but the vulnerable function is not reachable as shipped in the package.\r\n\r\n\r\n## PoC\r\n```js\r\nconst wrap = require(\"word-wrap\");\r\n\r\nfor (let i = 0; i <= 10; i++) {\r\nconst attack = \"a\" + \"t\".repeat(i * 10_00000);\r\nconst start = performance.now();\r\nwrap(\r\nattack,\r\n{ trim: true },\r\n);\r\nconsole.log(`${attack.length} characters: ${performance.now() - start}ms`);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `word-wrap` to version 1.2.4 or higher.\n## References\n- [GitHub Commit](https://github.com/jonschlinkert/word-wrap/commit/420dce9a2412b21881202b73a3c34f0edc53cb2e)\n- [GitHub PR](https://github.com/jonschlinkert/word-wrap/pull/41)\n- [Vulnerable Code](https://github.com/jonschlinkert/word-wrap/blob/master/index.js#L39)\n",
          "epssDetails": {
            "percentile": "0.49905",
            "probability": "0.00133",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2023-26115"
            ],
            "CWE": [
              "CWE-1333"
            ],
            "GHSA": [
              "GHSA-j8xg-fqg3-53r7"
            ]
          },
          "packageName": "word-wrap",
          "proprietary": true,
          "creationTime": "2022-11-28T14:29:41.016778Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2022-11-28T13:29:26Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2023-03-22T15:02:56.710165Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:54:01.864734Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "component-remotes@1.2.0",
            "cogent@*",
            "proxy-agent@1.1.1",
            "pac-proxy-agent@0.2.0",
            "pac-resolver@1.2.6",
            "degenerator@1.0.4",
            "escodegen@1.14.1",
            "optionator@0.8.3",
            "word-wrap@1.2.3"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "word-wrap",
          "version": "1.2.3",
          "severityWithCritical": "low"
        },
        {
          "id": "SNYK-JS-Y18N-1021887",
          "title": "Prototype Pollution",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
          "credit": [
            "Beomjin Lee"
          ],
          "semver": {
            "vulnerable": [
              "<3.2.2",
              ">=4.0.0 <4.0.1",
              ">=5.0.0 <5.0.5"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [
            "3.2.2",
            "4.0.1",
            "5.0.5"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 7.3,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "y18n",
          "references": [
            {
              "url": "https://github.com/yargs/y18n/commit/a9ac604abf756dec9687be3843e2c93bfe581f25",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/yargs/y18n/issues/96",
              "title": "GitHub Issue"
            },
            {
              "url": "https://github.com/yargs/y18n/pull/108",
              "title": "GitHub PR"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "critical",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "cvssV3BaseScore": 9.8,
              "modificationTime": "2024-03-11T09:49:06.991056Z"
            },
            {
              "assigner": "SUSE",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
              "cvssV3BaseScore": 7.3,
              "modificationTime": "2024-03-11T09:49:37.366008Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
              "cvssV3BaseScore": 7.3,
              "modificationTime": "2024-03-11T09:53:50.044917Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 7.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:04:41.906642Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "assigner": "NVD",
              "severity": "critical",
              "baseScore": 9.8,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:49:06.991056Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
              "assigner": "SUSE",
              "severity": "high",
              "baseScore": 7.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:49:37.366008Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
              "assigner": "Red Hat",
              "severity": "high",
              "baseScore": 7.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:53:50.044917Z"
            }
          ],
          "description": "## Overview\n[y18n](https://www.npmjs.com/package/y18n) is a the bare-bones internationalization library used by yargs\n\nAffected versions of this package are vulnerable to Prototype Pollution due to improper sanitization.\r\n## PoC by po6ix:\r\n```js\r\nconst y18n = require('y18n')();\r\n \r\ny18n.setLocale('__proto__');\r\ny18n.updateLocale({polluted: true});\r\n\r\nconsole.log(polluted); // true\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `y18n` to version 3.2.2, 4.0.1, 5.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/yargs/y18n/commit/a9ac604abf756dec9687be3843e2c93bfe581f25)\n- [GitHub Issue](https://github.com/yargs/y18n/issues/96)\n- [GitHub PR](https://github.com/yargs/y18n/pull/108)\n",
          "epssDetails": {
            "percentile": "0.96903",
            "probability": "0.27668",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2020-7774"
            ],
            "CWE": [
              "CWE-1321"
            ],
            "GHSA": [
              "GHSA-c4w7-xm78-47vh"
            ]
          },
          "packageName": "y18n",
          "proprietary": true,
          "creationTime": "2020-10-25T14:27:16.715665Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2020-10-25T14:24:22Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2020-11-10T15:27:28Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:53:50.044917Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "component-remotes@1.2.0",
            "cogent@*",
            "proxy-agent@1.1.1",
            "pac-proxy-agent@0.2.0",
            "pac-resolver@1.2.6",
            "regenerator@0.8.46",
            "defs@1.1.1",
            "yargs@3.27.0",
            "y18n@3.2.1"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "y18n",
          "version": "3.2.1",
          "severityWithCritical": "high"
        },
        {
          "id": "npm:debug:20170905",
          "title": "Regular Expression Denial of Service (ReDoS)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
          "credit": [
            "Cristian-Alexandru Staicu"
          ],
          "semver": {
            "vulnerable": [
              ">=1.0.0 <2.6.9",
              ">=3.0.0 <3.1.0",
              ">=3.2.0 <3.2.7",
              ">=4.0.0 <4.3.1"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [
            "2.6.9",
            "3.1.0",
            "3.2.7",
            "4.3.1"
          ],
          "patches": [
            {
              "id": "patch:npm:debug:20170905:0",
              "urls": [
                "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_0_c38a0166c266a679c8de012d4eaccec3f944e685.patch"
              ],
              "version": ">= 3.0.0 <=3.0.1",
              "comments": [],
              "modificationTime": "2019-12-03T11:40:45.872397Z"
            },
            {
              "id": "patch:npm:debug:20170905:1",
              "urls": [
                "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_1_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
              ],
              "version": ">=2.5.1 <2.6.9",
              "comments": [],
              "modificationTime": "2019-12-03T11:40:45.873422Z"
            },
            {
              "id": "patch:npm:debug:20170905:2",
              "urls": [
                "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_2_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
              ],
              "version": ">=2.4.0 <2.5.0",
              "comments": [],
              "modificationTime": "2019-12-03T11:40:45.874399Z"
            },
            {
              "id": "patch:npm:debug:20170905:3",
              "urls": [
                "https://snyk-patches.s3.amazonaws.com/npm/debug/20170905/debug_20170905_0_3_f53962e944a87e6ca9bb622a2a12dffc22a9bb5a.patch"
              ],
              "version": ">=2.0.0 <2.4.0",
              "comments": [],
              "modificationTime": "2019-12-03T11:40:45.875363Z"
            }
          ],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "low",
          "cvssScore": 3.7,
          "functions": [
            {
              "version": [
                ">= 2.5.0 <2.6.9",
                ">=3.0.0 <3.1.0"
              ],
              "functionId": {
                "filePath": "src/node.js",
                "className": null,
                "functionName": "exports.formatters.o"
              }
            },
            {
              "version": [
                ">=1.0.0 <2.5.0"
              ],
              "functionId": {
                "filePath": "node.js",
                "className": null,
                "functionName": "exports.formatters.o"
              }
            }
          ],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "debug",
          "references": [
            {
              "url": "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/visionmedia/debug/issues/501",
              "title": "GitHub Issue"
            },
            {
              "url": "https://github.com/visionmedia/debug/pull/504",
              "title": "GitHub PR"
            },
            {
              "url": "https://github.com/debug-js/debug/releases/tag/2.6.9",
              "title": "GitHub Release Notes 2.6.9"
            },
            {
              "url": "https://github.com/debug-js/debug/releases/tag/3.1.0",
              "title": "GitHub Release Notes 3.1.0"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "cvssV3BaseScore": 5.3,
              "modificationTime": "2024-03-11T09:46:57.132789Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "cvssV3BaseScore": 5.3,
              "modificationTime": "2024-03-11T09:53:47.320399Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
              "assigner": "Snyk",
              "severity": "low",
              "baseScore": 3.7,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:09:27.189371Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "assigner": "NVD",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.0",
              "modificationTime": "2024-03-11T09:46:57.132789Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "assigner": "Red Hat",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.0",
              "modificationTime": "2024-03-11T09:53:47.320399Z"
            }
          ],
          "description": "## Overview\n[debug](https://github.com/visionmedia/debug) is a small debugging utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the function `useColors` via manipulation of the `str` argument. \r\nThe vulnerability can cause a very low impact of about 2 seconds of matching time for data 50k characters long.\r\n\r\n**Note:**\r\nCVE-2017-20165 is a duplicate of this vulnerability.\r\n\r\n## PoC\r\n\r\nUse the following regex in the `%o` formatter.\r\n```js\r\n/\\s*\\n\\s*/\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `debug` to version 2.6.9, 3.1.0, 3.2.7, 4.3.1 or higher.\n## References\n- [GitHub Commit](https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac)\n- [GitHub Commit](https://github.com/visionmedia/debug/pull/504/commits/42a6ae0737f9243c80b6d3dbb08a69a7ae2a1061)\n- [GitHub Issue](https://github.com/visionmedia/debug/issues/501)\n- [GitHub PR](https://github.com/visionmedia/debug/pull/504)\n- [GitHub Release Notes 2.6.9](https://github.com/debug-js/debug/releases/tag/2.6.9)\n- [GitHub Release Notes 3.1.0](https://github.com/debug-js/debug/releases/tag/3.1.0)\n",
          "epssDetails": {
            "percentile": "0.70002",
            "probability": "0.00296",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2017-16137"
            ],
            "CWE": [
              "CWE-400"
            ],
            "NSP": [
              "534"
            ],
            "GHSA": [
              "GHSA-gxpj-cx7g-858c"
            ],
            "ALTERNATIVE": [
              "SNYK-JS-DEBUG-10762",
              "SNYK-JS-DEBUG-10762",
              "npm:debug:20170905"
            ]
          },
          "packageName": "debug",
          "proprietary": false,
          "creationTime": "2017-09-13T07:55:05.106000Z",
          "functions_new": [
            {
              "version": [
                ">= 2.5.0 <2.6.9",
                ">=3.0.0 <3.1.0"
              ],
              "functionId": {
                "filePath": "src/node.js",
                "functionName": "exports.formatters.o"
              }
            },
            {
              "version": [
                ">=1.0.0 <2.5.0"
              ],
              "functionId": {
                "filePath": "node.js",
                "functionName": "exports.formatters.o"
              }
            }
          ],
          "alternativeIds": [
            "SNYK-JS-DEBUG-10762"
          ],
          "disclosureTime": "2017-09-05T21:00:00Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2017-09-26T03:55:05Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:53:47.320399Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "component-remotes@1.2.0",
            "component-validator@1.1.1",
            "component-consoler@2.0.0",
            "debug@4.1.1"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "debug",
          "version": "4.1.1",
          "severityWithCritical": "low"
        },
        {
          "id": "npm:extend:20180424",
          "title": "Prototype Pollution",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "credit": [
            "Unknown"
          ],
          "semver": {
            "vulnerable": [
              "<2.0.2",
              ">=3.0.0 <3.0.2"
            ]
          },
          "exploit": "Not Defined",
          "fixedIn": [
            "2.0.2",
            "3.0.2"
          ],
          "patches": [
            {
              "id": "patch:npm:extend:20180424:0",
              "urls": [
                "https://snyk-patches.s3.amazonaws.com/npm/extend/20180424/extend_20180424_0_0_0e68e71d93507fcc391e398bc84abd0666b28190.patch"
              ],
              "version": ">=3.0.0 <3.0.2",
              "comments": [],
              "modificationTime": "2019-12-03T11:40:45.727650Z"
            }
          ],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 7.3,
          "functions": [
            {
              "version": [
                "<2.0.2",
                ">=3.0.0 <3.0.2"
              ],
              "functionId": {
                "filePath": "index.js",
                "className": null,
                "functionName": "module.exports"
              }
            }
          ],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "extend",
          "references": [
            {
              "url": "https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/justmoon/node-extend/pull/48%23issuecomment-398261612",
              "title": "GitHub PR"
            },
            {
              "url": "https://hackerone.com/reports/381185",
              "title": "HackerOne Report"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "critical",
              "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "cvssV3BaseScore": 9.8,
              "modificationTime": "2024-03-11T09:47:54.158156Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
              "cvssV3BaseScore": 4.8,
              "modificationTime": "2024-03-11T09:53:02.573245Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 7.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T13:55:34.732461Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "assigner": "NVD",
              "severity": "critical",
              "baseScore": 9.8,
              "cvssVersion": "3.0",
              "modificationTime": "2024-03-11T09:47:54.158156Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
              "assigner": "Red Hat",
              "severity": "medium",
              "baseScore": 4.8,
              "cvssVersion": "3.0",
              "modificationTime": "2024-03-11T09:53:02.573245Z"
            }
          ],
          "description": "## Overview\n[extend](https://www.npmjs.com/package/extend) is a port of the classic extend() method from jQuery.\n\nAffected versions of this package are vulnerable to Prototype Pollution. Utilities function can be tricked into modifying the prototype of \"Object\" when the attacker control part of the structure passed to these function. This can let an attacker add or modify existing property that will exist on all object.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `extend` to version 2.0.2, 3.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/justmoon/node-extend/commit/0e68e71d93507fcc391e398bc84abd0666b28190)\n- [GitHub PR](https://github.com/justmoon/node-extend/pull/48#issuecomment-398261612)\n- [HackerOne Report](https://hackerone.com/reports/381185)\n",
          "epssDetails": {
            "percentile": "0.74109",
            "probability": "0.00390",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2018-16492"
            ],
            "CWE": [
              "CWE-1321"
            ],
            "NSP": [
              "996"
            ],
            "GHSA": [
              "GHSA-qrmc-fj45-qfc2"
            ],
            "ALTERNATIVE": [
              "SNYK-JS-EXTEND-12179",
              "SNYK-JS-EXTEND-12179",
              "npm:extend:20180424"
            ]
          },
          "packageName": "extend",
          "proprietary": false,
          "creationTime": "2018-07-23T17:51:10.908000Z",
          "functions_new": [
            {
              "version": [
                "<2.0.2",
                ">=3.0.0 <3.0.2"
              ],
              "functionId": {
                "filePath": "index.js",
                "functionName": "module.exports"
              }
            }
          ],
          "alternativeIds": [
            "SNYK-JS-EXTEND-12179"
          ],
          "disclosureTime": "2018-04-24T17:51:10Z",
          "exploitDetails": {
            "sources": [],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Not Defined",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2018-07-23T13:46:08Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:53:02.573245Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "component-remotes@1.2.0",
            "cogent@*",
            "proxy-agent@1.1.1",
            "socks-proxy-agent@1.0.2",
            "extend@1.2.1"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "extend",
          "version": "1.2.1",
          "severityWithCritical": "high"
        },
        {
          "id": "npm:http-proxy-agent:20180406",
          "title": "Uninitialized Memory Exposure",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
          "credit": [
            "ChALkeR"
          ],
          "semver": {
            "vulnerable": [
              "<2.1.0"
            ]
          },
          "exploit": "Functional",
          "fixedIn": [
            "2.1.0"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 8.2,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "http-proxy-agent",
          "references": [
            {
              "url": "https://hackerone.com/reports/321631",
              "title": "HackerOne Report"
            },
            {
              "url": "https://github.com/TooTallNate/node-http-proxy-agent/blob/2.0.0/index.js%23L80",
              "title": "Vulenrable Code"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "critical",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "cvssV3BaseScore": 9.8,
              "modificationTime": "2024-03-11T09:47:22.687401Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
              "cvssV3BaseScore": 7.3,
              "modificationTime": "2024-03-11T09:51:19.528519Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 8.2,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T13:55:57.860782Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "assigner": "NVD",
              "severity": "critical",
              "baseScore": 9.8,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:47:22.687401Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
              "assigner": "Red Hat",
              "severity": "high",
              "baseScore": 7.3,
              "cvssVersion": "3.0",
              "modificationTime": "2024-03-11T09:51:19.528519Z"
            }
          ],
          "description": "## Overview\r\n[http-proxy-agent](https://www.npmjs.com/package/http-proxy-agent) provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in http module.\r\n\r\nAffected versions of this package are vulnerable to Uninitialized Memory Exposure and Denial of Service (DoS) attacks due to passing unsanitized options to Buffer(arg).\r\n\r\n## Uninitialized memory Exposre PoC by ChALKer\r\n```js\r\n// listen with: nc -l -p 8080\r\n\r\nvar url = require('url');\r\nvar https = require('https');\r\nvar HttpsProxyAgent = require('https-proxy-agent');\r\n\r\nvar proxy = {\r\n  protocol: 'http:',\r\n  host: \"127.0.0.1\",\r\n  port: 8080\r\n};\r\n\r\nproxy.auth = 500; // a number as 'auth'\r\nvar opts = url.parse('https://example.com/');\r\nvar agent = new HttpsProxyAgent(proxy);\r\nopts.agent = agent;\r\nhttps.get(opts);\r\n```\r\n## Details\r\nThe Buffer class on Node.js is a mutable array of binary data, and can be initialized with a string, array or number.\r\n```js\r\nconst buf1 = new Buffer([1,2,3]);\r\n// creates a buffer containing [01, 02, 03]\r\nconst buf2 = new Buffer('test');\r\n// creates a buffer containing ASCII bytes [74, 65, 73, 74]\r\nconst buf3 = new Buffer(10);\r\n// creates a buffer of length 10\r\n```\r\n\r\nThe first two variants simply create a binary representation of the value it received. The last one, however, pre-allocates a buffer of the specified size, making it a useful buffer, especially when reading data from a stream.\r\nWhen using the number constructor of Buffer, it will allocate the memory, but will not fill it with zeros. Instead, the allocated buffer will hold whatever was in memory at the time. If the buffer is not `zeroed` by using `buf.fill(0)`, it may leak sensitive information like keys, source code, and system info.\r\n\r\n\r\n## Remediation\r\nUpgrade `https-proxy-agent` to version 2.1.0 or higher.\r\n**Note** This is vulnerable only for Node <=4\r\n\r\n## References\r\n- [HackerOne Report](https://hackerone.com/reports/321631)",
          "epssDetails": {
            "percentile": "0.62404",
            "probability": "0.00235",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2019-10196"
            ],
            "CWE": [
              "CWE-399",
              "CWE-665"
            ],
            "NSP": [
              "607"
            ],
            "GHSA": [
              "GHSA-8w57-jfpm-945m"
            ],
            "ALTERNATIVE": [
              "SNYK-JS-HTTPPROXYAGENT-12115",
              "SNYK-JS-HTTPPROXYAGENT-12115",
              "npm:http-proxy-agent:20180406"
            ]
          },
          "packageName": "http-proxy-agent",
          "proprietary": false,
          "creationTime": "2018-03-03T08:09:56.416000Z",
          "functions_new": [],
          "alternativeIds": [
            "SNYK-JS-HTTPPROXYAGENT-12115"
          ],
          "disclosureTime": "2018-04-06T08:09:56Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Functional",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2018-04-09T15:17:27Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:51:19.528519Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "component-resolver@1.3.0",
            "component-downloader@1.2.0",
            "component-remotes@1.2.0",
            "cogent@*",
            "proxy-agent@1.1.1",
            "http-proxy-agent@0.2.7"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "http-proxy-agent",
          "version": "0.2.7",
          "severityWithCritical": "high"
        },
        {
          "id": "npm:mime:20170907",
          "title": "Regular Expression Denial of Service (ReDoS)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "credit": [
            "Cristian-Alexandru Staicu"
          ],
          "semver": {
            "vulnerable": [
              "<1.4.1",
              ">=2.0.0 <2.0.3"
            ]
          },
          "exploit": "Not Defined",
          "fixedIn": [
            "1.4.1",
            "2.0.3"
          ],
          "patches": [
            {
              "id": "patch:npm:mime:20170907:0",
              "urls": [
                "https://snyk-patches.s3.amazonaws.com/npm/mime/20170907/mime_20170907_0_0_855d0c4b8b22e4a80b9401a81f2872058eae274d.patch"
              ],
              "version": "=1.2.11 || =1.3.4",
              "comments": [],
              "modificationTime": "2019-12-03T11:40:45.877450Z"
            }
          ],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "low",
          "cvssScore": 3.7,
          "functions": [
            {
              "version": [
                ">=2.0.0 <2.0.3"
              ],
              "functionId": {
                "filePath": "Mime.js",
                "className": null,
                "functionName": "Mime.prototype.getType"
              }
            },
            {
              "version": [
                ">=1.2.6 <1.4.1"
              ],
              "functionId": {
                "filePath": "mime.js",
                "className": null,
                "functionName": "Mime.prototype.lookup"
              }
            },
            {
              "version": [
                "<1.2.6"
              ],
              "functionId": {
                "filePath": "mime.js",
                "className": null,
                "functionName": "mime.module.exports.lookup"
              }
            }
          ],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "mime",
          "references": [
            {
              "url": "https://github.com/broofa/node-mime/commit/1df903fdeb9ae7eaa048795b8d580ce2c98f40b0",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/broofa/node-mime/commit/855d0c4b8b22e4a80b9401a81f2872058eae274d",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/broofa/node-mime/issues/167",
              "title": "GitHub Issue"
            },
            {
              "url": "https://www.npmjs.com/advisories/535",
              "title": "NPM Security Advisory"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "cvssV3BaseScore": 7.5,
              "modificationTime": "2024-03-11T09:47:01.954784Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "cvssV3BaseScore": 5.3,
              "modificationTime": "2024-03-11T09:53:48.285535Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "assigner": "Snyk",
              "severity": "low",
              "baseScore": 3.7,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T13:58:13.405203Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "NVD",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.0",
              "modificationTime": "2024-03-11T09:47:01.954784Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "assigner": "Red Hat",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.0",
              "modificationTime": "2024-03-11T09:53:48.285535Z"
            }
          ],
          "description": "## Overview\n[mime](https://www.npmjs.com/package/mime) is a comprehensive, compact MIME type module.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). It uses regex the following regex `/.*[\\.\\/\\\\]/` in its lookup, which can cause a slowdown of 2 seconds for 50k characters.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `mime` to version 1.4.1, 2.0.3 or higher.\n## References\n- [GitHub Commit](https://github.com/broofa/node-mime/commit/1df903fdeb9ae7eaa048795b8d580ce2c98f40b0)\n- [GitHub Commit](https://github.com/broofa/node-mime/commit/855d0c4b8b22e4a80b9401a81f2872058eae274d)\n- [GitHub Issue](https://github.com/broofa/node-mime/issues/167)\n- [NPM Security Advisory](https://www.npmjs.com/advisories/535)\n",
          "epssDetails": {
            "percentile": "0.49240",
            "probability": "0.00129",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2017-16138"
            ],
            "CWE": [
              "CWE-400"
            ],
            "NSP": [
              "535"
            ],
            "GHSA": [
              "GHSA-wrvr-8mpx-r7pp"
            ],
            "ALTERNATIVE": [
              "SNYK-JS-MIME-10788",
              "SNYK-JS-MIME-10788",
              "npm:mime:20170907"
            ]
          },
          "packageName": "mime",
          "proprietary": false,
          "creationTime": "2017-09-26T05:48:40.307000Z",
          "functions_new": [
            {
              "version": [
                ">=2.0.0 <2.0.3"
              ],
              "functionId": {
                "filePath": "Mime.js",
                "functionName": "Mime.prototype.getType"
              }
            },
            {
              "version": [
                ">=1.2.6 <1.4.1"
              ],
              "functionId": {
                "filePath": "mime.js",
                "functionName": "Mime.prototype.lookup"
              }
            },
            {
              "version": [
                "<1.2.6"
              ],
              "functionId": {
                "filePath": "mime.js",
                "functionName": "mime.module.exports.lookup"
              }
            }
          ],
          "alternativeIds": [
            "SNYK-JS-MIME-10788"
          ],
          "disclosureTime": "2017-09-07T21:00:00Z",
          "exploitDetails": {
            "sources": [],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Not Defined",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2017-09-27T05:48:40Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:53:48.285535Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "superagent@0.17.0",
            "mime@1.2.5"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "mime",
          "version": "1.2.5",
          "severityWithCritical": "low"
        },
        {
          "id": "npm:superagent:20170807",
          "title": "Denial of Service (DoS)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "credit": [
            "Dennis Appelt"
          ],
          "semver": {
            "vulnerable": [
              "<3.7.0"
            ]
          },
          "exploit": "Not Defined",
          "fixedIn": [
            "3.7.0"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "low",
          "cvssScore": 3.7,
          "functions": [
            {
              "version": [
                ">=3.4.0 <3.7.0"
              ],
              "functionId": {
                "filePath": "lib/node/index.js",
                "className": null,
                "functionName": "Request.prototype._end"
              }
            },
            {
              "version": [
                "<3.4.0"
              ],
              "functionId": {
                "filePath": "lib/node/index.js",
                "className": null,
                "functionName": "Request.prototype.end"
              }
            }
          ],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "superagent",
          "references": [
            {
              "url": "https://github.com/visionmedia/superagent/issues/1259",
              "title": "GitHub Issue"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "cvssV3BaseScore": 5.9,
              "modificationTime": "2024-03-11T09:47:03.378255Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "assigner": "Snyk",
              "severity": "low",
              "baseScore": 3.7,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T13:58:19.722707Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "NVD",
              "severity": "medium",
              "baseScore": 5.9,
              "cvssVersion": "3.0",
              "modificationTime": "2024-03-11T09:47:03.378255Z"
            }
          ],
          "description": "## Overview\n[superagent](https://www.npmjs.com/package/superagent) is a Small progressive client-side HTTP request library, and Node.js module with the same API, supporting many high-level HTTP client features.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). It uncompresses responses in memory, and a malicious user may send a specially crafted zip file which will then unzip in the server and cause excessive CPU consumption. This is also known as a `Zip Bomb`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `superagent` to version 3.7.0 or higher.\n## References\n- [GitHub Issue](https://github.com/visionmedia/superagent/issues/1259)\n",
          "epssDetails": {
            "percentile": "0.42533",
            "probability": "0.00098",
            "modelVersion": "v2023.03.01"
          },
          "identifiers": {
            "CVE": [
              "CVE-2017-16129"
            ],
            "CWE": [
              "CWE-400"
            ],
            "NSP": [
              "479"
            ],
            "GHSA": [
              "GHSA-8225-6cvr-8pqp"
            ],
            "ALTERNATIVE": [
              "SNYK-JS-SUPERAGENT-10789",
              "SNYK-JS-SUPERAGENT-10789",
              "npm:superagent:20170807"
            ]
          },
          "packageName": "superagent",
          "proprietary": false,
          "creationTime": "2017-09-27T11:38:25.465000Z",
          "functions_new": [
            {
              "version": [
                ">=3.4.0 <3.7.0"
              ],
              "functionId": {
                "filePath": "lib/node/index.js",
                "functionName": "Request.prototype._end"
              }
            },
            {
              "version": [
                "<3.4.0"
              ],
              "functionId": {
                "filePath": "lib/node/index.js",
                "functionName": "Request.prototype.end"
              }
            }
          ],
          "alternativeIds": [
            "SNYK-JS-SUPERAGENT-10789"
          ],
          "disclosureTime": "2017-08-06T21:00:00Z",
          "exploitDetails": {
            "sources": [],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Not Defined",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2017-09-27T11:38:25Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:47:03.378255Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "superagent@0.17.0"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "superagent",
          "version": "0.17.0",
          "severityWithCritical": "low"
        },
        {
          "id": "npm:superagent:20181108",
          "title": "Information Exposure",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
          "credit": [
            "pszabop"
          ],
          "semver": {
            "vulnerable": [
              "<3.8.1"
            ]
          },
          "exploit": "Not Defined",
          "fixedIn": [
            "3.8.1"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "medium",
          "cvssScore": 5.3,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "superagent",
          "references": [
            {
              "url": "https://github.com/visionmedia/superagent/commit/087edaf15cac51f69ae6346c431f40627aff0ff4",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/visionmedia/superagent/issues/1309",
              "title": "GitHub Issue"
            }
          ],
          "cvssDetails": [],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
              "assigner": "Snyk",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T13:58:04.682355Z"
            }
          ],
          "description": "## Overview\n[superagent](https://www.npmjs.com/package/superagent) is a Small progressive client-side HTTP request library, and Node.js module with the same API, supporting many high-level HTTP client features.\n\nAffected versions of this package are vulnerable to Information Exposure due to sending the contents of Authorization to third parties.\n## Remediation\nUpgrade `superagent` to version 3.8.1 or higher.\n## References\n- [GitHub Commit](https://github.com/visionmedia/superagent/commit/087edaf15cac51f69ae6346c431f40627aff0ff4)\n- [GitHub Issue](https://github.com/visionmedia/superagent/issues/1309)\n",
          "epssDetails": null,
          "identifiers": {
            "CVE": [],
            "CWE": [
              "CWE-200"
            ],
            "ALTERNATIVE": [
              "SNYK-JS-SUPERAGENT-12185",
              "SNYK-JS-SUPERAGENT-12185",
              "npm:superagent:20181108"
            ]
          },
          "packageName": "superagent",
          "proprietary": false,
          "creationTime": "2018-11-08T19:42:02Z",
          "functions_new": [],
          "alternativeIds": [
            "SNYK-JS-SUPERAGENT-12185"
          ],
          "disclosureTime": "2018-11-08T19:42:02Z",
          "exploitDetails": {
            "sources": [],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Not Defined",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2018-07-31T13:43:37Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-06T13:58:04.682355Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "next-gen-gui@1.0.0",
            "component@1.1.0",
            "superagent@0.17.0"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "superagent",
          "version": "0.17.0",
          "severityWithCritical": "medium"
        }
      ],
      "upgrade": {
        "@angular/core@9.1.0": {
          "upgradeTo": "@angular/core@11.0.5",
          "upgrades": [
            "@angular/core@9.1.0"
          ],
          "vulns": [
            "SNYK-JS-ANGULARCORE-1070902"
          ]
        },
        "chart.js@2.9.3": {
          "upgradeTo": "chart.js@3.0.0",
          "upgrades": [
            "moment@2.24.0",
            "moment@2.24.0",
            "chart.js@2.9.3"
          ],
          "vulns": [
            "SNYK-JS-MOMENT-2440688",
            "SNYK-JS-MOMENT-2944238",
            "SNYK-JS-CHARTJS-1018716"
          ]
        }
      },
      "patch": {
        "npm:minimatch:20160620": {
          "paths": [
            {
              "component > component-resolver > unglob > glob > minimatch": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-resolver > component-downloader > unglob > glob > minimatch": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-build > component-builder > component-manifest > unglob > glob > minimatch": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-resolver > unglob > minimatch": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-watcher > sane > minimatch": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-resolver > component-downloader > unglob > minimatch": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-build > component-builder > component-manifest > unglob > minimatch": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            }
          ]
        },
        "npm:qs:20140806-1": {
          "paths": [
            {
              "component > superagent > qs": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > tiny-lr-fork > qs": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            }
          ]
        },
        "npm:semver:20150403": {
          "paths": [
            {
              "component > semver": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-flatten > semver": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-outdated2 > semver": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-remotes > semver": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-pin > semver": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-resolver > semver": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-updater > semver": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-outdated2 > component-flatten > semver": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-pin > component-flatten > semver": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-resolver > component-flatten > semver": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-updater > component-flatten > semver": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-outdated2 > component-remotes > semver": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-pin > component-remotes > semver": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-resolver > component-remotes > semver": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-updater > component-remotes > semver": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-resolver > component-downloader > semver": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-build > component-builder > component-flatten > semver": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            },
            {
              "component > component-resolver > component-downloader > component-remotes > semver": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            }
          ]
        },
        "npm:tar:20151103": {
          "paths": [
            {
              "component > component-resolver > component-downloader > decompress > tar": {
                "patched": "2024-12-23T16:43:42.270Z"
              }
            }
          ]
        }
      },
      "ignore": {},
      "pin": {}
    },
    "filesystemPolicy": false,
    "filtered": {
      "ignore": [],
      "patch": []
    },
    "uniqueCount": 48,
    "projectName": "next-gen-gui",
    "foundProjectCount": 1,
    "displayTargetFile": "next-gen-gui/package-lock.json",
    "hasUnknownVersions": false,
    "path": "app/syncthing"
  }
]
