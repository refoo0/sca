{
  "SchemaVersion": 2,
  "CreatedAt": "2024-12-23T17:08:06.564844+01:00",
  "ArtifactName": "app/kubernetes",
  "ArtifactType": "filesystem",
  "Metadata": {
    "ImageConfig": {
      "architecture": "",
      "created": "0001-01-01T00:00:00Z",
      "os": "",
      "rootfs": {
        "type": "",
        "diff_ids": null
      },
      "config": {}
    }
  },
  "Results": [
    {
      "Target": "go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-51744",
          "PkgID": "github.com/golang-jwt/jwt/v4@v4.5.0",
          "PkgName": "github.com/golang-jwt/jwt/v4",
          "PkgIdentifier": {
            "PURL": "pkg:golang/github.com/golang-jwt/jwt/v4@v4.5.0",
            "UID": "69e102e090698c3f"
          },
          "InstalledVersion": "v4.5.0",
          "FixedVersion": "4.5.1",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-51744",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang-jwt: Bad documentation of error handling in ParseWithClaims can lead to potentially dangerous situations in golang-jwt",
          "Description": "golang-jwt is a Go implementation of JSON Web Tokens. Unclear documentation of the error behavior in `ParseWithClaims` can lead to situation where users are potentially not checking errors in the way they should be. Especially, if a token is both expired and invalid, the errors returned by `ParseWithClaims` return both error codes. If users only check for the `jwt.ErrTokenExpired ` using `error.Is`, they will ignore the embedded `jwt.ErrTokenSignatureInvalid` and thus potentially accept invalid tokens. A fix has been back-ported with the error handling logic from the `v5` branch to the `v4` branch. In this logic, the `ParseWithClaims` function will immediately return in \"dangerous\" situations (e.g., an invalid signature), limiting the combined errors only to situations where the signature is valid, but further validation failed (e.g., if the signature is valid, but is expired AND has the wrong audience). This fix is part of the 4.5.1 release. We are aware that this changes the behaviour of an established function and is not 100 % backwards compatible, so updating to 4.5.1 might break your code. In case you cannot update to 4.5.0, please make sure that you are properly checking for all errors (\"dangerous\" ones first), so that you are not running in the case detailed above.",
          "Severity": "LOW",
          "CweIDs": [
            "CWE-755"
          ],
          "VendorSeverity": {
            "ghsa": 1,
            "redhat": 1
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N",
              "V3Score": 3.1
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N",
              "V3Score": 3.1
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-51744",
            "https://github.com/golang-jwt/jwt",
            "https://github.com/golang-jwt/jwt/commit/7b1c1c00a171c6c79bbdb40e4ce7d197060c1c2c",
            "https://github.com/golang-jwt/jwt/security/advisories/GHSA-29wx-vh33-7x7r",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-51744",
            "https://www.cve.org/CVERecord?id=CVE-2024-51744"
          ],
          "PublishedDate": "2024-11-04T22:15:03.997Z",
          "LastModifiedDate": "2024-11-05T16:04:26.053Z"
        },
        {
          "VulnerabilityID": "CVE-2023-45142",
          "PkgID": "go.opentelemetry.io/contrib/instrumentation/github.com/emicklei/go-restful/otelrestful@v0.42.0",
          "PkgName": "go.opentelemetry.io/contrib/instrumentation/github.com/emicklei/go-restful/otelrestful",
          "PkgIdentifier": {
            "PURL": "pkg:golang/go.opentelemetry.io/contrib/instrumentation/github.com/emicklei/go-restful/otelrestful@v0.42.0",
            "UID": "aa788131728d9a86"
          },
          "InstalledVersion": "v0.42.0",
          "FixedVersion": "0.44.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-45142",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "opentelemetry: DoS vulnerability in otelhttp",
          "Description": "OpenTelemetry-Go Contrib is a collection of third-party packages for OpenTelemetry-Go. A handler wrapper out of the box adds labels `http.user_agent` and `http.method` that have unbound cardinality. It leads to the server's potential memory exhaustion when many malicious requests are sent to it. HTTP header User-Agent or HTTP method for requests can be easily set by an attacker to be random and long. The library internally uses `httpconv.ServerRequest` that records every value for HTTP `method` and `User-Agent`. In order to be affected, a program has to use the `otelhttp.NewHandler` wrapper and not filter any unknown HTTP methods or User agents on the level of CDN, LB, previous middleware, etc. Version 0.44.0 fixed this issue when the values collected for attribute `http.request.method` were changed to be restricted to a set of well-known values and other high cardinality attributes were removed. As a workaround to stop being affected, `otelhttp.WithFilter()` can be used, but it requires manual careful configuration to not log certain requests entirely. For convenience and safe usage of this library, it should by default mark with the label `unknown` non-standard HTTP methods and User agents to show that such requests were made but do not increase cardinality. In case someone wants to stay with the current behavior, library API should allow to enable it.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-770"
          ],
          "VendorSeverity": {
            "amazon": 3,
            "azure": 3,
            "cbl-mariner": 3,
            "ghsa": 3,
            "nvd": 3,
            "redhat": 2
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2023-45142",
            "https://github.com/advisories/GHSA-cg3q-j54f-5p7p",
            "https://github.com/open-telemetry/opentelemetry-go-contrib",
            "https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65",
            "https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277",
            "https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0",
            "https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh",
            "https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-rcjv-mgp8-qvmr",
            "https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223",
            "https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2UTRJ54INZG3OC2FTAN6AFB2RYNY2GAD",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2UTRJ54INZG3OC2FTAN6AFB2RYNY2GAD/",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-45142",
            "https://www.cve.org/CVERecord?id=CVE-2023-45142"
          ],
          "PublishedDate": "2023-10-12T17:15:09.99Z",
          "LastModifiedDate": "2024-02-19T03:15:07.697Z"
        },
        {
          "VulnerabilityID": "CVE-2024-45337",
          "PkgID": "golang.org/x/crypto@v0.28.0",
          "PkgName": "golang.org/x/crypto",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/crypto@v0.28.0",
            "UID": "de464cbdda239f00"
          },
          "InstalledVersion": "v0.28.0",
          "FixedVersion": "0.31.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45337",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/crypto/ssh: Misuse of ServerConfig.PublicKeyCallback may cause authorization bypass in golang.org/x/crypto",
          "Description": "Applications and libraries which misuse the ServerConfig.PublicKeyCallback callback may be susceptible to an authorization bypass. The documentation for ServerConfig.PublicKeyCallback says that \"A call to this function does not guarantee that the key offered is in fact used to authenticate.\" Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. PublicKeyCallback may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to PublicKeyCallback (or derived information) and make security relevant determinations based on it once the connection is established, may make incorrect assumptions. For example, an attacker may send public keys A and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key. Since this API is widely misused, as a partial mitigation golang.org/x/cry...@v0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to PublicKeyCallback if the connection is then authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or NoClientAuth. Users should be using the Extensions field of the Permissions return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing external state. Once the connection is established the state corresponding to the successful authentication attempt can be retrieved via the ServerConn.Permissions field. Note that some third-party libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party libraries should refer to the relevant projects for guidance.",
          "Severity": "CRITICAL",
          "VendorSeverity": {
            "azure": 4,
            "cbl-mariner": 4,
            "ghsa": 4,
            "redhat": 3
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
              "V3Score": 9.1
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:N",
              "V3Score": 8.2
            }
          },
          "References": [
            "http://www.openwall.com/lists/oss-security/2024/12/11/2",
            "https://access.redhat.com/security/cve/CVE-2024-45337",
            "https://github.com/golang/crypto",
            "https://github.com/golang/crypto/commit/b4f1988a35dee11ec3e05d6bf3e90b695fbd8909",
            "https://go.dev/cl/635315",
            "https://go.dev/issue/70779",
            "https://groups.google.com/g/golang-announce/c/-nPEi39gI4Q/m/cGVPJCqdAQAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45337",
            "https://pkg.go.dev/vuln/GO-2024-3321",
            "https://www.cve.org/CVERecord?id=CVE-2024-45337"
          ],
          "PublishedDate": "2024-12-12T02:02:07.97Z",
          "LastModifiedDate": "2024-12-12T21:15:08.5Z"
        },
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "58fa78088b53d13f"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        },
        {
          "VulnerabilityID": "CVE-2024-28180",
          "PkgID": "gopkg.in/square/go-jose.v2@v2.6.0",
          "PkgName": "gopkg.in/square/go-jose.v2",
          "PkgIdentifier": {
            "PURL": "pkg:golang/gopkg.in/square/go-jose.v2@v2.6.0",
            "UID": "e0d43093dc8f519"
          },
          "InstalledVersion": "v2.6.0",
          "Status": "affected",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-28180",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "jose-go: improper handling of highly compressed data",
          "Description": "Package jose aims to provide an implementation of the Javascript Object Signing and Encryption set of standards. An attacker could send a JWE containing compressed data that used large amounts of memory and CPU when decompressed by Decrypt or DecryptMulti. Those functions now return an error if the decompressed data would exceed 250kB or 10x the compressed size (whichever is larger). This vulnerability has been patched in versions 4.0.1, 3.0.3 and 2.6.3.\n",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-409"
          ],
          "VendorSeverity": {
            "alma": 2,
            "amazon": 2,
            "azure": 2,
            "cbl-mariner": 2,
            "ghsa": 2,
            "oracle-oval": 2,
            "redhat": 2,
            "rocky": 2
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L",
              "V3Score": 4.3
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L",
              "V3Score": 4.3
            }
          },
          "References": [
            "https://access.redhat.com/errata/RHSA-2024:3827",
            "https://access.redhat.com/security/cve/CVE-2024-28180",
            "https://bugzilla.redhat.com/2268017",
            "https://bugzilla.redhat.com/2268820",
            "https://bugzilla.redhat.com/2268854",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2268017",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2268820",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2268854",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-45290",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28176",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28180",
            "https://errata.almalinux.org/9/ALSA-2024-3827.html",
            "https://errata.rockylinux.org/RLSA-2024:3827",
            "https://github.com/go-jose/go-jose",
            "https://github.com/go-jose/go-jose/commit/0dd4dd541c665fb292d664f77604ba694726f298",
            "https://github.com/go-jose/go-jose/commit/add6a284ea0f844fd6628cba637be5451fe4b28a",
            "https://github.com/go-jose/go-jose/commit/f4c051a0653d78199a053892f7619ebf96339502",
            "https://github.com/go-jose/go-jose/security/advisories/GHSA-c5q2-7r4c-mv6g",
            "https://linux.oracle.com/cve/CVE-2024-28180.html",
            "https://linux.oracle.com/errata/ELSA-2024-3968.html",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GD2GSBQTBLYADASUBHHZV2CZPTSLIPQJ",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GD2GSBQTBLYADASUBHHZV2CZPTSLIPQJ/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/I6MMWFBOXJA6ZCXNVPDFJ4XMK5PVG5RG",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/I6MMWFBOXJA6ZCXNVPDFJ4XMK5PVG5RG/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IJ6LAJJ2FTA2JVVOACCV5RZTOIZLXUNJ",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IJ6LAJJ2FTA2JVVOACCV5RZTOIZLXUNJ/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JNPMXL36YGS3GQEVI3Q5HKHJ7YAAQXL5",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JNPMXL36YGS3GQEVI3Q5HKHJ7YAAQXL5/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KXKGNCRU7OTM5AHC7YIYBNOWI742PRMY",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KXKGNCRU7OTM5AHC7YIYBNOWI742PRMY/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MSOMHDKRPU3A2JEMRODT2IREDFBLVPGS",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MSOMHDKRPU3A2JEMRODT2IREDFBLVPGS/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UG5FSEYJ3GP27FZXC5YAAMMEC5XWKJHG",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UG5FSEYJ3GP27FZXC5YAAMMEC5XWKJHG/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UJO2U5ACZVACNQXJ5EBRFLFW6DP5BROY",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UJO2U5ACZVACNQXJ5EBRFLFW6DP5BROY/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XJDO5VSIAOGT2WP63AXAAWNRSVJCNCRH",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XJDO5VSIAOGT2WP63AXAAWNRSVJCNCRH/",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-28180",
            "https://www.cve.org/CVERecord?id=CVE-2024-28180"
          ],
          "PublishedDate": "2024-03-09T01:15:07.34Z",
          "LastModifiedDate": "2024-06-12T02:15:09.82Z"
        }
      ]
    },
    {
      "Target": "hack/tools/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod"
    },
    {
      "Target": "staging/src/k8s.io/api/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "4a9581fa13d73aa5"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/apiextensions-apiserver/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-51744",
          "PkgID": "github.com/golang-jwt/jwt/v4@v4.5.0",
          "PkgName": "github.com/golang-jwt/jwt/v4",
          "PkgIdentifier": {
            "PURL": "pkg:golang/github.com/golang-jwt/jwt/v4@v4.5.0",
            "UID": "5e96fe362854a5de"
          },
          "InstalledVersion": "v4.5.0",
          "FixedVersion": "4.5.1",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-51744",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang-jwt: Bad documentation of error handling in ParseWithClaims can lead to potentially dangerous situations in golang-jwt",
          "Description": "golang-jwt is a Go implementation of JSON Web Tokens. Unclear documentation of the error behavior in `ParseWithClaims` can lead to situation where users are potentially not checking errors in the way they should be. Especially, if a token is both expired and invalid, the errors returned by `ParseWithClaims` return both error codes. If users only check for the `jwt.ErrTokenExpired ` using `error.Is`, they will ignore the embedded `jwt.ErrTokenSignatureInvalid` and thus potentially accept invalid tokens. A fix has been back-ported with the error handling logic from the `v5` branch to the `v4` branch. In this logic, the `ParseWithClaims` function will immediately return in \"dangerous\" situations (e.g., an invalid signature), limiting the combined errors only to situations where the signature is valid, but further validation failed (e.g., if the signature is valid, but is expired AND has the wrong audience). This fix is part of the 4.5.1 release. We are aware that this changes the behaviour of an established function and is not 100 % backwards compatible, so updating to 4.5.1 might break your code. In case you cannot update to 4.5.0, please make sure that you are properly checking for all errors (\"dangerous\" ones first), so that you are not running in the case detailed above.",
          "Severity": "LOW",
          "CweIDs": [
            "CWE-755"
          ],
          "VendorSeverity": {
            "ghsa": 1,
            "redhat": 1
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N",
              "V3Score": 3.1
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N",
              "V3Score": 3.1
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-51744",
            "https://github.com/golang-jwt/jwt",
            "https://github.com/golang-jwt/jwt/commit/7b1c1c00a171c6c79bbdb40e4ce7d197060c1c2c",
            "https://github.com/golang-jwt/jwt/security/advisories/GHSA-29wx-vh33-7x7r",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-51744",
            "https://www.cve.org/CVERecord?id=CVE-2024-51744"
          ],
          "PublishedDate": "2024-11-04T22:15:03.997Z",
          "LastModifiedDate": "2024-11-05T16:04:26.053Z"
        },
        {
          "VulnerabilityID": "CVE-2024-45337",
          "PkgID": "golang.org/x/crypto@v0.28.0",
          "PkgName": "golang.org/x/crypto",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/crypto@v0.28.0",
            "UID": "2f7d02de330bbfad"
          },
          "InstalledVersion": "v0.28.0",
          "FixedVersion": "0.31.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45337",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/crypto/ssh: Misuse of ServerConfig.PublicKeyCallback may cause authorization bypass in golang.org/x/crypto",
          "Description": "Applications and libraries which misuse the ServerConfig.PublicKeyCallback callback may be susceptible to an authorization bypass. The documentation for ServerConfig.PublicKeyCallback says that \"A call to this function does not guarantee that the key offered is in fact used to authenticate.\" Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. PublicKeyCallback may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to PublicKeyCallback (or derived information) and make security relevant determinations based on it once the connection is established, may make incorrect assumptions. For example, an attacker may send public keys A and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key. Since this API is widely misused, as a partial mitigation golang.org/x/cry...@v0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to PublicKeyCallback if the connection is then authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or NoClientAuth. Users should be using the Extensions field of the Permissions return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing external state. Once the connection is established the state corresponding to the successful authentication attempt can be retrieved via the ServerConn.Permissions field. Note that some third-party libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party libraries should refer to the relevant projects for guidance.",
          "Severity": "CRITICAL",
          "VendorSeverity": {
            "azure": 4,
            "cbl-mariner": 4,
            "ghsa": 4,
            "redhat": 3
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
              "V3Score": 9.1
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:N",
              "V3Score": 8.2
            }
          },
          "References": [
            "http://www.openwall.com/lists/oss-security/2024/12/11/2",
            "https://access.redhat.com/security/cve/CVE-2024-45337",
            "https://github.com/golang/crypto",
            "https://github.com/golang/crypto/commit/b4f1988a35dee11ec3e05d6bf3e90b695fbd8909",
            "https://go.dev/cl/635315",
            "https://go.dev/issue/70779",
            "https://groups.google.com/g/golang-announce/c/-nPEi39gI4Q/m/cGVPJCqdAQAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45337",
            "https://pkg.go.dev/vuln/GO-2024-3321",
            "https://www.cve.org/CVERecord?id=CVE-2024-45337"
          ],
          "PublishedDate": "2024-12-12T02:02:07.97Z",
          "LastModifiedDate": "2024-12-12T21:15:08.5Z"
        },
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "97a10f7b538afc28"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/apimachinery/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "7dce0bdb4b8bec85"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/apiserver/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-51744",
          "PkgID": "github.com/golang-jwt/jwt/v4@v4.5.0",
          "PkgName": "github.com/golang-jwt/jwt/v4",
          "PkgIdentifier": {
            "PURL": "pkg:golang/github.com/golang-jwt/jwt/v4@v4.5.0",
            "UID": "eb969e5aab7a48a1"
          },
          "InstalledVersion": "v4.5.0",
          "FixedVersion": "4.5.1",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-51744",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang-jwt: Bad documentation of error handling in ParseWithClaims can lead to potentially dangerous situations in golang-jwt",
          "Description": "golang-jwt is a Go implementation of JSON Web Tokens. Unclear documentation of the error behavior in `ParseWithClaims` can lead to situation where users are potentially not checking errors in the way they should be. Especially, if a token is both expired and invalid, the errors returned by `ParseWithClaims` return both error codes. If users only check for the `jwt.ErrTokenExpired ` using `error.Is`, they will ignore the embedded `jwt.ErrTokenSignatureInvalid` and thus potentially accept invalid tokens. A fix has been back-ported with the error handling logic from the `v5` branch to the `v4` branch. In this logic, the `ParseWithClaims` function will immediately return in \"dangerous\" situations (e.g., an invalid signature), limiting the combined errors only to situations where the signature is valid, but further validation failed (e.g., if the signature is valid, but is expired AND has the wrong audience). This fix is part of the 4.5.1 release. We are aware that this changes the behaviour of an established function and is not 100 % backwards compatible, so updating to 4.5.1 might break your code. In case you cannot update to 4.5.0, please make sure that you are properly checking for all errors (\"dangerous\" ones first), so that you are not running in the case detailed above.",
          "Severity": "LOW",
          "CweIDs": [
            "CWE-755"
          ],
          "VendorSeverity": {
            "ghsa": 1,
            "redhat": 1
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N",
              "V3Score": 3.1
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N",
              "V3Score": 3.1
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-51744",
            "https://github.com/golang-jwt/jwt",
            "https://github.com/golang-jwt/jwt/commit/7b1c1c00a171c6c79bbdb40e4ce7d197060c1c2c",
            "https://github.com/golang-jwt/jwt/security/advisories/GHSA-29wx-vh33-7x7r",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-51744",
            "https://www.cve.org/CVERecord?id=CVE-2024-51744"
          ],
          "PublishedDate": "2024-11-04T22:15:03.997Z",
          "LastModifiedDate": "2024-11-05T16:04:26.053Z"
        },
        {
          "VulnerabilityID": "CVE-2024-45337",
          "PkgID": "golang.org/x/crypto@v0.28.0",
          "PkgName": "golang.org/x/crypto",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/crypto@v0.28.0",
            "UID": "7f45c5b0adf5359d"
          },
          "InstalledVersion": "v0.28.0",
          "FixedVersion": "0.31.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45337",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/crypto/ssh: Misuse of ServerConfig.PublicKeyCallback may cause authorization bypass in golang.org/x/crypto",
          "Description": "Applications and libraries which misuse the ServerConfig.PublicKeyCallback callback may be susceptible to an authorization bypass. The documentation for ServerConfig.PublicKeyCallback says that \"A call to this function does not guarantee that the key offered is in fact used to authenticate.\" Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. PublicKeyCallback may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to PublicKeyCallback (or derived information) and make security relevant determinations based on it once the connection is established, may make incorrect assumptions. For example, an attacker may send public keys A and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key. Since this API is widely misused, as a partial mitigation golang.org/x/cry...@v0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to PublicKeyCallback if the connection is then authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or NoClientAuth. Users should be using the Extensions field of the Permissions return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing external state. Once the connection is established the state corresponding to the successful authentication attempt can be retrieved via the ServerConn.Permissions field. Note that some third-party libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party libraries should refer to the relevant projects for guidance.",
          "Severity": "CRITICAL",
          "VendorSeverity": {
            "azure": 4,
            "cbl-mariner": 4,
            "ghsa": 4,
            "redhat": 3
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
              "V3Score": 9.1
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:N",
              "V3Score": 8.2
            }
          },
          "References": [
            "http://www.openwall.com/lists/oss-security/2024/12/11/2",
            "https://access.redhat.com/security/cve/CVE-2024-45337",
            "https://github.com/golang/crypto",
            "https://github.com/golang/crypto/commit/b4f1988a35dee11ec3e05d6bf3e90b695fbd8909",
            "https://go.dev/cl/635315",
            "https://go.dev/issue/70779",
            "https://groups.google.com/g/golang-announce/c/-nPEi39gI4Q/m/cGVPJCqdAQAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45337",
            "https://pkg.go.dev/vuln/GO-2024-3321",
            "https://www.cve.org/CVERecord?id=CVE-2024-45337"
          ],
          "PublishedDate": "2024-12-12T02:02:07.97Z",
          "LastModifiedDate": "2024-12-12T21:15:08.5Z"
        },
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "501df1556b172dc4"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        },
        {
          "VulnerabilityID": "CVE-2024-28180",
          "PkgID": "gopkg.in/square/go-jose.v2@v2.6.0",
          "PkgName": "gopkg.in/square/go-jose.v2",
          "PkgIdentifier": {
            "PURL": "pkg:golang/gopkg.in/square/go-jose.v2@v2.6.0",
            "UID": "66c2a85e80ed1792"
          },
          "InstalledVersion": "v2.6.0",
          "Status": "affected",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-28180",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "jose-go: improper handling of highly compressed data",
          "Description": "Package jose aims to provide an implementation of the Javascript Object Signing and Encryption set of standards. An attacker could send a JWE containing compressed data that used large amounts of memory and CPU when decompressed by Decrypt or DecryptMulti. Those functions now return an error if the decompressed data would exceed 250kB or 10x the compressed size (whichever is larger). This vulnerability has been patched in versions 4.0.1, 3.0.3 and 2.6.3.\n",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-409"
          ],
          "VendorSeverity": {
            "alma": 2,
            "amazon": 2,
            "azure": 2,
            "cbl-mariner": 2,
            "ghsa": 2,
            "oracle-oval": 2,
            "redhat": 2,
            "rocky": 2
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L",
              "V3Score": 4.3
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L",
              "V3Score": 4.3
            }
          },
          "References": [
            "https://access.redhat.com/errata/RHSA-2024:3827",
            "https://access.redhat.com/security/cve/CVE-2024-28180",
            "https://bugzilla.redhat.com/2268017",
            "https://bugzilla.redhat.com/2268820",
            "https://bugzilla.redhat.com/2268854",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2268017",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2268820",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2268854",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-45290",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28176",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28180",
            "https://errata.almalinux.org/9/ALSA-2024-3827.html",
            "https://errata.rockylinux.org/RLSA-2024:3827",
            "https://github.com/go-jose/go-jose",
            "https://github.com/go-jose/go-jose/commit/0dd4dd541c665fb292d664f77604ba694726f298",
            "https://github.com/go-jose/go-jose/commit/add6a284ea0f844fd6628cba637be5451fe4b28a",
            "https://github.com/go-jose/go-jose/commit/f4c051a0653d78199a053892f7619ebf96339502",
            "https://github.com/go-jose/go-jose/security/advisories/GHSA-c5q2-7r4c-mv6g",
            "https://linux.oracle.com/cve/CVE-2024-28180.html",
            "https://linux.oracle.com/errata/ELSA-2024-3968.html",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GD2GSBQTBLYADASUBHHZV2CZPTSLIPQJ",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GD2GSBQTBLYADASUBHHZV2CZPTSLIPQJ/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/I6MMWFBOXJA6ZCXNVPDFJ4XMK5PVG5RG",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/I6MMWFBOXJA6ZCXNVPDFJ4XMK5PVG5RG/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IJ6LAJJ2FTA2JVVOACCV5RZTOIZLXUNJ",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IJ6LAJJ2FTA2JVVOACCV5RZTOIZLXUNJ/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JNPMXL36YGS3GQEVI3Q5HKHJ7YAAQXL5",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JNPMXL36YGS3GQEVI3Q5HKHJ7YAAQXL5/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KXKGNCRU7OTM5AHC7YIYBNOWI742PRMY",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KXKGNCRU7OTM5AHC7YIYBNOWI742PRMY/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MSOMHDKRPU3A2JEMRODT2IREDFBLVPGS",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MSOMHDKRPU3A2JEMRODT2IREDFBLVPGS/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UG5FSEYJ3GP27FZXC5YAAMMEC5XWKJHG",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UG5FSEYJ3GP27FZXC5YAAMMEC5XWKJHG/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UJO2U5ACZVACNQXJ5EBRFLFW6DP5BROY",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UJO2U5ACZVACNQXJ5EBRFLFW6DP5BROY/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XJDO5VSIAOGT2WP63AXAAWNRSVJCNCRH",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XJDO5VSIAOGT2WP63AXAAWNRSVJCNCRH/",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-28180",
            "https://www.cve.org/CVERecord?id=CVE-2024-28180"
          ],
          "PublishedDate": "2024-03-09T01:15:07.34Z",
          "LastModifiedDate": "2024-06-12T02:15:09.82Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/cli-runtime/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "5e8e83aea10f4703"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/client-go/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "75ce85a8485f6518"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/cloud-provider/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45337",
          "PkgID": "golang.org/x/crypto@v0.28.0",
          "PkgName": "golang.org/x/crypto",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/crypto@v0.28.0",
            "UID": "79c46f9117c48fb9"
          },
          "InstalledVersion": "v0.28.0",
          "FixedVersion": "0.31.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45337",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/crypto/ssh: Misuse of ServerConfig.PublicKeyCallback may cause authorization bypass in golang.org/x/crypto",
          "Description": "Applications and libraries which misuse the ServerConfig.PublicKeyCallback callback may be susceptible to an authorization bypass. The documentation for ServerConfig.PublicKeyCallback says that \"A call to this function does not guarantee that the key offered is in fact used to authenticate.\" Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. PublicKeyCallback may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to PublicKeyCallback (or derived information) and make security relevant determinations based on it once the connection is established, may make incorrect assumptions. For example, an attacker may send public keys A and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key. Since this API is widely misused, as a partial mitigation golang.org/x/cry...@v0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to PublicKeyCallback if the connection is then authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or NoClientAuth. Users should be using the Extensions field of the Permissions return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing external state. Once the connection is established the state corresponding to the successful authentication attempt can be retrieved via the ServerConn.Permissions field. Note that some third-party libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party libraries should refer to the relevant projects for guidance.",
          "Severity": "CRITICAL",
          "VendorSeverity": {
            "azure": 4,
            "cbl-mariner": 4,
            "ghsa": 4,
            "redhat": 3
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
              "V3Score": 9.1
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:N",
              "V3Score": 8.2
            }
          },
          "References": [
            "http://www.openwall.com/lists/oss-security/2024/12/11/2",
            "https://access.redhat.com/security/cve/CVE-2024-45337",
            "https://github.com/golang/crypto",
            "https://github.com/golang/crypto/commit/b4f1988a35dee11ec3e05d6bf3e90b695fbd8909",
            "https://go.dev/cl/635315",
            "https://go.dev/issue/70779",
            "https://groups.google.com/g/golang-announce/c/-nPEi39gI4Q/m/cGVPJCqdAQAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45337",
            "https://pkg.go.dev/vuln/GO-2024-3321",
            "https://www.cve.org/CVERecord?id=CVE-2024-45337"
          ],
          "PublishedDate": "2024-12-12T02:02:07.97Z",
          "LastModifiedDate": "2024-12-12T21:15:08.5Z"
        },
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "52717c488ff79d50"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/cluster-bootstrap/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45337",
          "PkgID": "golang.org/x/crypto@v0.28.0",
          "PkgName": "golang.org/x/crypto",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/crypto@v0.28.0",
            "UID": "8d88b1bba4fc6f02"
          },
          "InstalledVersion": "v0.28.0",
          "FixedVersion": "0.31.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45337",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/crypto/ssh: Misuse of ServerConfig.PublicKeyCallback may cause authorization bypass in golang.org/x/crypto",
          "Description": "Applications and libraries which misuse the ServerConfig.PublicKeyCallback callback may be susceptible to an authorization bypass. The documentation for ServerConfig.PublicKeyCallback says that \"A call to this function does not guarantee that the key offered is in fact used to authenticate.\" Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. PublicKeyCallback may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to PublicKeyCallback (or derived information) and make security relevant determinations based on it once the connection is established, may make incorrect assumptions. For example, an attacker may send public keys A and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key. Since this API is widely misused, as a partial mitigation golang.org/x/cry...@v0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to PublicKeyCallback if the connection is then authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or NoClientAuth. Users should be using the Extensions field of the Permissions return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing external state. Once the connection is established the state corresponding to the successful authentication attempt can be retrieved via the ServerConn.Permissions field. Note that some third-party libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party libraries should refer to the relevant projects for guidance.",
          "Severity": "CRITICAL",
          "VendorSeverity": {
            "azure": 4,
            "cbl-mariner": 4,
            "ghsa": 4,
            "redhat": 3
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
              "V3Score": 9.1
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:N",
              "V3Score": 8.2
            }
          },
          "References": [
            "http://www.openwall.com/lists/oss-security/2024/12/11/2",
            "https://access.redhat.com/security/cve/CVE-2024-45337",
            "https://github.com/golang/crypto",
            "https://github.com/golang/crypto/commit/b4f1988a35dee11ec3e05d6bf3e90b695fbd8909",
            "https://go.dev/cl/635315",
            "https://go.dev/issue/70779",
            "https://groups.google.com/g/golang-announce/c/-nPEi39gI4Q/m/cGVPJCqdAQAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45337",
            "https://pkg.go.dev/vuln/GO-2024-3321",
            "https://www.cve.org/CVERecord?id=CVE-2024-45337"
          ],
          "PublishedDate": "2024-12-12T02:02:07.97Z",
          "LastModifiedDate": "2024-12-12T21:15:08.5Z"
        },
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "35ed0b7ca4efc67f"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        },
        {
          "VulnerabilityID": "CVE-2024-28180",
          "PkgID": "gopkg.in/square/go-jose.v2@v2.6.0",
          "PkgName": "gopkg.in/square/go-jose.v2",
          "PkgIdentifier": {
            "PURL": "pkg:golang/gopkg.in/square/go-jose.v2@v2.6.0",
            "UID": "32aa9b79ee8758ee"
          },
          "InstalledVersion": "v2.6.0",
          "Status": "affected",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-28180",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "jose-go: improper handling of highly compressed data",
          "Description": "Package jose aims to provide an implementation of the Javascript Object Signing and Encryption set of standards. An attacker could send a JWE containing compressed data that used large amounts of memory and CPU when decompressed by Decrypt or DecryptMulti. Those functions now return an error if the decompressed data would exceed 250kB or 10x the compressed size (whichever is larger). This vulnerability has been patched in versions 4.0.1, 3.0.3 and 2.6.3.\n",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-409"
          ],
          "VendorSeverity": {
            "alma": 2,
            "amazon": 2,
            "azure": 2,
            "cbl-mariner": 2,
            "ghsa": 2,
            "oracle-oval": 2,
            "redhat": 2,
            "rocky": 2
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L",
              "V3Score": 4.3
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L",
              "V3Score": 4.3
            }
          },
          "References": [
            "https://access.redhat.com/errata/RHSA-2024:3827",
            "https://access.redhat.com/security/cve/CVE-2024-28180",
            "https://bugzilla.redhat.com/2268017",
            "https://bugzilla.redhat.com/2268820",
            "https://bugzilla.redhat.com/2268854",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2268017",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2268820",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2268854",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-45290",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28176",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28180",
            "https://errata.almalinux.org/9/ALSA-2024-3827.html",
            "https://errata.rockylinux.org/RLSA-2024:3827",
            "https://github.com/go-jose/go-jose",
            "https://github.com/go-jose/go-jose/commit/0dd4dd541c665fb292d664f77604ba694726f298",
            "https://github.com/go-jose/go-jose/commit/add6a284ea0f844fd6628cba637be5451fe4b28a",
            "https://github.com/go-jose/go-jose/commit/f4c051a0653d78199a053892f7619ebf96339502",
            "https://github.com/go-jose/go-jose/security/advisories/GHSA-c5q2-7r4c-mv6g",
            "https://linux.oracle.com/cve/CVE-2024-28180.html",
            "https://linux.oracle.com/errata/ELSA-2024-3968.html",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GD2GSBQTBLYADASUBHHZV2CZPTSLIPQJ",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GD2GSBQTBLYADASUBHHZV2CZPTSLIPQJ/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/I6MMWFBOXJA6ZCXNVPDFJ4XMK5PVG5RG",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/I6MMWFBOXJA6ZCXNVPDFJ4XMK5PVG5RG/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IJ6LAJJ2FTA2JVVOACCV5RZTOIZLXUNJ",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IJ6LAJJ2FTA2JVVOACCV5RZTOIZLXUNJ/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JNPMXL36YGS3GQEVI3Q5HKHJ7YAAQXL5",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JNPMXL36YGS3GQEVI3Q5HKHJ7YAAQXL5/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KXKGNCRU7OTM5AHC7YIYBNOWI742PRMY",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KXKGNCRU7OTM5AHC7YIYBNOWI742PRMY/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MSOMHDKRPU3A2JEMRODT2IREDFBLVPGS",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MSOMHDKRPU3A2JEMRODT2IREDFBLVPGS/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UG5FSEYJ3GP27FZXC5YAAMMEC5XWKJHG",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UG5FSEYJ3GP27FZXC5YAAMMEC5XWKJHG/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UJO2U5ACZVACNQXJ5EBRFLFW6DP5BROY",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UJO2U5ACZVACNQXJ5EBRFLFW6DP5BROY/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XJDO5VSIAOGT2WP63AXAAWNRSVJCNCRH",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XJDO5VSIAOGT2WP63AXAAWNRSVJCNCRH/",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-28180",
            "https://www.cve.org/CVERecord?id=CVE-2024-28180"
          ],
          "PublishedDate": "2024-03-09T01:15:07.34Z",
          "LastModifiedDate": "2024-06-12T02:15:09.82Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/code-generator/examples/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "c0ab63d1ecc69b1a"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/code-generator/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod"
    },
    {
      "Target": "staging/src/k8s.io/component-base/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "357afadb1ef6d6b8"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/component-helpers/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "3cd493348e668f0c"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/controller-manager/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45337",
          "PkgID": "golang.org/x/crypto@v0.28.0",
          "PkgName": "golang.org/x/crypto",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/crypto@v0.28.0",
            "UID": "d2c561bea6330d9e"
          },
          "InstalledVersion": "v0.28.0",
          "FixedVersion": "0.31.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45337",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/crypto/ssh: Misuse of ServerConfig.PublicKeyCallback may cause authorization bypass in golang.org/x/crypto",
          "Description": "Applications and libraries which misuse the ServerConfig.PublicKeyCallback callback may be susceptible to an authorization bypass. The documentation for ServerConfig.PublicKeyCallback says that \"A call to this function does not guarantee that the key offered is in fact used to authenticate.\" Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. PublicKeyCallback may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to PublicKeyCallback (or derived information) and make security relevant determinations based on it once the connection is established, may make incorrect assumptions. For example, an attacker may send public keys A and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key. Since this API is widely misused, as a partial mitigation golang.org/x/cry...@v0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to PublicKeyCallback if the connection is then authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or NoClientAuth. Users should be using the Extensions field of the Permissions return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing external state. Once the connection is established the state corresponding to the successful authentication attempt can be retrieved via the ServerConn.Permissions field. Note that some third-party libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party libraries should refer to the relevant projects for guidance.",
          "Severity": "CRITICAL",
          "VendorSeverity": {
            "azure": 4,
            "cbl-mariner": 4,
            "ghsa": 4,
            "redhat": 3
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
              "V3Score": 9.1
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:N",
              "V3Score": 8.2
            }
          },
          "References": [
            "http://www.openwall.com/lists/oss-security/2024/12/11/2",
            "https://access.redhat.com/security/cve/CVE-2024-45337",
            "https://github.com/golang/crypto",
            "https://github.com/golang/crypto/commit/b4f1988a35dee11ec3e05d6bf3e90b695fbd8909",
            "https://go.dev/cl/635315",
            "https://go.dev/issue/70779",
            "https://groups.google.com/g/golang-announce/c/-nPEi39gI4Q/m/cGVPJCqdAQAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45337",
            "https://pkg.go.dev/vuln/GO-2024-3321",
            "https://www.cve.org/CVERecord?id=CVE-2024-45337"
          ],
          "PublishedDate": "2024-12-12T02:02:07.97Z",
          "LastModifiedDate": "2024-12-12T21:15:08.5Z"
        },
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "1daf66ea4c54ccfb"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/cri-api/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "1dd34924df21cec5"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/cri-client/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "a5c13ee6c5677f70"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/csi-translation-lib/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "ce68d019c937080b"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/dynamic-resource-allocation/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "6a4f114b470a4fb1"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/endpointslice/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "6cfbf488a233f20a"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/externaljwt/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "42ee6411f4ce34a6"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/kms/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "38814944af78d9d2"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/kms/internal/plugins/_mock/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "131205389a57b177"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/kube-aggregator/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45337",
          "PkgID": "golang.org/x/crypto@v0.28.0",
          "PkgName": "golang.org/x/crypto",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/crypto@v0.28.0",
            "UID": "917cf989f6bf0a73"
          },
          "InstalledVersion": "v0.28.0",
          "FixedVersion": "0.31.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45337",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/crypto/ssh: Misuse of ServerConfig.PublicKeyCallback may cause authorization bypass in golang.org/x/crypto",
          "Description": "Applications and libraries which misuse the ServerConfig.PublicKeyCallback callback may be susceptible to an authorization bypass. The documentation for ServerConfig.PublicKeyCallback says that \"A call to this function does not guarantee that the key offered is in fact used to authenticate.\" Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. PublicKeyCallback may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to PublicKeyCallback (or derived information) and make security relevant determinations based on it once the connection is established, may make incorrect assumptions. For example, an attacker may send public keys A and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key. Since this API is widely misused, as a partial mitigation golang.org/x/cry...@v0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to PublicKeyCallback if the connection is then authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or NoClientAuth. Users should be using the Extensions field of the Permissions return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing external state. Once the connection is established the state corresponding to the successful authentication attempt can be retrieved via the ServerConn.Permissions field. Note that some third-party libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party libraries should refer to the relevant projects for guidance.",
          "Severity": "CRITICAL",
          "VendorSeverity": {
            "azure": 4,
            "cbl-mariner": 4,
            "ghsa": 4,
            "redhat": 3
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
              "V3Score": 9.1
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:N",
              "V3Score": 8.2
            }
          },
          "References": [
            "http://www.openwall.com/lists/oss-security/2024/12/11/2",
            "https://access.redhat.com/security/cve/CVE-2024-45337",
            "https://github.com/golang/crypto",
            "https://github.com/golang/crypto/commit/b4f1988a35dee11ec3e05d6bf3e90b695fbd8909",
            "https://go.dev/cl/635315",
            "https://go.dev/issue/70779",
            "https://groups.google.com/g/golang-announce/c/-nPEi39gI4Q/m/cGVPJCqdAQAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45337",
            "https://pkg.go.dev/vuln/GO-2024-3321",
            "https://www.cve.org/CVERecord?id=CVE-2024-45337"
          ],
          "PublishedDate": "2024-12-12T02:02:07.97Z",
          "LastModifiedDate": "2024-12-12T21:15:08.5Z"
        },
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "fc5e644d39568335"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/kube-controller-manager/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "78217f99046a7408"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/kube-proxy/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "ae41f8aa58fadd55"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/kube-scheduler/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "5ca9f70352e34fe6"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/kubectl/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "5e0f64ed5bf86b4c"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/kubelet/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "1122e6293237e48d"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/metrics/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "180718d98fc98a5c"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/mount-utils/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod"
    },
    {
      "Target": "staging/src/k8s.io/pod-security-admission/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45337",
          "PkgID": "golang.org/x/crypto@v0.28.0",
          "PkgName": "golang.org/x/crypto",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/crypto@v0.28.0",
            "UID": "c7bca2a6c5a5df35"
          },
          "InstalledVersion": "v0.28.0",
          "FixedVersion": "0.31.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45337",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/crypto/ssh: Misuse of ServerConfig.PublicKeyCallback may cause authorization bypass in golang.org/x/crypto",
          "Description": "Applications and libraries which misuse the ServerConfig.PublicKeyCallback callback may be susceptible to an authorization bypass. The documentation for ServerConfig.PublicKeyCallback says that \"A call to this function does not guarantee that the key offered is in fact used to authenticate.\" Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. PublicKeyCallback may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to PublicKeyCallback (or derived information) and make security relevant determinations based on it once the connection is established, may make incorrect assumptions. For example, an attacker may send public keys A and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key. Since this API is widely misused, as a partial mitigation golang.org/x/cry...@v0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to PublicKeyCallback if the connection is then authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or NoClientAuth. Users should be using the Extensions field of the Permissions return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing external state. Once the connection is established the state corresponding to the successful authentication attempt can be retrieved via the ServerConn.Permissions field. Note that some third-party libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party libraries should refer to the relevant projects for guidance.",
          "Severity": "CRITICAL",
          "VendorSeverity": {
            "azure": 4,
            "cbl-mariner": 4,
            "ghsa": 4,
            "redhat": 3
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
              "V3Score": 9.1
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:N",
              "V3Score": 8.2
            }
          },
          "References": [
            "http://www.openwall.com/lists/oss-security/2024/12/11/2",
            "https://access.redhat.com/security/cve/CVE-2024-45337",
            "https://github.com/golang/crypto",
            "https://github.com/golang/crypto/commit/b4f1988a35dee11ec3e05d6bf3e90b695fbd8909",
            "https://go.dev/cl/635315",
            "https://go.dev/issue/70779",
            "https://groups.google.com/g/golang-announce/c/-nPEi39gI4Q/m/cGVPJCqdAQAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45337",
            "https://pkg.go.dev/vuln/GO-2024-3321",
            "https://www.cve.org/CVERecord?id=CVE-2024-45337"
          ],
          "PublishedDate": "2024-12-12T02:02:07.97Z",
          "LastModifiedDate": "2024-12-12T21:15:08.5Z"
        },
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "23d777e0126be51c"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/sample-apiserver/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45337",
          "PkgID": "golang.org/x/crypto@v0.28.0",
          "PkgName": "golang.org/x/crypto",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/crypto@v0.28.0",
            "UID": "81dfd55f6679c9c1"
          },
          "InstalledVersion": "v0.28.0",
          "FixedVersion": "0.31.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45337",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/crypto/ssh: Misuse of ServerConfig.PublicKeyCallback may cause authorization bypass in golang.org/x/crypto",
          "Description": "Applications and libraries which misuse the ServerConfig.PublicKeyCallback callback may be susceptible to an authorization bypass. The documentation for ServerConfig.PublicKeyCallback says that \"A call to this function does not guarantee that the key offered is in fact used to authenticate.\" Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. PublicKeyCallback may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to PublicKeyCallback (or derived information) and make security relevant determinations based on it once the connection is established, may make incorrect assumptions. For example, an attacker may send public keys A and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key. Since this API is widely misused, as a partial mitigation golang.org/x/cry...@v0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to PublicKeyCallback if the connection is then authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or NoClientAuth. Users should be using the Extensions field of the Permissions return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing external state. Once the connection is established the state corresponding to the successful authentication attempt can be retrieved via the ServerConn.Permissions field. Note that some third-party libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party libraries should refer to the relevant projects for guidance.",
          "Severity": "CRITICAL",
          "VendorSeverity": {
            "azure": 4,
            "cbl-mariner": 4,
            "ghsa": 4,
            "redhat": 3
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
              "V3Score": 9.1
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:N",
              "V3Score": 8.2
            }
          },
          "References": [
            "http://www.openwall.com/lists/oss-security/2024/12/11/2",
            "https://access.redhat.com/security/cve/CVE-2024-45337",
            "https://github.com/golang/crypto",
            "https://github.com/golang/crypto/commit/b4f1988a35dee11ec3e05d6bf3e90b695fbd8909",
            "https://go.dev/cl/635315",
            "https://go.dev/issue/70779",
            "https://groups.google.com/g/golang-announce/c/-nPEi39gI4Q/m/cGVPJCqdAQAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45337",
            "https://pkg.go.dev/vuln/GO-2024-3321",
            "https://www.cve.org/CVERecord?id=CVE-2024-45337"
          ],
          "PublishedDate": "2024-12-12T02:02:07.97Z",
          "LastModifiedDate": "2024-12-12T21:15:08.5Z"
        },
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "9b115be6b052a678"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/sample-cli-plugin/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "9f43ca336081d211"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "staging/src/k8s.io/sample-controller/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45338",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "fc37b6281019a1db"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45338",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Non-linear parsing of case-insensitive content in golang.org/x/net/html",
          "Description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3,
            "redhat": 3
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-45338",
            "https://cs.opensource.google/go/x/net",
            "https://github.com/golang/go/issues/70906",
            "https://go.dev/cl/637536",
            "https://go.dev/issue/70906",
            "https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45338",
            "https://pkg.go.dev/vuln/GO-2024-3333",
            "https://www.cve.org/CVERecord?id=CVE-2024-45338"
          ],
          "PublishedDate": "2024-12-18T21:15:08.173Z",
          "LastModifiedDate": "2024-12-18T21:15:08.173Z"
        }
      ]
    },
    {
      "Target": "vendor/go.opentelemetry.io/otel/requirements.txt",
      "Class": "lang-pkgs",
      "Type": "pip"
    }
  ]
}
